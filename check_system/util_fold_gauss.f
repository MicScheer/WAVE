*CMZ : 00.00/15 12/10/2013  12.22.24  by  Michael Scheer
*CMZ : 00.00/07 07/06/2011  14.38.25  by  Michael Scheer
*CMZ : 00.00/02 21/06/2004  11.46.09  by  Michael Scheer
*CMZ : 00.00/00 10/01/95  15.24.55  by  Michael Scheer
*-- Author :
      SUBROUTINE UTIL_FOLD_GAUSS(NF,XF,F,SIGMA,NSIGMA,X0,MODE,FG)

C--- SUBROUTINE TO EVALUATE THE FOLDED FUNCTION FG(X)=INT{F(XF)*G(XF-X),DXF}

C--   INPUT:

C-       NF:   NUMBER OF XF,F-VALUES
C-       XF:   ARRAY OF X-VALUES (MUST BE IN ASCENDING ORDER)
C-       F: ARRAY OF FUNCTION-VALUES
C-       SIGMA:  SIGMA OF GAUSSIAN
C-       NSIGMA: NUMBER OF SIGMAS TO BE CONSIDERED
C-       X0:   FG(X0) IS CALCULATED
C-               X0-NSIGM*SIGMA MUST NOT BE LOWER THAN XF(1)
C-               X0+NSIGM*SIGMA MUST NOT EXCEED XF(NF)
C-       MODE: CONTROL FLAG:
C-             MODE.GE.0: USE VALUES OF LAST CALL TO START WITH
C-             MODE.LT.0: NEW INITIALIZATION

C--   OUTPUT:

C-       FG:   FG(X0) IS CALCULATED


      IMPLICIT NONE

      INTEGER NF,MODE,MSTEPP,NSTEP,ISTEP,NSIGMA,NDIMP,NLOW,NHIGH

      PARAMETER(NDIMP=1000)
      PARAMETER(MSTEPP=100)

      REAL*8 XF(NF),F(NF),SIGMA,X0,FG,XLOW,XHIGH,DXW,G,FWW
      REAL*8 XW(NDIMP),F2(NDIMP),COEF(NDIMP),FW(NDIMP),DR2P1,PI
      REAL*8 WS1(NDIMP),WS2(NDIMP),WS3(NDIMP),WS4(NDIMP)

      DATA PI/3.141592653589793D0/

      IF (NF.GT.NDIMP) THEN
          WRITE(6,*)
          WRITE(6,*)'*** ERROR SR UTIL_FOLD_GAUSS ***'
          WRITE(6,*)'DIMENSION EXCEEDED, INCREASE PARAMETER NDIMP'
          WRITE(6,*)
          STOP
      ENDIF

C- CHECK ASCENDING ORDER

      DO ISTEP=2,NF
          IF (XF(ISTEP).LE.XF(ISTEP-1))
     &      STOP '*** ERROR SR UTIL_FOLD_GAUSS:
     & ARRAY XF NOT IN ASCENDING ORDER ***'
      ENDDO

C- SPLINES OF FUNCTION F

      IF (MODE.LT.0) THEN
         DR2P1=1.D0/DSQRT(2.D0*PI)
         CALL UTIL_SPLINE_COEF(XF,F,NF,9999.0d0,9999.0d0,F2,WS1,WS2,WS3,WS4)
      ENDIF !MODE

C-- SET UP FOLDING BUFFER

      XLOW =X0-NSIGMA*SIGMA
      XHIGH=X0+NSIGMA*SIGMA

      IF (XLOW.LT.XF(1)) THEN
          WRITE(6,*)
          WRITE(6,*)'*** ERROR SR UTIL_FOLD_GAUSS ***'
          WRITE(6,*)'X0 IS LOWER THEN XF(1)'
          WRITE(6,*)'CHECK INPUT TO ROUTINE'
          WRITE(6,*)'X0,XF(1):',X0,XF(1)
          STOP
      ENDIF

      IF (XHIGH.GT.XF(NF)) THEN
          WRITE(6,*)
          WRITE(6,*)'*** ERROR SR UTIL_FOLD_GAUSS ***'
          WRITE(6,*)'X0 IS GREATER THEN XF(NF)'
          WRITE(6,*)'CHECK INPUT TO ROUTINE'
          WRITE(6,*)'X0,XF(NF):',X0,XF(NF)
          STOP
      ENDIF


C- NUMBER OF POINTS WITHIN FOLDING INTERVALL


      NLOW=1
      DO ISTEP=1,NF
          IF (XF(ISTEP).LT.XLOW) THEN
         NLOW=ISTEP
          ELSE
         GOTO 100
          ENDIF
      ENDDO
100   CONTINUE


      NHIGH=NF
      DO ISTEP=NF,1,-1
          IF (XF(ISTEP).GT.XHIGH) THEN
         NHIGH=ISTEP
          ELSE
         GOTO 101
          ENDIF
      ENDDO
101   CONTINUE

      NSTEP=max(NHIGH-NLOW,MSTEPP)

      XW(1)=XLOW
      DXW=(XHIGH-XLOW)/(NSTEP-1)
      DO ISTEP=2,NSTEP
         XW(ISTEP)=XW(ISTEP-1)+DXW
      ENDDO

      DO ISTEP=1,NSTEP-1
         IF (XW(ISTEP).GE.XF(1).AND.XW(ISTEP).LE.XF(NF)) THEN
          CALL UTIL_SPLINE_INTER(XF,F,F2,NF,XW(ISTEP),FWW,-1)
          G=DEXP(-0.5D0*((XW(ISTEP)-X0)/SIGMA)**2)*DR2P1/SIGMA
          FW(ISTEP)=FWW*G
C         WRITE(8,*)XW(ISTEP),FWW,G,FW(ISTEP)
         ELSE
          FW(ISTEP)=0.0D0
         ENDIF
      ENDDO

C- ACTUAL INTEGRATION

      CALL UTIL_SPLINE_INTEGRAL(XW,FW,NSTEP,FG,COEF,WS1,WS2,WS3,WS4)

      RETURN
      END
