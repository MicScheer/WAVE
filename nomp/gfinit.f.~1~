*CMZ :          15/05/2023  16.38.53  by  Michael Scheer
*CMZ :  4.01/02 14/05/2023  13.42.26  by  Michael Scheer
*CMZ :  4.01/00 08/01/2023  16.56.29  by  Michael Scheer
*CMZ :  4.00/17 15/11/2022  10.57.19  by  Michael Scheer
*CMZ :  4.00/16 09/09/2022  17.24.46  by  Michael Scheer
*CMZ :  4.00/15 30/05/2022  15.47.16  by  Michael Scheer
*CMZ :  4.00/14 30/12/2021  11.57.49  by  Michael Scheer
*CMZ :  4.00/13 09/11/2021  09.50.16  by  Michael Scheer
*CMZ :  4.00/11 27/06/2021  11.57.49  by  Michael Scheer
*CMZ :  4.00/10 22/09/2020  09.17.04  by  Michael Scheer
*CMZ :  4.00/07 06/06/2020  13.59.12  by  Michael Scheer
*CMZ :  4.00/06 02/12/2019  15.36.11  by  Michael Scheer
*CMZ :  4.00/04 24/09/2019  10.58.03  by  Michael Scheer
*CMZ :  4.00/03 09/05/2019  11.04.11  by  Michael Scheer
*CMZ :  4.00/01 12/04/2019  10.43.33  by  Michael Scheer
*CMZ :  4.00/00 04/04/2019  12.37.42  by  Michael Scheer
*CMZ :  3.08/01 03/04/2019  16.19.59  by  Michael Scheer
*CMZ :  3.07/01 29/03/2019  14.39.14  by  Michael Scheer
*CMZ :  3.06/00 28/02/2019  15.01.36  by  Michael Scheer
*CMZ :  3.05/28 18/12/2018  13.52.06  by  Michael Scheer
*CMZ :  3.05/14 25/09/2018  08.52.05  by  Michael Scheer
*CMZ :  3.05/13 19/09/2018  13.56.36  by  Michael Scheer
*CMZ :  3.05/06 17/07/2018  11.15.16  by  Michael Scheer
*CMZ :  3.05/05 11/07/2018  09.20.23  by  Michael Scheer
*CMZ :  3.05/04 28/06/2018  09.36.14  by  Michael Scheer
*CMZ :  3.05/03 18/05/2018  11.56.52  by  Michael Scheer
*CMZ :  3.05/02 15/05/2018  16.25.19  by  Michael Scheer
*CMZ :  3.05/01 04/05/2018  16.04.30  by  Michael Scheer
*CMZ :  3.05/00 26/04/2018  15.51.12  by  Michael Scheer
*CMZ :  3.04/00 01/03/2018  12.10.21  by  Michael Scheer
*CMZ :  3.03/04 06/11/2017  16.05.55  by  Michael Scheer
*CMZ :  3.03/02 28/06/2017  13.49.04  by  Michael Scheer
*CMZ :  3.03/01 11/11/2015  14.37.19  by  Michael Scheer
*CMZ :  3.03/00 25/09/2015  15.02.58  by  Michael Scheer
*CMZ :  3.02/09 08/07/2015  12.22.02  by  Michael Scheer
*CMZ :  3.02/06 12/06/2015  15.06.01  by  Michael Scheer
*CMZ :  3.02/05 22/03/2015  19.47.46  by  Michael Scheer
*CMZ :  3.02/04 11/03/2015  13.46.12  by  Michael Scheer
*CMZ :  3.02/03 10/11/2014  11.01.30  by  Michael Scheer
*CMZ :  3.02/00 09/09/2014  13.16.05  by  Michael Scheer
*CMZ :  3.01/10 14/08/2014  14.43.07  by  Michael Scheer
*CMZ :  3.01/08 04/07/2014  09.03.18  by  Michael Scheer
*CMZ :  3.01/06 20/06/2014  16.28.51  by  Michael Scheer
*CMZ :  3.01/01 18/09/2013  12.33.23  by  Michael Scheer
*CMZ :  3.01/00 18/07/2013  11.34.23  by  Michael Scheer
*CMZ :  3.00/02 08/04/2013  14.49.02  by  Michael Scheer
*CMZ :  3.00/01 20/03/2013  14.29.33  by  Michael Scheer
*CMZ :  3.00/00 14/03/2013  10.24.03  by  Michael Scheer
*CMZ :  2.70/12 01/03/2013  16.28.24  by  Michael Scheer
*CMZ :  2.70/11 22/02/2013  14.32.53  by  Michael Scheer
*CMZ :  2.70/09 15/01/2013  13.58.17  by  Michael Scheer
*CMZ :  2.70/08 14/01/2013  17.39.36  by  Michael Scheer
*CMZ :  2.70/07 14/01/2013  16.55.40  by  Michael Scheer
*CMZ :  2.70/06 03/01/2013  15.40.36  by  Michael Scheer
*CMZ :  2.70/05 02/01/2013  14.05.34  by  Michael Scheer
*CMZ :  2.70/04 21/12/2012  10.03.13  by  Michael Scheer
*CMZ :  2.70/01 12/12/2012  12.39.56  by  Michael Scheer
*CMZ :  2.69/02 05/11/2012  12.35.44  by  Michael Scheer
*CMZ :  2.69/00 30/10/2012  16.25.27  by  Michael Scheer
*CMZ :  2.68/05 18/10/2012  09.38.10  by  Michael Scheer
*CMZ :  2.68/03 27/08/2012  15.39.32  by  Michael Scheer
*CMZ :  2.68/02 01/08/2012  14.02.50  by  Michael Scheer
*CMZ :  2.68/01 29/05/2012  16.08.27  by  Michael Scheer
*CMZ :  2.68/00 25/05/2012  09.56.07  by  Michael Scheer
*CMZ :  2.67/06 24/05/2012  12.11.08  by  Michael Scheer
*CMZ :  2.67/05 16/05/2012  13.53.49  by  Michael Scheer
*CMZ :  2.67/04 15/05/2012  12.59.15  by  Michael Scheer
*CMZ :  2.67/02 08/05/2012  16.36.00  by  Michael Scheer
*CMZ :  2.67/00 16/02/2012  13.07.31  by  Michael Scheer
*CMZ :  2.66/22 22/11/2011  13.58.07  by  Michael Scheer
*CMZ :  2.66/20 22/11/2011  10.45.51  by  Michael Scheer
*CMZ :  2.66/17 23/11/2010  10.01.44  by  Michael Scheer
*CMZ :  2.66/16 22/11/2010  14.00.45  by  Michael Scheer
*CMZ :  2.66/13 15/07/2010  12.58.56  by  Michael Scheer
*CMZ :  2.66/12 20/05/2010  09.00.48  by  Michael Scheer
*CMZ :  2.66/09 29/04/2010  11.46.31  by  Michael Scheer
*CMZ :  2.66/07 10/03/2010  12.23.23  by  Michael Scheer
*CMZ :  2.66/06 27/11/2009  15.57.31  by  Michael Scheer
*CMZ :  2.66/04 24/11/2009  08.18.52  by  Michael Scheer
*CMZ :  2.66/03 16/11/2009  13.49.00  by  Michael Scheer
*CMZ :  2.65/03 23/10/2009  09.19.41  by  Michael Scheer
*CMZ :  2.65/02 29/09/2009  09.24.12  by  Michael Scheer
*CMZ :  2.64/01 14/09/2009  15.19.42  by  Michael Scheer
*CMZ :  2.64/00 18/08/2009  15.17.59  by  Michael Scheer
*CMZ :  2.63/05 12/08/2009  08.49.28  by  Michael Scheer
*CMZ :  2.63/03 15/04/2008  09.57.05  by  Michael Scheer
*CMZ :  2.63/02 13/03/2008  15.28.16  by  Michael Scheer
*CMZ :  2.63/00 10/01/2008  12.43.13  by  Michael Scheer
*CMZ :  2.62/02 16/07/2007  08.39.06  by  Michael Scheer
*CMZ :  2.61/05 11/04/2007  11.58.30  by  Michael Scheer
*CMZ :  2.61/02 26/03/2007  20.08.09  by  Michael Scheer
*CMZ :  2.60/00 26/01/2007  10.48.21  by  Michael Scheer
*CMZ :  2.59/01 24/01/2007  14.13.43  by  Michael Scheer
*CMZ :  2.58/00 16/01/2007  12.28.50  by  Michael Scheer
*CMZ :  2.57/05 13/12/2006  10.49.24  by  Michael Scheer
*CMZ :  2.57/00 22/11/2005  09.53.36  by  Michael Scheer
*CMZ :  2.56/02 21/10/2005  13.13.47  by  Michael Scheer
*CMZ :  2.56/00 17/10/2005  12.32.39  by  Michael Scheer
*CMZ :  2.55/00 10/08/2005  13.53.39  by  Michael Scheer
*CMZ :  2.54/07 16/06/2005  09.40.54  by  Michael Scheer
*CMZ :  2.54/06 02/06/2005  13.53.54  by  Michael Scheer
*CMZ :  2.54/05 02/06/2005  08.14.28  by  Michael Scheer
*CMZ :  2.54/01 07/03/2005  10.32.21  by  Michael Scheer
*CMZ :  2.53/01 24/01/2005  11.05.51  by  Michael Scheer
*CMZ :  2.52/16 07/01/2005  16.08.34  by  Michael Scheer
*CMZ :  2.52/15 05/01/2005  16.24.14  by  Michael Scheer
*CMZ :  2.52/13 16/12/2004  21.13.02  by  Michael Scheer
*CMZ :  2.52/10 08/12/2004  13.39.18  by  Michael Scheer
*CMZ :  2.52/09 29/10/2004  11.12.01  by  Michael Scheer
*CMZ :  2.52/05 16/08/2004  13.37.21  by  Michael Scheer
*CMZ :  2.52/00 30/06/2004  16.42.15  by  Michael Scheer
*CMZ :  2.51/02 22/06/2004  13.57.32  by  Michael Scheer
*CMZ :  2.51/01 16/06/2004  17.05.27  by  Michael Scheer
*CMZ :  2.51/00 26/05/2004  16.17.52  by  Michael Scheer
*CMZ :  2.50/02 30/04/2004  15.27.48  by  Michael Scheer
*CMZ :  2.50/00 29/04/2004  17.07.53  by  Michael Scheer
*CMZ :  2.49/00 19/03/2004  17.58.17  by  Michael Scheer
*CMZ :  2.48/04 16/03/2004  10.43.05  by  Michael Scheer
*CMZ :  2.48/03 03/03/2004  12.49.38  by  Michael Scheer
*CMZ :  2.47/23 17/02/2004  11.00.48  by  Michael Scheer
*CMZ :  2.47/18 27/11/2003  14.31.04  by  Michael Scheer
*CMZ :  2.47/15 08/08/2003  10.34.03  by  Michael Scheer
*CMZ :  2.47/14 07/08/2003  09.42.49  by  Michael Scheer
*CMZ :  2.47/12 03/07/2003  09.22.07  by  Michael Scheer
*CMZ :  2.47/10 28/05/2003  15.25.10  by  Michael Scheer
*CMZ :  2.47/09 27/05/2003  15.50.23  by  Michael Scheer
*CMZ :  2.47/08 16/05/2003  14.34.52  by  Michael Scheer
*CMZ :  2.47/07 14/04/2003  14.14.46  by  Michael Scheer
*CMZ :  2.47/06 28/03/2003  15.40.34  by  Michael Scheer
*CMZ :  2.47/04 13/03/2003  09.59.14  by  Michael Scheer
*CMZ :  2.47/03 12/03/2003  15.45.44  by  Michael Scheer
*CMZ :  2.44/01 11/12/2002  11.15.11  by  Michael Scheer
*CMZ :  2.44/00 08/11/2002  11.15.00  by  Michael Scheer
*CMZ :  2.41/13 02/09/2002  15.35.59  by  Michael Scheer
*CMZ :  2.41/07 15/07/2002  16.10.05  by  Michael Scheer
*CMZ :  2.41/06 10/05/2002  15.24.47  by  Michael Scheer
*CMZ :  2.41/03 21/03/2002  12.44.08  by  Michael Scheer
*CMZ :  2.41/02 21/03/2002  12.41.22  by  Michael Scheer
*CMZ :  2.41/00 20/03/2002  14.16.00  by  Michael Scheer
*CMZ :  2.40/03 20/03/2002  12.31.55  by  Michael Scheer
*CMZ :  2.38/00 13/12/2001  11.26.22  by  Michael Scheer
*CMZ :  2.37/06 07/12/2001  15.01.29  by  Michael Scheer
*CMZ :  2.37/02 14/11/2001  12.53.09  by  Michael Scheer
*CMZ :  2.35/02 30/10/2001  17.13.56  by  Michael Scheer
*CMZ :  2.34/09 19/09/2001  13.39.52  by  Michael Scheer
*CMZ :  2.34/08 11/09/2001  14.21.00  by  Michael Scheer
*CMZ :  2.34/07 06/09/2001  10.25.20  by  Michael Scheer
*CMZ :  2.34/03 11/07/2001  11.18.43  by  Michael Scheer
*CMZ :  2.34/01 01/06/2001  15.26.15  by  Michael Scheer
*CMZ :  2.33/06 04/05/2001  13.56.33  by  Michael Scheer
*CMZ :  2.33/00 03/05/2001  10.35.09  by  Michael Scheer
*CMZ :  2.32/04 26/04/2001  12.17.53  by  Michael Scheer
*CMZ :  2.32/03 26/04/2001  11.11.52  by  Michael Scheer
*CMZ :  2.32/02 26/04/2001  11.09.09  by  Michael Scheer
*CMZ :  2.31/01 25/04/2001  15.12.03  by  Michael Scheer
*CMZ :  2.30/04 23/04/2001  12.32.14  by  Michael Scheer
*CMZ :  2.30/03 20/04/2001  16.29.29  by  Michael Scheer
*CMZ :  2.20/10 05/04/2001  16.02.13  by  Michael Scheer
*CMZ :  2.20/09 23/03/2001  11.10.39  by  Michael Scheer
*CMZ :  2.20/03 21/02/2001  14.28.56  by  Michael Scheer
*CMZ :  2.20/01 20/02/2001  14.28.03  by  Michael Scheer
*CMZ :  2.20/00 07/11/2000  18.38.35  by  Michael Scheer
*CMZ :  2.17/00 07/11/2000  18.36.28  by  Michael Scheer
*CMZ :  2.16/09 01/11/2000  19.18.54  by  Michael Scheer
*CMZ :  2.16/08 01/11/2000  18.46.41  by  Michael Scheer
*CMZ :  2.16/07 13/10/2000  12.33.36  by  Michael Scheer
*CMZ :  2.16/05 25/08/2000  16.07.46  by  Michael Scheer
*CMZ :  2.16/04 21/07/2000  14.48.52  by  Michael Scheer
*CMZ :  2.16/03 19/06/2000  12.19.35  by  Michael Scheer
*CMZ :  2.16/02 15/06/2000  17.28.05  by  Michael Scheer
*CMZ :  2.16/01 15/06/2000  17.27.10  by  Michael Scheer
*CMZ :  2.16/00 15/06/2000  12.08.02  by  Michael Scheer
*CMZ :  2.15/00 19/05/2000  11.05.28  by  Michael Scheer
*CMZ :  2.14/02 19/04/2000  17.14.40  by  Michael Scheer
*CMZ :  2.14/01 19/04/2000  13.54.26  by  Michael Scheer
*CMZ :  2.14/00 19/04/2000  11.58.09  by  Michael Scheer
*CMZ :  2.13/10 23/03/2000  13.06.35  by  Michael Scheer
*CMZ :  2.13/11 10/03/2000  15.07.30  by  Michael Scheer
*CMZ :  2.13/10 09/03/2000  17.39.34  by  Michael Scheer
*CMZ :  2.13/09 09/03/2000  18.08.34  by  Michael Scheer
*CMZ :  2.13/09 09/03/2000  17.10.43  by  Michael Scheer
*CMZ :  2.13/08 02/03/2000  12.13.35  by  Michael Scheer
*CMZ :  2.13/07 18/02/2000  12.32.29  by  Michael Scheer
*CMZ :  2.13/04 24/01/2000  17.59.24  by  Michael Scheer
*CMZ :  2.13/02 14/12/99  16.41.31  by  Michael Scheer
*CMZ :  2.13/00 26/10/99  15.40.04  by  Michael Scheer
*CMZ :  2.12/04 27/08/99  12.30.27  by  Michael Scheer
*CMZ :  2.12/03 06/08/99  15.36.20  by  Michael Scheer
*CMZ :  2.12/02 15/06/99  16.13.28  by  Michael Scheer
*CMZ :  2.12/01 14/06/99  15.34.53  by  Michael Scheer
*CMZ :  2.12/00 04/06/99  13.28.31  by  Michael Scheer
*CMZ :  2.11/01 12/05/99  12.19.46  by  Michael Scheer
*CMZ :  2.11/00 11/05/99  16.21.08  by  Michael Scheer
*CMZ :  2.10/02 07/05/99  12.23.41  by  Michael Scheer
*CMZ :  2.10/01 17/03/99  18.20.52  by  Michael Scheer
*CMZ :  2.02/00 15/02/99  10.20.15  by  Michael Scheer
*CMZ :  2.01/00 21/01/99  16.58.37  by  Michael Scheer
*CMZ :  2.00/03 13/01/99  10.57.51  by  Michael Scheer
*CMZ :  2.00/01 11/01/99  16.06.57  by  Michael Scheer
*CMZ :  2.00/00 11/01/99  16.04.55  by  Michael Scheer
*CMZ :  1.04/03 11/12/98  16.57.07  by  Michael Scheer
*CMZ :  1.04/02 11/12/98  11.35.47  by  Michael Scheer
*CMZ :  1.04/01 11/12/98  11.21.43  by  Michael Scheer
*CMZ :  1.04/00 11/12/98  10.45.26  by  Michael Scheer
*CMZ :  1.03/06 02/10/98  15.51.15  by  Michael Scheer
*CMZ :  1.03/05 27/04/98  13.57.17  by  Michael Scheer
*CMZ :  1.03/04 27/03/98  14.22.25  by  Michael Scheer
*CMZ :  1.03/02 23/02/98  14.31.16  by  Michael Scheer
*CMZ :  1.03/01 10/02/98  17.33.38  by  Michael Scheer
*CMZ :  1.03/00 16/01/98  14.55.02  by  Michael Scheer
*CMZ :  1.02/05 16/01/98  11.00.30  by  Michael Scheer
*CMZ :  1.02/04 16/01/98  10.59.38  by  Michael Scheer
*CMZ :  1.02/02 06/01/98  17.07.13  by  Michael Scheer
*CMZ :  1.02/00 06/01/98  14.56.08  by  Michael Scheer
*CMZ :  1.01/01 10/12/97  13.23.56  by  Michael Scheer
*CMZ :  1.01/00 04/12/97  15.59.21  by  Michael Scheer
*CMZ :  1.00/04 21/10/97  13.41.08  by  Michael Scheer
*CMZ :  1.00/03 20/10/97  15.20.55  by  Michael Scheer
*CMZ :  1.00/02 20/10/97  15.15.32  by  Michael Scheer
*CMZ :  1.00/00 29/09/97  17.11.38  by  Michael Scheer
*CMZ : 00.02/05 16/04/97  16.32.33  by  Michael Scheer
*CMZ : 00.02/04 25/02/97  17.37.37  by  Michael Scheer
*CMZ : 00.02/03 31/01/97  11.25.25  by  Michael Scheer
*CMZ : 00.02/02 15/01/97  13.21.25  by  Michael Scheer
*CMZ : 00.02/01 18/12/96  13.23.11  by  Michael Scheer
*CMZ : 00.01/12 07/10/96  13.32.57  by  Michael Scheer
*CMZ : 00.01/10 02/09/96  13.52.46  by  Michael Scheer
*CMZ : 00.01/09 28/05/96  12.08.51  by  Michael Scheer
*CMZ : 00.01/08 17/07/95  16.20.53  by  Michael Scheer
*CMZ : 00.01/07 23/03/95  11.36.42  by  Michael Scheer
*CMZ : 00.01/04 27/01/95  10.15.13  by  Michael Scheer
*CMZ : 00.01/03 28/11/94  12.04.13  by  Michael Scheer
*CMZ : 00.01/02 22/11/94  10.20.21  by  Michael Scheer
*CMZ : 00.01/01 23/06/94  13.25.42  by  Michael Scheer
*CMZ : 00.01/00 21/06/94  09.57.03  by  Michael Scheer
*CMZ : 00.00/07 25/05/94  17.37.44  by  Michael Scheer
*CMZ : 00.00/06 29/04/94  21.08.08  by  Michael Scheer
*CMZ : 00.00/04 29/04/94  18.05.26  by  Michael Scheer
*CMZ : 00.00/00 28/04/94  16.11.33  by  Michael Scheer
*-- Author : Michael Scheer
      SUBROUTINE GFINIT(BETX0,BETY0,BETZ0,BETXF0,BETYF0,BETZF0,
     &                     DTIM,BSHIFT,GAMMA)
*KEEP,GPLHINT.
*KEEP,spectf90u.
      include 'spectf90u.cmn'
*KEEP,sourcef90u.
      include 'sourcef90u.cmn'
*KEEP,observf90u.
      include 'observf90u.cmn'
*KEEP,wfoldf90u.
      include 'wfoldf90u.cmn'
*KEEP,trackf90u.
      include 'trackf90u.cmn'
*KEEP,wbetaf90u.
      include 'wbetaf90u.cmn'
*KEEP,bpolymagf90u.
      include 'bpolymagf90u.cmn'
*KEEP,bwpolyederf90u.
      include 'bwpolyederf90u.cmn'
*KEND.

      use omp_lib
      use ompmod
      use bunchmod
      use clustermod
      use f1k
      !use waveenv
      use fbtabzymod
      !use waveenv

      IMPLICIT NONE

*KEEP,datetime.
      include 'datetime.cmn'
*KEND.
      EXTERNAL DCOSD,DSIND
      DOUBLE PRECISION  DCOSD,DSIND

      INTEGER IGFNUM,ICOMP,ISTORE,IAMBI,I,IELEM,ISTO,IROI,JWSECTMAGS,
     &  KSUM,lun,idum,lunsi,ieof,istat,iclusterold

      DOUBLE PRECISION BETX0,BETY0,BETZ0,ZP0,YP0,ZPF0,YPF0,
     &  BETXF0,BETYF0,BETZF0,BTAPV,BTAPH,dtshort,
     &  DTIM,BSHIFT,GAMMA,XJUST,YJUST,XSTARTO,XSTOPO

      DOUBLE PRECISION ZP,YP,VXINO,VYINO,VZINO,YSTARTO,ZSTARTO
     &  ,GAMMAL,gamma1,omegac,emom1,rho1,vxi,vyi,vzi

      COMPLEX*16 VPOLAN
      DOUBLE PRECISION VSTO

      DOUBLE PRECISION BETA,VN,V0,ENERGV
      DOUBLE PRECISION BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM,DUM
      DOUBLE PRECISION ENEGEV,TAUPOL0,TAUPOL0EP,BSTORE,BSTORE2,BSTORE2Z
      DOUBLE PRECISION BDIPL1G,POLFC1G,POLLV1G,TAUPL1G,EMINPOL
      DOUBLE PRECISION BDIPLEP,POLFCEP,ASTORE,XSTOPR
      DOUBLE PRECISION BSTOREY,BSTOREZ,ASTOREZ,ASTOREY
      DOUBLE PRECISION BY,RI,TANPHI,BANA,BPANA,BANAC,BPANAC,
     &  YCEN,ZCEN,YPCEN,ZPCEN

*KEEP,cmpara.
      include 'cmpara.cmn'
*KEEP,pawcmn.
*KEEP,contrl.
      include 'contrl.cmn'
*KEEP,b0scglob.
      include 'b0scglob.cmn'
*KEEP,myfiles.
      include 'myfiles.cmn'
*KEEP,optic.
      include 'optic.cmn'
*KEEP,bfeld.
      include 'bfeld.cmn'
*KEEP,mgsqc.
      include 'mgsqc.cmn'
*KEEP,halbach.
      include 'halbach.cmn'
*KEEP,halbasy.
      include 'halbasy.cmn'
*KEEP,undugap.
      include 'undugap.cmn'
*KEEP,fourier.
      include 'fourier.cmn'
*KEEP,tranpo.
      include 'tranpo.cmn'
*KEEP,depola.
      include 'depola.cmn'
*KEEP,wlsopt.
      include 'wlsopt.cmn'
*KEEP,track.
      include 'track.cmn'
*KEEP,betawls.
      include 'betawls.cmn'
*KEEP,wbetaf90.
      include 'wbetaf90.cmn'
*KEEP,phycon.
      include 'phycon.cmn'
*KEEP,colli.
      include 'colli.cmn'
*KEEP,reargf90.
      include 'reargf90.cmn'
*KEEP,sourcef90.
      include 'sourcef90.cmn'
*KEEP,spect.
      include 'spect.cmn'
*KEEP,wfoldf90.
      include 'wfoldf90.cmn'
*KEEP,observf90.
      include 'observf90.cmn'
*KEEP,freqs.
      include 'freqs.cmn'
*KEEP,ucross.
      include 'ucross.cmn'
*KEEP,ellip.
      include 'ellip.cmn'
*KEEP,ellana.
      include 'ellana.cmn'
*KEEP,wbtab.
      include 'wbtab.cmn'
*KEEP,uservar.
      include 'uservar.cmn'
*KEEP,klotz.
      include 'klotz.cmn'
*KEEP,modulator.
      include 'modulator.cmn'
*KEEP,bmap.
      include 'bmap.cmn'
*KEEP,bamwls.
      include 'bamwls.cmn'
*KEEP,bpoly3d.
      include 'bpoly3d.cmn'
*KEEP,bpoly2dh.
      include 'bpoly2dh.cmn'
*KEEP,bpharm.
      include 'bpharm.cmn'
*KEEP,bpoly3dg.
      include 'bpoly3dg.cmn'
*KEEP,bhelm.
      include 'bhelm.cmn'
*KEEP,tralin.
      include 'tralin.cmn'
*KEEP,phasetrack.
      include 'phasetrack.cmn'
*KEEP,specdip.
      include 'specdip.cmn'
*KEEP,bforce.
      include 'bforce.cmn'
*KEEP,phasef90.
      include 'phasef90.cmn'
*KEEP,ampli.
      include 'ampli.cmn'
*KEEP,berror.
      include 'berror.cmn'
*KEEP,cmzsel.
      include 'cmzsel.cmn'
*KEEP,genesis.
      include 'genesis.cmn'
*KEEP,track0.
      include 'track0.cmn'
*KEEP,primkin.
      include 'primkin.cmn'
*KEEP,efield.
      include 'efield.cmn'
*KEEP,photon.
      include 'photon.cmn'
*KEND.
c+seq,gseed,if=grndm.
*KEEP,random.
      include 'random.cmn'
*KEEP,ustep.
      include 'ustep.cmn'
*KEEP,whbook.
      include 'whbook.cmn'
*KEEP,undumagc.
      include 'undumagc.cmn'
*KEEP,waveenv.
      include 'waveenv.cmn'
*KEND.

      integer irootmode


C--- LOGICAL UNITS
      LUNGFI=15
      LUNGFO=16
      FILEI='wave.in'
      FILEGFO='wave.out'

C--- CHECK CMZ-SELECTIONS{

      IXAMAG_I=0
      ICMZF90=1

      ICMZNEWWAVE=1

      ICMZNOCMPLX=1

      ICMZVMS=0

      ICMZHPUX=0

        ICMZTRUE64=0

      ICMZLINUX=1

      ICMZWINDOWS=0

        IF (ABS(ICMZVMS)+ABS(ICMZLINUX)+ABS(ICMZHPUX)+ABS(ICMZTRUE64)+
     &      ABS(ICMZWINDOWS).NE.1) THEN
          WRITE(6,*)'*** BAD CMZ-SELECTION VMS, LINUX OR WINDOWS ***'
          STOP
      ENDIF

*KEEP,setf1k.
      include 'setf1k.cmn'
*KEND.

C--- CHECK CMZ-SELECTIONS}

C     CALL UTIL_TEST_BATCH(IBATCH)

      fouentr=-9999.
      fouexit=-9999.
      scbfour=-9999.
      xshbfour=-9999.

      XINTER=-9999.
      xbetfun=9999.
      IW_BLEN=0
      IW_BLENF=0
      IW_CIRC=0

      BMAXGL2=-1.0D30

C--- PHYSICAL CONSTANTS

*KEEP,phycon1.
      include 'phycon1.cmn'
*KEND.

      XMX=-1.0D30
      YMX=-1.0D30
      ZMX=-1.0D30
      BXMX=-1.0D30
      BYMX=-1.0D30
      BZMX=-1.0D30
      PHIMX=-1.0D30
      XMN=1.0D30
      YMN=1.0D30
      ZMN=1.0D30
      BXMN=1.0D30
      BYMN=1.0D30
      BZMN=1.0D0
      PHIMN=1.0D30

C--- STORE DIMENSION-PARAMETERS

      NDPOL=NDPOLP
      NDOBSVZ=NDOBSVZP
      NDOBSVY=NDOBSVYP
      NDMASHZ=NDMASHZP
      NDMASHY=NDMASHYP
      NDARGU=NDARGUP
      NDFREQ=NDFREQP
      NDOBSV=NDOBSVP
      NWMAX=NWMAXP
      NBETA=NBETAP
C5.10.95      NBDIM=NBDIMP
      LIDIM=LIDIMP
      NOMDIM=NOMDIMP
      IBFDIM4=IBFDIM4P
      IBFDIM2=IBFDIM2P
      NXPAN=NXPANP
      NYPAN=NYPANP
      NBTAB=NBTABP
      NDWSOU=NDWSOUP
      NGCOEF=NGCOEFP
      NDSPAR=NDSPARP

      IF(NDOBSVZ*NDOBSVY.NE.NDOBSV) THEN
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)'     *** ERROR IN GFINIT ***'
        WRITE(LUNGFO,*)'     DIMENSION DECLARATIONS NOT CONSISTENT'
        WRITE(LUNGFO,*)'     NDOBSVP MUST BE EQUAL TO NDOBSVZP*NDOBSVYP'
        WRITE(LUNGFO,*)'     CHANGE PARAMETER IN CMPARA.CMN'
        WRITE(LUNGFO,*)
        WRITE(6,*)
        WRITE(6,*)'     *** ERROR IN GFINIT ***'
        WRITE(6,*)'     DIMENSION DECLARATIONS NOT CONSISTENT'
        WRITE(6,*)'     NDOBSVP MUST BE EQUAL TO NDOBSVZP*NDOBSVYP'
        WRITE(6,*)'     CHANGE PARAMETER IN CMPARA.'
        WRITE(6,*)
        STOP
      ENDIF

C--- READ PARAMETER AND CONTRL-FLAGS FROM NAMELISTS

      iclusterold=icluster

      OPEN (UNIT=LUNGFI,FILE=FILEI,STATUS='OLD')

      READ(LUNGFI, CONTRL )
      READ(LUNGFI,randomn)
      READ(LUNGFI,cluster)
c     WRITE(6,*)'READING NAMELIST B0SCGLOBN'
      READ(LUNGFI, B0SCGLOBN )
      IF(IBHELM.NE.0 ) WRITE(6,*)'READING NAMELIST BBHELM'
      IF(IBHELM.NE.0 ) READ(LUNGFI, BBHELM )
c     WRITE(6,*)'READING NAMELIST BBFELD'
      READ(LUNGFI, BBFELD )
c     WRITE(6,*)'READING NAMELIST HALBACH'
      READ(LUNGFI, HALBACH )
c     WRITE(6,*)'READING NAMELIST HALBASY'
      READ(LUNGFI, HALBASY )
      READ(LUNGFI, undugapn)
c     WRITE(6,*)'READING NAMELIST UCROSSN'
      READ(LUNGFI, UCROSSN )
c     WRITE(6,*)'READING NAMELIST ELLIPN'
      READ(LUNGFI, ELLIPN )
c     WRITE(6,*)'READING NAMELIST ELLANAN'
      READ(LUNGFI, ELLANAN )
c     WRITE(6,*)'READING NAMELIST FOURIER'
      READ(LUNGFI, FOURIER )
      if (ifourbtabzy.ne.0) READ(LUNGFI, fbtabzyn )
c     WRITE(6,*)'READING NAMELIST DEPOLA'
      READ(LUNGFI, DEPOLA )
c     WRITE(6,*)'READING NAMELIST WLSOPTN'
      READ(LUNGFI, WLSOPTN )
c     WRITE(6,*)'READING NAMELIST MYFILES'
      READ(LUNGFI, MYFILES )
c     WRITE(6,*)'READING NAMELIST TRALINN'
      READ(LUNGFI, TRALINN )
c     WRITE(6,*)'READING NAMELIST PHASETRACKN'
      READ(LUNGFI, PHASETRACKN )
c     WRITE(6,*)'READING NAMELIST OPTIK'
      READ(LUNGFI, OPTIK )
c     WRITE(6,*)'READING NAMELIST TRANPON'
      READ(LUNGFI, TRANPON )
c     WRITE(6,*)'READING NAMELIST COLLIN'
      READ(LUNGFI, COLLIN )
c     WRITE(6,*)'READING NAMELIST SPECTN'
      READ(LUNGFI, SPECTN )
c     WRITE(6,*)'READING NAMELIST WFOLDN'
      READ(LUNGFI, WFOLDN )
      READ(LUNGFI,BUNCHN)
c     WRITE(6,*)'READING NAMELIST PINHOLE'
      READ(LUNGFI, PINHOLE )
c     WRITE(6,*)'READING NAMELIST FREQN'
      READ(LUNGFI, FREQN )
c     WRITE(6,*)'READING NAMELIST WBTABN'
      READ(LUNGFI, WBTABN )
c     WRITE(6,*)'READING NAMELIST RECN'
      READ(LUNGFI, RECN )
c     WRITE(6,*)'READING NAMELIST MODUN'
      READ(LUNGFI, MODUN )
c      IF (kbundumag.ne.0) THEN
        READ(LUNGFI,unduhybridn)
        READ(LUNGFI,undumagn)
        kbundumag_c=kbundumag
        kbunduverb_c=kbunduverb
        kbundumap_c=kbundumap
c      ENDIF
      IF (KBPOLYMAG.GT.0) THEN
c        WRITE(6,*)'READING NAMELIST POLYMAGN'
        READ(LUNGFI,POLYMAGN)
      ENDIF
c     WRITE(6,*)'READING NAMELIST BMAPN'
      READ(LUNGFI, BMAPN )
c     WRITE(6,*)'READING NAMELIST BAMWLSN'
      IF (KBAMWLS.NE.0) READ(LUNGFI, BAMWLSN )
c     WRITE(6,*)'READING NAMELIST BPOLY3DN'
      READ(LUNGFI, BPOLY3DN )
c     WRITE(6,*)'READING NAMELIST BPOLY2DHN'
      READ(LUNGFI, BPOLY2DHN )
c     WRITE(6,*)'READING NAMELIST BPHARMN'
      READ(LUNGFI, BPHARMN )
c     WRITE(6,*)'READING NAMELIST BGRIDN'
      READ(LUNGFI, BGRIDN )
c     WRITE(6,*)'READING NAMELIST SPECDIPN'
      READ(LUNGFI, SPECDIPN )

C--- READ AND WRITE CURRENT NUMBER

      OPEN(UNIT=LUNCOD,FILE=FILECOD,STATUS='OLD',FORM='FORMATTED',
     &       ERR=99)
          READ(LUNCOD,*,ERR=99)IGFNUM

99    IGFNUM=IGFNUM+1

      CLOSE(LUNCOD)
      OPEN(UNIT=LUNCOD,FILE=FILECOD,status='unknown',FORM='FORMATTED')
      REWIND(LUNCOD)
      WRITE(LUNCOD,*)IGFNUM
      ICODE=IGFNUM
C          IF(IGFLOAT.NE.0) ICODE=-ICODE
      CLOSE(LUNCOD)

C--- OPEN OUTPUT-FILE

      call util_file_delete(trim(filegfo),istat)
      OPEN (UNIT=LUNGFO,FILE=FILEGFO)

      CALL ZEIT(LUNGFO)

      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'          *********************************************'
      WRITE(LUNGFO,*)'          *          PROGRAM WAVE                     *'
      WRITE(LUNGFO,*)'          *                                           *'
      WRITE(LUNGFO,*)
*KEEP,wversion.
      include 'wversion.cmn'
*KEND.
      WRITE(LUNGFO,*)'          *                                           *'
      WRITE(LUNGFO,*)'          *          Michael Scheer                   *'
      WRITE(LUNGFO,*)'          *              BESSY                        *'
      WRITE(LUNGFO,*)'          *********************************************'
      WRITE(LUNGFO,*)

      write(lungfo,*)
      write(lungfo,*)"     Compiler-Version: ",trim(chcompiler)
      write(lungfo,*)"     Hostname: ",trim(chhostname)
      write(lungfo,*)"     Working directory: ",trim(chcwd)
      write(lungfo,*)

      WRITE(LUNGFO,*)'     USER COMMENT:'
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     ',CODE
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     CURRENT NUMBER:',ICODE
      WRITE(LUNGFO,*)


      WRITE(6,*)
      WRITE(6,*)
      WRITE(6,*)'          USER COMMENT:'
      WRITE(6,*)
      WRITE(6,*)'          ',CODE
      WRITE(6,*)
      WRITE(6,*)'          CURRENT NUMBER:',ICODE
      WRITE(6,*)

      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     USER NAMELIST:'
      WRITE(LUNGFO,*)
      DO I=1,1000
        IF (USER(I).NE.0.) THEN
          WRITE(LUNGFO,*)'     USER(',I,'): ',USER(I)
        ENDIF
      ENDDO
      WRITE(LUNGFO,*)

      icluster=iclusterold

      if (ibunch.ne.0) then
        if (iundulator.ne.2) then
          mthreads=0
        endif
        if (nbunch.le.0) nbunch=1
        if (neinbunch.le.0) neinbunch=1
      endif

      if (iemit.ne.0.or.ibunch.ne.0) imagspln=0

C--- USER MAY OVERWRITE HERE VARIABLES OF NAMELISTS

      mmedgey=0 !3.4.2019, to avoid trouble with OMP
      mmedgez=0

      IF (IUNAME.NE.0) THEN
        CALL UNAME
        IF (IABEND.EQ.5) goto 9999
      ENDIF

      if (kbrec.ne.0.and.scaladd.eq.0.0d0.and.scalkl.eq.0.0d0
     &    .and.irecmodu.eq.0.and.irecu.eq.0) then
        irecu=1
      endif

      if (nocern.ne.0) iroottrees=0

      kefield=iefield

      IF (BMOVECUT.LE.0.0D0) BMOVECUT=1.0D-6

      IF (IBFORCE.NE.0) THEN
c     WRITE(6,*)'READING NAMELIST BFORCN'
        READ(LUNGFI,BFORCN)
      ENDIF

      IF (MPINZ.LE.0) MPINZ=1
      IF (MPINY.LE.0) MPINY=1

      IF (IF1DIM.NE.0) THEN
        IF1DIM=1
      ENDIF

      IF (IPHASE.NE.0) THEN
        DO IELEM=1,NPHELEMP
          PHELEM(1,1,IELEM)=1.0D0
          PHELEM(2,2,IELEM)=1.0D0
          PHELEM(3,3,IELEM)=1.0D0
          PHELEM(4,4,IELEM)=1.0D0
          PHELEM(5,1,IELEM)=-1.0D30
          PHELEM(5,2,IELEM)=+1.0D30
          PHELEM(5,3,IELEM)=-1.0D30
          PHELEM(5,4,IELEM)=+1.0D30
        ENDDO
c     WRITE(6,*)'READING NAMELIST PHASEN'
        READ(LUNGFI,PHASEN)
      ENDIF

      if (ibunch.ne.0.and.neinbunch.gt.1.and.icluster.gt.0) then
        if (neinbunch.ne.(neinbunch/nwgood)*nwgood) then
          write(lungfo,*)"Warning in GFINIT: NEINBUNCH changed to fit number of WAVE instances ***"
          neinbunch=(neinbunch/nwgood)*nwgood
          write(lungfo,*)"New value:", neinbunch
          print*,"Warning in GFINIT: NEINBUNCH changed to fit number of WAVE instances ***"
          neinbunch=(neinbunch/nwgood)*nwgood
          print*,"New value:", neinbunch
        endif
      endif

      if (neinbunch.gt.0.and.bunchcharge.eq.-9999.)
     &  bunchcharge=echarge1*neinbunch

      if (ibunch.eq.0) then
        iubunch=0
        neinbunch=0
        nbunch=0
      else
        if (ispecdip.ne.0) then
          print*,"*** Error: ISPECDIP is not allowed for IBUNCH option ***"
          iabend=11
          goto 9999
        endif
      endif

      nbuncho=nbunch
      neinbuncho=neinbunch

      IF (KAMPLI.NE.0.or.iundulator.eq.2) THEN
        READ(LUNGFI,PHASEREPN)
        if (ibunch.ne.0.and.nbunch.ne.1.and.neinbunch.ne.1) then
          write(lungfo,*)'*** Error in GFINIT: For IUNDULATOR=2 or KAMPLI.ne.0, one of NBUNCH or NEINBUNCH must be one ***'
          stop '*** Error in GFINIT: For IUNDULATOR=2 or KAMPLI.ne.0, one of NBUNCH or NEINBUNCH must be one ***'
        endif
        if (noespreadph.ne.0) phrespread=0.0d0
        if (noemitph.ne.0) then
          phremith=0.0d0
          phremitv=0.0d0
        endif
      ENDIF

c      IF (IAMPLI.NE.0.or.ibunch.ne.0.or.iundulator.eq.2) THEN
        READ(LUNGFI,AMPLIN)
c        IF (IAMPLI.LT.0) IAMPSKIP=0
c      ENDIF

c     WRITE(6,*)'READING NAMELIST ROIN'
      READ(LUNGFI,ROIN)

c     WRITE(6,*)'READING NAMELIST BERRORN'
      READ(LUNGFI, BERRORN )
      ihphotons=0
      if (ieneloss.lt.0) read(lungfi,photonn)
c     WRITE(6,*)'READING NAMELIST USERN'
      READ(LUNGFI,USERN)
      WRITE(6,*)
      WRITE(6,*)
      WRITE(6,*)

C      CLOSE (LUNGFI)

      if (irbtabxyz.ne.0) then
        irbtab=0
        irbtabzy=0
      else if (irbtabzy.ne.0) then
        irbtab=0
      endif

      IF (XABSORB   .EQ.9999.) XABSORB=XWALLE
      IF (ZABSORB(1).EQ.9999.) ZABSORB(1)=WALL(1)
      IF (ZABSORB(2).EQ.9999.) ZABSORB(2)=WALL(2)

C ALL MULTIPLICATIONS WITH REFLEC ARE WRONG, SO WE CORRECT IT HERE
C (15. MAI 2004)

      DO I=1,3
        REFLEC(I)=CONJG(REFLEC(I))
      ENDDO

      IF (IWBMAP.EQ.-1) IHBPOLY3D=1
      IF (IWBMAP.EQ.-1.AND.IWBPOLY2DH.NE.0) IHBPOLY2DH=1
      IF (IWBMAP.EQ.-1.AND.IWBPOLY2DH.NE.0) IHBPHARM=1

      CALL date_and_time(dtday,dttime,dtzone,idatetime)

      OPEN(UNIT=99,FILE='wave_run.log',status='unknown',access='append')
      WRITE(99,*)icode,' ',dtday,' ',dttime
      close(99)

      if (iampseed.eq.-9999) iampseed=icode

      IF (ABS(KBGENESIS).EQ.2) THEN
        OPEN(UNIT=LUNGENI,FILE='genesis.start',STATUS='OLD')
        READ(LUNGENI,*)XSTART,DMYGAMMA,DUM,ZSTART,YSTART,VZIN,VYIN
        VXIN=1.0D0
        VYIN=VYIN/DMYGAMMA
        VZIN=VZIN/DMYGAMMA
        DMYENERGY=DMYGAMMA*EMASSG1
        CLOSE(LUNGENI)
      ENDIF

      if (abs(xstart).ne.9999.0d0.and.xstop.ne.9999.0d0
     &    .and.xstart.ge.xstop-1.0d0/myinum) then
        write(LUNGFO,*)' '
        write(LUNGFO,*)'*** Error in GFINIT: XSTART and XSTOP are not compatible.'
        write(LUNGFO,*)'Decrease XSTART or nncrease MYINUM or XSTOP!'
        write(LUNGFO,*)' '
        write(6,*)' '
        write(6,*)'*** Error in GFINIT: XSTART and XSTOP are not compatible.'
        write(6,*)'Decrease XSTART or nncrease MYINUM or XSTOP!'
        write(6,*)' '
        STOP '*** PROGRAM WAVE ABORTED ***'
      endif

      DMYGAMMA=DMYENERGY/EMASSG1

      if (ibunch.ne.0.and.ispec.eq.0) then
        write(6,*)' '
        write(6,*)'*** WARNING: ISPEC SET DUE TO IBUNCH AND IUBUNCH'
        write(6,*)' '
        write(lungfo,*)' '
        write(lungfo,*)'*** WARNING: ISPEC SET DUE TO IBUNCH AND IUBUNCH'
        write(lungfo,*)' '
        ispec=1
      endif

      if (ibunch.ne.0.and.iubunch.eq.3) then
        open(unit=21,file='wave_phasespace.dat',status='old')
        call util_skip_comment_end(21,ieof)
        read(21,*)dmygamma,bunchx,xstart,ystart,zstart,yp0,zp0
        close(21)
        dmyenergy=dmygamma*emassg1
        vxin=1.0d0
        vyin=yp0
        vzin=zp0
        xinter=-9999.0d0
c        write(6,*)' '
c        write(6,*)'*** WARNING: IBUNCH AND IUBUNCH HAVE TRIGGERED OVERWRITING'
c        write(6,*)'*** WARNING: OF XSTART ETC.'
c        write(6,*)' '
        write(lungfo,*)' '
        write(lungfo,*)'*** WARNING: IBUNCH AND IUBUNCH HAVE TRIGGERED OVERWRITING'
        write(lungfo,*)'*** WARNING: OF XSTART ETC.'
        write(lungfo,*)' '
      endif

      dmyenergyP=DMYENERGY
      dmygammaP=DMYGAMMA
      DMYBETA=DSQRT((1.0D0-1.0D0/DMYGAMMA)*(1.0D0+1.0D0/DMYGAMMA))
      dmybetaP=DMYBETA
      gammaustep=dmygamma

C--- MODES

      IF (IUNDULATOR*IWIGGLER.NE.0) THEN
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
        WRITE(LUNGFO,*)'BOTH FLAGS IUNDULATOR AND IWIGGLER ARE SET'
        WRITE(LUNGFO,*)'ONLY ONE IS ALLOWED'
        WRITE(6,*)
        WRITE(6,*)'*** ERROR IN GFINIT ***'
        WRITE(6,*)'BOTH FLAGS IUNDULATOR AND IWIGGLER ARE SET'
        WRITE(6,*)'ONLY ONE IS ALLOWED'
        WRITE(6,*)
        STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (IWIGGLER.NE.0) THEN
        IEXPERT=0
      ENDIF

C{--- CONVERT B-FIELD TO MAP

      IF (IWBMAP.EQ.5) THEN
        CALL WBMAP5
        IABEND=7
        goto 9999
      ENDIF
C}--- CONVERT B-FIELD TO MAP

      if (iundulator.eq.2) then
        ispec=1
        ifreq2p=3
      endif

      if (iwiggler.ne.0.or.iundulator.ne.0) then
        istokes=1
      endif

c      if (kampli.ne.0.or.iundulator.eq.2) then
c        CALL BELLIP(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
c        phb0h=B0ELLIPh
c        phb0v=B0ELLIPv
c        phperl=xlellip
c        phshift=ellshft*phperl
c      endif

      if (iundulator.eq.2) then

c        iundulator=0
        kampli=nint(perellip)
        perellip=5.
        xcenell=0.0d0

        xstart=-(perellip*xlellip+ellshft*xlellip)/2.0d0+xcenell

        if (phrb0h.eq.9999.0d0) phrb0h=B0ELLIPh
        if (phrb0v.eq.9999.0d0) phrb0v=B0ELLIPV
        if (phrperl.eq.9999.0d0) phrperl=xlellip
        if (phrshift.eq.9999.0d0) phrshift=ellshft*phrperl

        WGWINFC = 45.
        nlpoi=0
        ibsuper=0
        KBEXTERN=0
        KBAMWLS=0
        KHALBA=0
        KBFELD=0
        KHALBASY=0
        KUNDUGAP=0
        IRFILF=0
        IRFILB=0
        IRBTAB=0
        IFOURBTABZY=0
        IRBTABZY=0
        IRBTABXYZ=0
        KUCROSS=0
        KELLANA=0
        KBREC=0
        kbundumag=0
        kbundumag_c=kbundumag
        KBPOLYMAG=0
        KBGENESIS=0
        KBPOLYH=0
        KBPOLY3D=0
        KBPOLY2DH=0
        KBPHARM=0
        IRFILP=0
        IRFILB0=0
        IBHELM=0
        IMAGSPLN=0
        KMAGSEQ=0
        IWSECTMAGS=0
        ibmasksp=0
        ibsym=0
        ibsymy=0
        ibsymz=0
        bygoff=0.0d0
        bzgoff=0.0d0
        jbmask=0
        ibmask=0
        B0SCGLOBY=1.0
        B0SCGLOBz=1.0
        xbshift=0.0d0
        hshift=0.0d0
        vshift=0.0d0
        xrotd=0.0d0
        IPERIODG=0.0d0
        BTAPERV=0.0d0
        BTAPERH=0.0d0
        XTAPER=0.0d0
        iampli=0

        kellip=1

        xstop=phrperl/2.0d0
        ieneloss=0
        !imagspln=0

        gamma=dmygamma

        DTIM=1.0D0/(CLIGHT1*dmybetap*MYINUM)   !TIME INTERVALLS FOR TRACKING
        BSHIFT=0.5D0          !DONT WORRY

        DS0=CLIGHT1*DTIM
        GAMMA=DMYGAMMA
        ENERGV=GAMMA*EMASSE1
        GMOM=EMASSG1*DSQRT((GAMMA-1.0d0)*(GAMMA+1.0d0))
        EMOM=EMASSE1*DSQRT((GAMMA-1.0d0)*(GAMMA+1.0d0))
        DBRHO=ICHARGE*EMOM/CLIGHT1
        BETA=DSQRT((1.0D0-1.0D0/GAMMA)*(1.0D0+1.0D0/GAMMA))
        DMYBETA=BETA
        V0=CLIGHT1*BETA

        VN=1.0D0/DSQRT(VXIN**2+VYIN**2+VZIN**2)
        VXIN=VXIN*VN*v0
        VYIN=VYIN*VN*v0
        VZIN=VZIN*VN*v0

        TAUPOL01G=POL2CON1*UMFANG*RDIPOL**2/1.**5

        ecdipev1=3.0d0/2.0d0*hbarev1*(clight1/emasse1)**2/emasse1*1.0d18

        gamma1=1.0d0/emassg1
        emom1=emasse1*dsqrt((gamma1-1.0d0)*(gamma1+1.0d0))
        rho1=emom1/clight1
        omegac=1.5d0*gamma1**3*clight1/rho1

        CROTD=DCOSD(XROTD)
        SROTD=DSIND(XROTD)

        IF (XINTER.NE.XSTART.AND.XINTER.NE.-9999.) THEN

          YSTARTO=YSTART
          ZSTARTO=ZSTART

          VXINO=VXIN
          VYINO=VYIN
          VZINO=VZIN

          BETX0=VXIN*BETA
          BETY0=VYIN*BETA
          BETZ0=VZIN*BETA

          X0=XSTART
          Y0=YSTART
          Z0=ZSTART

          VX0=VXIN*V0
          VY0=VYIN*V0
          VZ0=VZIN*V0

          IF (XINTER.GT.XSTART) THEN

            BYDUM=B0SCGLOB
            B0SCGLOB=-B0SCGLOB
            btaperv=-btaperv
            btaperh=-btaperh

            CALL TRACKSHORT(ISNORDER,XINTER,Y0,Z0,-VX0,-VY0,-VZ0,
     &        XSTART,0.0D0,0.0D0,-1.0D0,0.0D0,0.0D0,
     &        XF0,YF0,ZF0,dtshort,VXF0,VYF0,VZF0,DTIM,BSHIFT,GAMMA,BMOVECUT,
     &        IUSTEP,IENELOSS,GAMMAL)

            WRITE(LUNGFO,*)
            WRITE(LUNGFO,*)'     Result of back-tracking due to XINTER:'
            WRITE(LUNGFO,*)
            WRITE(LUNGFO,*)'     x:',XF0
            WRITE(LUNGFO,*)'     y:',YF0
            WRITE(LUNGFO,*)'     z:',ZF0
            WRITE(LUNGFO,*)'     vx:',-VXF0
            WRITE(LUNGFO,*)'     vy:',-VYF0
            WRITE(LUNGFO,*)'     vz:',-VZF0
            WRITE(LUNGFO,*)'     yp:',VYF0/VXF0
            WRITE(LUNGFO,*)'     zp:',VZF0/VXF0
            WRITE(LUNGFO,*)

            B0SCGLOB=BYDUM
            btaperv=-btaperv
            btaperh=-btaperh
            XSTART=XF0
            YSTART=YF0
            ZSTART=ZF0
            VXIN=-VXF0
            VYIN=-VYF0
            VZIN=-VZF0

            GAMMA=GAMMA-GAMMAL !We gain energy here, and gammal is negative!
            DMYGAMMA=GAMMA
            DMYENERGY=GAMMA*EMASSG1

            ENERGV=GAMMA*EMASSE1
            GMOM=EMASSG1*DSQRT((gamma-1.0d0)*(gamma+1.0d0))
            EMOM=EMASSE1*DSQRT((gamma-1.0d0)*(gamma+1.0d0))
            DBRHO=ICHARGE*EMOM/CLIGHT1
            BETA=DSQRT((1.0D0-1.0D0/GAMMA)*(1.0D0+1.0D0/GAMMA))
            DMYBETA=BETA
            V0=CLIGHT1*BETA

          ELSE   !XINTER.GT.XSTART

            CALL TRACKSHORT(ISNORDER,XINTER,Y0,Z0,VX0,VY0,VZ0,
     &        XSTART,0.0D0,0.0D0,1.0D0,0.0D0,0.0D0,
     &        XF0,YF0,ZF0,dtshort,VXF0,VYF0,VZF0,DTIM,BSHIFT,GAMMA,BMOVECUT,
     &        IUSTEP,IENELOSS,GAMMAL)

            XSTART=XF0
            YSTART=YF0
            ZSTART=ZF0
            VXIN=VXF0
            VYIN=VYF0
            VZIN=VZF0

            GAMMA=GAMMA+GAMMAL !We lose energy here!
            DMYGAMMA=GAMMA
            DMYENERGY=GAMMA*EMASSG1

            ENERGV=GAMMA*EMASSE1
            GMOM=EMASSG1*DSQRT((gamma-1.0d0)*(gamma+1.0d0))
            EMOM=EMASSE1*DSQRT((gamma-1.0d0)*(gamma+1.0d0))
            DBRHO=ICHARGE*EMOM/CLIGHT1
            BETA=DSQRT((1.0D0-1.0D0/GAMMA)*(1.0D0+1.0D0/GAMMA))
            DMYBETA=BETA
            V0=CLIGHT1*BETA

          ENDIF  !XINTER.GT.XSTART

        ENDIF !(XINTER.NE.-9999.)

        xinter=-9999.0d0

        call trackshort(isnorder,
     &    xstart,ystart,zstart,vxin,vyin,vzin,
     &    -xlellip/2.0d0,0.0d0,0.0d0,  1.0d0,0.0d0,0.0d0,
     &    xstart,ystart,zstart,dum,vxin,vyin,vzin,
     &    1.0d0/(clight1*dmybeta*myinum),0.5d0,dmygamma,bmovecut
     &    ,0,0,GAMMAL)

      endif

      IF (IUNDULATOR.NE.0) THEN

        IEXPERT=0
        ihtrackm=0

        if (ibunch.eq.0) then

          IF ((IWBMAP.NE.0.OR.IBFORCE.NE.0.OR.IOPTIC.NE.0)
     &        .and.
     &    (iemit.ne.0.or.kbrec.ne.0.or.kbundumag.ne.0.or.kbextern.ne.0.or.kbpolymag.ne.0)) then
            WRITE(LUNGFO,*)
            WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
            WRITE(LUNGFO,*)'IUNDULATOR HAS SET IMAGSPLN=-9999,'
            WRITE(LUNGFO,*)
     &        'WHICH IS INCOMPATIBLE WITH IWBMAP/IBFORCE/IOPTIC'
            WRITE(LUNGFO,*)'TURN OFF IUNDULATOR, IF YOU USE IWBMAP/IBFORCE/IOPTIC'
            WRITE(LUNGFO,*)
            WRITE(6,*)
            WRITE(6,*)'*** ERROR IN GFINIT ***'
            WRITE(6,*)'IUNDULATOR HAS SET IMAGSPLN=-9999,'
            WRITE(6,*)
     &        'WHICH IS INCOMPATIBLE WITH IWBMAP/IBFORCE/IOPTIC'
            WRITE(6,*)'TURN OFF IUNDULATOR, IF YOU USE IWBMAP/IBFORCE/IOPTIC'
            WRITE(6,*)
            STOP '*** PROGRAM WAVE ABORTED ***'
          ENDIF

          icluster=0

          IF (ISPEC.NE.0) THEN

            ispecmode=2

            !if (nroi.ne.0) ispecmode=1

            IF (IAMPLI.GT.0.AND.ISPECMODE.NE.3.and.iamprep.ge.0) THEN
c noch ueberdenken, iphase bereits kompatible gemacht, 17.10.2012
              WRITE(LUNGFO,*)
     &          '*** Warning in GFINIT: ISPECMODE not 3, but IAMPLI.gt.0 and IAMPREP.gt.0'
              WRITE(6,*)"*** BE CAREFUL ***"
              PRINT *,
     &          '*** Warning in GFINIT: ISPECMODE not 3, but IAMPLI.gt.0 and IAMPREP.gt.0'
              print*,"*** BE CAREFUL ***"
            ENDIF

          ENDIF !ISPEC

          IMAGSPLN=-9999
          if (iemit.ne.0.or.kbrec.ne.0.or.kbundumag.ne.0.or.kbextern.ne.0.or.kbpolymag.ne.0) IMAGSPLN=0

          IRFILL0=0
C         IWFILL0=1
c          NLPOI=-9999
          NLPOI=0
          CX1=9999.
          CY1=9999.
          CZ1=9999.
          HIG1=1000.
          WID1=1000.
          CX2=9999.
          CY2=9999.
          CZ2=9999.
          HIG2=1000.
          WID2=1000.
          WGWINFC=PI1/4.0D0*DMYGAMMA
          WBL0CUT=0.0
          WBL0HYS=1.0
          IBL0CUT=0
          ISOUREXT=0
          ISPECDIP=0
          IF (IFOLD.NE.0) IFOLD=1
          IF (iefold.ne.0.and.IEFOLD.ne.1.and.iefold.ne.-1.and.iefold.ne.3) then
            write(lungfo,*)
            write(lungfo,*)"*** Warning in gfinit: IEFOLD MUST BE ONE OF [0,1,3,-1]"
            write(lungfo,*)"*** Will set it to IEFOLD=1 ***"
            write(lungfo,*)
            print*
            print*,"*** Warning in gfinit: IEFOLD MUST BE ONE OF [0,1,3,-1]"
            print*,"*** Will set it to IEFOLD=1 ***"
            print*
            IEFOLD=1
          endif
          IF (IPIN.GT.0.and.ipin.ne.3) IPIN=1
          BMOVECUT=1.0D-6

        else !ibunch

          if (icluster.ne.0) mthreads=0

          IF (ISPEC.NE.0) THEN

            ISPECMODE=2

            IF (IPHASE.NE.0) THEN
              WRITE(LUNGFO,*)' '
              WRITE(LUNGFO,*)
     &          '*** Warning in GFINIT: IPHASE set to zero, due to IBUNCH'
              WRITE(LUNGFO,*)' '
              PRINT *,' '
              PRINT *,
     &          '*** Warning in GFINIT: IPHASE set to zero, due to IBUNCH'
              PRINT *,' '
              iphase=0
            ENDIF

            IF (iampli.ne.0.and.iamprep.lt.0) THEN
              WRITE(LUNGFO,*)
     &          '*** Error in GFINIT: IBUNCH and IAMPREP < 0 are not compatible ***'
              PRINT *,
     &          '*** Error in GFINIT: IBUNCH and IAMPREP < 0 are not compatible ***'
              STOP '*** PROGRAM WAVE ABORTED ***'
            ENDIF

          ENDIF !ISPEC

          IFOLD=0
          IEFOLD=0
          !IMAGSPLN=0
          IRFILL0=0
c          NLPOI=-9999
          NLPOI=0
          CX1=9999.
          CY1=9999.
          CZ1=9999.
          HIG1=1000.
          WID1=1000.
          CX2=9999.
          CY2=9999.
          CZ2=9999.
          HIG2=1000.
          WID2=1000.
          WGWINFC=PI1/4.0D0*DMYGAMMA
          WBL0CUT=0.0
          WBL0HYS=1.0
          IBL0CUT=0
          ISOUREXT=0
          ISPECDIP=0
          IFOLD=0
          IEFOLD=0

          if (iefold.ne.0) then
            WRITE(6,*)' '
            WRITE(6,*)
     &        '      *** Warning in GFINIT: IEFOLD is used for IBUNCH, be careful!'
            WRITE(6,*)' '
            WRITE(LUNGFO,*)' '
            WRITE(LUNGFO,*)
     &        '      *** Warning in GFINIT: IEFOLD is used for IBUNCH, be careful!'
            WRITE(LUNGFO,*)' '
          endif

          IF (iundulator.ne.2
     &        .and.IPIN.GT.0.and.ipin.ne.3.and.neinbunch.eq.1) then
            IPIN=3
            WRITE(6,*)' '
            WRITE(6,*)
     &        '      *** GFINIT: IPIN=3 has been set due to IUNDULATOR and IBUNCH and NEINBUNCH=1, be careful!'
            WRITE(lungfo,*)' '
            WRITE(lungfo,*)
     &        '      *** GFINIT: IPIN=3 has been set due to IUNDULATOR and IBUNCH and NEINBUNCH=1, be careful!'
            WRITE(6,*)' '
          endif

          BMOVECUT=1.0D-6

        endif !ibunch

      ENDIF !IUNDULATOR

      IF (IWIGGLER.GT.1) THEN

        IF (ibunch.ne.0) then
          WRITE(LUNGFO,*)
     &      '*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)
     &      '*** IWIGGLER.GT.1 .AND. IBUNCH.NE.0 ARE INCOMPATIBLE ***'
          WRITE(6,*)
     &      '*** ERROR IN GFINIT ***'
          WRITE(6,*)
     &      '*** IWIGGLER.GT.1 .AND. IBUNCH.NE.0 ARE INCOMPATIBLE ***'
          STOP '*** PROGRAM WAVE ABORTED ***'
        endif

          IF ((IWBMAP.NE.0.OR.IBFORCE.NE.0.OR.IOPTIC.NE.0)
     &        .and.
     &    (iemit.ne.0.or.kbrec.ne.0.or.kbundumag.ne.0.or.kbextern.ne.0.or.kbpolymag.ne.0)) then

          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)'IWIGGLER HAS TURNED SET IMAGSPLN=-9999,'
          WRITE(LUNGFO,*)
     &      'WHICH IS INCOMPATIBLE WITH IWBMAP/IBFORCE/IOPTIC/IBUNCH'
          WRITE(LUNGFO,*)'TURN OFF IWIGGLER, IF YOU USE IWBMAP/IBFORCE/IOPTIC/IBUNCH'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** ERROR IN GFINIT ***'
          WRITE(6,*)'IWIGGLER HAS TURNED SET IMAGSPLN=-9999,'
          WRITE(6,*)
     &      'WHICH IS INCOMPATIBLE WITH IWBMAP/IBFORCE/IOPTIC/IBUNCH'
          WRITE(6,*)'TURN OFF IWIGGLER, IF YOU USE IWBMAP/IBFORCE/IOPTIC/IBUNCH'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
        ENDIF

        ISPECDIP=-2

        IMAGSPLN=-9999
        !if (iemit.ne.0.or.kbrec.ne.0.or.kbundumag.ne.0.or.kbextern.ne.0.or.kbpolymag.ne.0) IMAGSPLN=0

        IRFILL0=0
C         IWFILL0=1
        NLPOI=-9999
        WGWINFC=10.
        CX1=9999.
        CY1=9999.
        CZ1=9999.
        HIG1=9999.
        WID1=9999.
        CX2=9999.
        CY2=9999.
        CZ2=9999.
        HIG2=9999.
        WID2=9999.
        !WBL0CUT=0.1
        !WBL0HYS=1.0
        !IBL0CUT=1
        ISOUREXT=0
        IF (IFOLD.NE.0) IFOLD=1
        IF (IEFOLD.NE.0) IEFOLD=1
      ENDIF !IWIGGLER

      IF (IWIGGLER.EQ.1) THEN

          IF ((IWBMAP.NE.0.OR.IBFORCE.NE.0.OR.IOPTIC.NE.0)
     &        .and.
     &    (iemit.ne.0.or.kbrec.ne.0.or.kbundumag.ne.0.or.kbextern.ne.0.or.kbpolymag.ne.0)) then
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)'IWIGGLER HAS TURNED SET IMAGSPLN=-9999,'
          WRITE(LUNGFO,*)
     &      'WHICH IS INCOMPATIBLE WITH IWBMAP/IBFORCE/IOPTIC/IBUNCH'
          WRITE(LUNGFO,*)'TURN OFF IWIGGLER, IF YOU USE IWBMAP/IBFORCE/IOPTIC/IBUNCH'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** ERROR IN GFINIT ***'
          WRITE(6,*)'IWIGGLER HAS TURNED SET IMAGSPLN=-9999,'
          WRITE(6,*)
     &      'WHICH IS INCOMPATIBLE WITH IWBMAP/IBFORCE/IOPTIC/IBUNCH'
          WRITE(6,*)'TURN OFF IWIGGLER, IF YOU USE IWBMAP/IBFORCE/IOPTIC/IBUNCH'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
        ENDIF

C        IF (IPHASE.NE.0.OR.IAMPLI.NE.0) THEN
c noch ueberdenken, iphase bereits kompatible gemacht, 17.10.2012
C          WRITE(LUNGFO,*)
C     &      '*** Warning in GFINIT: ISPECMODE set to 3, due to IPHASE'
C          PRINT *,
C     &      '*** Warning in GFINIT: ISPECMODE set to 3, due to IPHASE'
C          ISPECMODE=3
C        ELSE
C          ISPECMODE=2
C          if (icluster.eq.0.and.ibunch.eq.0.and.nroi.eq.0) ispecmode=3
C        ENDIF

        IF (ISPECMODE.NE.3.AND.(IPHASE.NE.0.OR.IAMPLI.NE.0)) THEN
          WRITE(6,*)
     &      '*** Warning in GFINIT: ISPECMODE not 3, but IPHASE or IAMPLI set ***'
          WRITE(6,*)
     &      '*** This is not yet fully tested, be careful ***'
          WRITE(LUNGFO,*)
     &      '*** Warning in GFINIT: ISPECMODE not 3, but IPHASE or IAMPLI set ***'
          WRITE(LUNGFO,*)
     &      '*** This is not yet fully tested, be careful ***'
        ENDIF

        IMAGSPLN=-9999
        !if (iemit.ne.0.or.kbrec.ne.0.or.kbundumag.ne.0.or.kbextern.ne.0.or.kbpolymag.ne.0) IMAGSPLN=-9999

        IRFILL0=0
C         IWFILL0=1
        NLPOI=-9999
        WGWINFC=9999.
        CX1=9999.
        CY1=9999.
        CZ1=9999.
        HIG1=9999.
        WID1=9999.
        CX2=9999.
        CY2=9999.
        CZ2=9999.
        HIG2=9999.
        WID2=9999.
        WBL0CUT=0.1
        WBL0HYS=1.0
        IBL0CUT=1
        ISOUREXT=0
        ISPECDIP=0

        IF (IFOLD.NE.0) IFOLD=1

        if (ibunch.ne.0) ibunch=-1
        if (ibunch.ne.0) then
          IFOLD=0
          IEFOLD=0
        endif
      ENDIF !IWIGGLER

      if (iwiggler.ne.0.and.ibunch.ne.0.and.ipin.ne.0.and.neinbunch.eq.1) ipin=3

      if (espread.le.0.0d0.and.iefold.ne.0) then
        iefold=0
        write(lungfo,*)'     *** Warning in GFINIT: IEFOLD set zero, since ESPREAD <= 0.0'
        write(6,*)'     *** Warning in GFINIT: IEFOLD set zero, since ESPREAD <= 0.0'
      endif

      IF (ISPEC.NE.0) THEN

        if (ibunch.ne.0.and.ifold.ne.0) then
          write(6,*)' '
          write(6,*)' *** Warning in gfinit: IBUNCH and IFOLD are both set, be careful!'
          write(6,*)' '
          write(lungfo,*)' '
          write(lungfo,*)' *** Warning in gfinit: IBUNCH and IFOLD are both set, be careful!'
          write(lungfo,*)' '
        endif

        if (ibunch.ne.0.and.iefold.ne.0) then
          write(6,*)' '
          write(6,*)' *** Warning in gfinit: IBUNCH and IEFOLD are both set, be careful!'
          write(6,*)' '
          write(lungfo,*)' '
          write(lungfo,*)' *** Warning in gfinit: IBUNCH and IEFOLD are both set, be careful!'
          write(lungfo,*)' '
        endif

        if (ieneloss.ne.0.and.ispecmode.gt.3) then
          write(lungfo,*)' '
          write(lungfo,*)'*** Error: IENELOSS and ISPECMODE are incompatible ***'
          WRITE(lungfo,*)'*** PROGRAM WAVE ABORTED'
          write(lungfo,*)' '
          write(6,*)' '
          write(6,*)'*** Error: IENELOSS and ISPECMODE are incompatible ***'
          WRITE(6,*)'*** PROGRAM WAVE ABORTED'
          write(6,*)' '
          stop
        endif

        if (ibunch.ne.0.and.ispecmode.ne.2) then
          write(6,*)' '
          write(6,*)' *** ERROR IN GFINIT: IBUNCH set, but ISPECMODE.ne.2!'
          write(6,*)' **** Please check namelist $CONTRL in wave.in'
          write(6,*)' '
          WRITE(6,*)'*** PROGRAM WAVE ABORTED'
          write(6,*)' '
          write(lungfo,*)' '
          write(lungfo,*)' *** ERROR IN GFINIT: IBUNCH set, but ISPECMODE.ne.2!'
          write(lungfo,*)' **** Please check namelist $CONTRL in wave.in'
          write(lungfo,*)' '
          WRITE(lungfo,*)'*** PROGRAM WAVE ABORTED'
          write(lungfo,*)' '
          stop
        endif

        if (iefold.ne.0.and.ifreq2p.ne.3) then
          write(LUNGFO,*)' '
          write(LUNGFO,*)'*** Warning in GFINIT: IEFOLD.ne.0 and IFRQE2P.ne.3 ***'
          write(LUNGFO,*)'IFREQ2P set to IFREQ2P=3'
          write(LUNGFO,*)' '
          write(6,*)' '
          write(6,*)'*** Warning in GFINIT: IEFOLD.ne.0 and IFRQE2P.ne.3 ***'
          write(6,*)'IFREQ2P set to IFREQ2P=3'
          write(6,*)' '
          IFREQ2P=3
        endif

        IF (ISPECMODE.NE.5) THEN
          IF (IPIN.EQ.2) THEN
            WRITE(6,*)'*** WARNING IN GFINIT: IPIN.EQ.2 .AND. ISPECMODE.NE.5'
            WRITE(6,*)'*** IPIN SET TO 1'
            WRITE(LUNGFO,*)'*** WARNING IN GFINIT: IPIN.EQ.2 .AND. ISPECMODE.NE.5'
            WRITE(LUNGFO,*)'*** IPIN SET TO 1'
            IPIN=1
          ENDIF !IPIN.EQ.2
          if (ibunch.eq.0) then
            IF (IFOLD.EQ.2) THEN
              WRITE(6,*)'*** WARNING IN GFINIT: IFOLD.EQ.2 .AND. ISPECMODE.NE.5'
              WRITE(6,*)'*** IFOLD SET TO 1'
              WRITE(LUNGFO,*)'*** WARNING IN GFINIT: IFOLD.EQ.2 .AND. ISPECMODE.NE.5'
              WRITE(LUNGFO,*)'*** IFOLD SET TO 1'
              IFOLD=1
            ENDIF !IPIN.EQ.2
            IF (IEFOLD.EQ.2) THEN
              WRITE(6,*)'*** WARNING IN GFINIT: IEFOLD.EQ.2 .AND. ISPECMODE.NE.5'
              WRITE(6,*)'*** IEFOLD SET TO 1'
              WRITE(LUNGFO,*)'*** WARNING IN GFINIT: IEFOLD.EQ.2 .AND. ISPECMODE.NE.5'
              WRITE(LUNGFO,*)'*** IEFOLD SET TO 1'
              IEFOLD=1
            ENDIF !IEFOLD.EQ.2
          endif
        ENDIF !ISPECMODE

        IF (IPIN.EQ.2.AND.ISPECDIP.NE.0) THEN
          WRITE(6,*)'*** WARNING IN GFINIT: IPIN.EQ.2 .AND. ISPECDIP.NE.0'
          WRITE(6,*)'*** IPIN SET TO 1'
          WRITE(LUNGFO,*)'*** WARNING IN GFINIT: IPIN.EQ.2 .AND. ISPECDIP.NE.0'
          WRITE(LUNGFO,*)'*** IPIN SET TO 1'
          IPIN=1
        ENDIF !IPIN.EQ.2

        if (ibunch.eq.0) then
          IF (IFOLD.NE.0.AND.IPIN.EQ.0.AND.IFOLD.NE.2) THEN
            PRINT*,'            *** WARNING IN GFINIT: IPIN.EQ.0 .AND. IFOLD.NE.2'
            PRINT*,'            *** IFOLD SET TO ZERO'
            print*
            WRITE(LUNGFO,*)'             *** WARNING IN GFINIT: IPIN.EQ.0 .AND. IFOLD.NE.2'
            WRITE(LUNGFO,*)'             *** IFOLD SET TO ZERO'
            write(lungfo,*)
            IFOLD=0
          ENDIF
        endif !(ibunch.eq.0) then

        IF (IPIN.EQ.2.AND.IPINALL.NE.0) THEN
          WRITE(6,*)'*** WARNING IN GFINIT: IPIN.EQ.2 .AND. IPINALL.NE.0'
          WRITE(6,*)'*** IPINALL SET TO ZERO'
          WRITE(LUNGFO,*)'*** WARNING IN GFINIT: IPIN.EQ.2 .AND. IPINALL.NE.0'
          WRITE(LUNGFO,*)'*** IPINALL SET TO ZERO'
          IPINALL=0
        ENDIF !IPIN.EQ.2

        IF (IPIN.EQ.2.AND.IWFILRAY.NE.0) THEN
          WRITE(6,*)'*** WARNING IN GFINIT: IPIN.EQ.2 .AND. IWFILRAY.NE.0'
          WRITE(6,*)'*** IWFILRAY SET TO ZERO'
          WRITE(LUNGFO,*)'*** WARNING IN GFINIT: IPIN.EQ.2 .AND. IWFILRAY.NE.0'
          WRITE(LUNGFO,*)'*** IWFILRAY SET TO ZERO'
          IWFILRAY=0
        ENDIF !IPIN.EQ.2

        IF (IPIN.EQ.3.AND.IWFILRAY.NE.0) THEN
          WRITE(6,*)'*** WARNING IN GFINIT: IPIN.EQ.3 .AND. IWFILRAY.NE.0'
          WRITE(6,*)'*** IWFILRAY SET TO ZERO'
          WRITE(LUNGFO,*)'*** WARNING IN GFINIT: IPIN.EQ.3 .AND. IWFILRAY.NE.0'
          WRITE(LUNGFO,*)'*** IWFILRAY SET TO ZERO'
          IWFILRAY=0
        ENDIF !IPIN.EQ.2

        IF (IPIN.EQ.2.AND.ISPECSUM.NE.0) THEN
          WRITE(6,*)'*** WARNING IN GFINIT: IPIN.EQ.2 .AND. ISPECSUM.NE.0'
          WRITE(6,*)'*** ISPECSUM SET TO ZERO'
          WRITE(LUNGFO,*)'*** WARNING IN GFINIT: IPIN.EQ.2 .AND. ISPECSUM.NE.0'
          WRITE(LUNGFO,*)'*** ISPECSUM SET TO ZERO'
          ISPECSUM=0
        ENDIF !IPIN.EQ.2

        IF (IPIN.EQ.2.AND.ISPECANA.NE.0) THEN
          WRITE(6,*)'*** WARNING IN GFINIT: IPIN.EQ.2 .AND. ISPECANA.NE.0'
          WRITE(6,*)'*** IPIN SET TO 1'
          WRITE(LUNGFO,*)'*** WARNING IN GFINIT: IPIN.EQ.2 .AND. ISPECANA.NE.0'
          WRITE(LUNGFO,*)'*** IPIN SET TO 1'
          IPIN=1
        ENDIF !IPIN.EQ.2

        IF (IPIN.EQ.2.AND.IAMPLI.NE.0) THEN
          WRITE(6,*)'*** WARNING IN GFINIT: IPIN.EQ.2 .AND. IAMPLI.NE.0'
          WRITE(6,*)'*** PROGRAM WAVE ABORTED'
          WRITE(LUNGFO,*)'*** WARNING IN GFINIT: IPIN.EQ.2 .AND. IAMPLI.NE.0'
          WRITE(LUNGFO,*)'*** PROGRAM WAVE ABORTED'
          STOP
        ENDIF !IPIN.EQ.2

        IF (IPIN.EQ.2.AND.IRFILOB.NE.0) THEN
          WRITE(6,*)'*** WARNING IN GFINIT: IPIN.EQ.2 .AND. IRFILOB.NE.0'
          WRITE(6,*)'*** PROGRAM WAVE ABORTED'
          WRITE(LUNGFO,*)'*** WARNING IN GFINIT: IPIN.EQ.2 .AND. IRFILOB.NE.0'
          WRITE(LUNGFO,*)'*** PROGRAM WAVE ABORTED'
          STOP
        ENDIF !IPIN.EQ.2

        IF (IPIN.EQ.2.AND.IUSEM.NE.0) THEN
          WRITE(6,*)'*** WARNING IN GFINIT: IPIN.EQ.2 .AND. IUSEM.NE.0'
          WRITE(6,*)'*** PROGRAM WAVE ABORTED'
          WRITE(LUNGFO,*)'*** WARNING IN GFINIT: IPIN.EQ.2 .AND. IUSEM.NE.0'
          WRITE(LUNGFO,*)'*** PROGRAM WAVE ABORTED'
          STOP
        ENDIF !IPIN.EQ.2

      ENDIF !ISPEC.NE.0

      IF (IFOLD.NE.0
     &    .AND.IFOLD.NE.1.AND.IFOLD.NE.2.AND.IFOLD.NE.-1.AND.IFOLD.NE.-2
     &    ) THEN
        WRITE(LUNGFO,*)
     &    '*** ERROR IN GFINIT: BAD VALUE OF IFOLD, CHECK INPUT '
        WRITE(LUNGFO,*)'*** PROGRAM WAVE ABORTED ***'
        WRITE(6,*)
     &    '*** ERROR IN GFINIT: BAD VALUE OF IFOLD, CHECK INPUT '
        WRITE(6,*)'*** PROGRAM WAVE ABORTED ***'
        STOP
      ENDIF

      IF (NROI.EQ.0) THEN
        NROI=2
        ROIX(1)=-1.0D10
        ROIX(2)=1.0D10
        ROIP(1)=1.0D0
        ROIP(2)=1.0D0
        IROIASYEXP(1)=0
      ENDIF

      NROIA=ABS(NROI)

      IF (NROIA.GT.NROIP) THEN
        WRITE(6,*)
     &    '*** PARAMETER NROIP EXCEEDED: CHECK NROI IN NAMELIST ROIN'
        WRITE(6,*)
     &    'OR INCREASE NROIP IN SOURCE.CMN  ***'
        WRITE(LUNGFO,*)
     &    '*** PARAMETER NROIP EXCEEDED: CHECK NROI IN NAMELIST ROIN'
        WRITE(LUNGFO,*)
     &    'OR INCREASE NROIP IN SOURCE.CMN  ***'
        STOP
      ENDIF

      DO IROI=1,NROIA
        IF (ROIP(IROI).EQ.0.0D0) THEN
          ROIP(IROI)=1.0D0
        ENDIF
      ENDDO   !IROI

      IF (NROI.GT.0) THEN
        DO IROI=1,NROIA-1
          IF (ROIX(IROI).GE.ROIX(IROI+1)) THEN
            WRITE(6,*)
     &        '*** ERROR IN NAMELIST ROIN: VALUES OF ROIX NOT IN INCREASING ORDER'
            WRITE(6,*)
     &        '*** OR NUMBER OF ROIX DOES NOT MATCH NROI'
            WRITE(LUNGFO,*)
     &        '*** ERROR IN NAMELIST ROIN: VALUES OF ROIX NOT IN INCREASING ORDER'
            WRITE(LUNGFO,*)
     &        '*** OR NUMBER OF ROIX DOES NOT MATCH NROI'
            STOP
          ENDIF
        ENDDO   !IROI
      ENDIF

      IF (IPIN.EQ.2) THEN
        mpinyorig=mpiny
        mpinzorig=mpinz
        MPINZ=1
        MPINY=1
      ENDIF

      IF (ISIGSTO.EQ.0) ISIGSTO=1

      IF (ISPec.ne.0.and.ipin.eq.3.AND.IBRILL.NE.0) THEN
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)'*** WARNING IN GFINIT ***'
        WRITE(LUNGFO,*)'FLAG IBRILL AND IPIN=3 ARE NOT COMPATIBLE'
        WRITE(LUNGFO,*)'IBRILL SET TO ZERO'
        WRITE(LUNGFO,*)
        WRITE(6,*)
        WRITE(6,*)'*** WARNING IN GFINIT ***'
        WRITE(6,*)'FLAG IBRILL AND IPIN=3 ARE NOT COMPATIBLE'
        WRITE(6,*)'IBRILL SET TO ZERO'
        WRITE(6,*)
        ibrill=0
      ENDIF

      IF (ISPEC.NE.0.AND.IBRILL.NE.0.AND.ISTOKES.EQ.0) THEN
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
        WRITE(LUNGFO,*)'FLAG IBRILL IS SET BUT ISTOKES IS NOT'
        WRITE(LUNGFO,*)'SET ALSO FLAG ISTOKES IN INPUT FILE'
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)
        WRITE(6,*)
        WRITE(6,*)'*** ERROR IN GFINIT ***'
        WRITE(6,*)'FLAG IBRILL IS SET BUT ISTOKES IS NOT'
        WRITE(6,*)'SET ALSO FLAG ISTOKES IN INPUT FILE'
        WRITE(6,*)
        WRITE(6,*)
        STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (ISPEC.NE.0.AND.IWFILRAY.NE.0.AND.ISTOKES.EQ.0) THEN
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
        WRITE(LUNGFO,*)'FLAG IWFILRAY IS SET BUT ISTOKES IS NOT'
        WRITE(LUNGFO,*)'SET ALSO FLAG ISTOKES IN INPUT FILE'
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)
        WRITE(6,*)
        WRITE(6,*)'*** ERROR IN GFINIT ***'
        WRITE(6,*)'FLAG IWFILRAY IS SET BUT ISTOKES IS NOT'
        WRITE(6,*)'SET ALSO FLAG ISTOKES IN INPUT FILE'
        WRITE(6,*)
        WRITE(6,*)
        STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (ISPECMODE.LT.0) ISPECMODE=-ISPECMODE
      IF (ISPECMODE.EQ.0) ISPECMODE=2

      IF (
     &    ISPECMODE.NE.1.AND.
     &    ISPECMODE.NE.2.AND.
     &    ISPECMODE.NE.3.AND.
     &    ISPECMODE.NE.4.AND.
     &    ISPECMODE.NE.5) THEN

        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
        WRITE(LUNGFO,*)'BAD VALUE OF ISPECMODE'
        WRITE(LUNGFO,*)'CHECK INPUT FILE WAVE.IN'
        WRITE(LUNGFO,*)

        WRITE(6,*)
        WRITE(6,*)'*** ERROR IN GFINIT ***'
        WRITE(6,*)'BAD VALUE OF ISPECMODE'
        WRITE(6,*)'CHECK INPUT FILE WAVE.IN'
        WRITE(6,*)
        STOP '*** PROGRAM WAVE ABORTED ***'

      ENDIF

C7MAR97      IF (IFILTER.EQ.0) IHFIL=0

      IF (IFILTER.LT.0.AND.IFILMUL.NE.0) THEN
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
        WRITE(LUNGFO,*)'IFILTER.LT.0.AND.IFILMUL.NE.0'
        WRITE(LUNGFO,*)'CHECK INPUT FILE WAVE.IN'
        WRITE(LUNGFO,*)
        WRITE(6,*)
        WRITE(6,*)'*** ERROR IN GFINIT ***'
        WRITE(6,*)'IFILTER.LT.0.AND.IFILMUL.NE.0'
        WRITE(6,*)'CHECK INPUT FILE WAVE.IN'
        WRITE(6,*)
        STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (IFILTER.EQ.0.AND.IFILMUL.NE.0) THEN
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)'*** WARNING IN GFINIT ***'
        WRITE(LUNGFO,*)'IFILMUL.NE.0 .AND. IFILTER.EQ.0'
        WRITE(LUNGFO,*)'IFILTER SET TO ONE'
        WRITE(LUNGFO,*)
        WRITE(6,*)
        WRITE(6,*)'*** WARNING IN GFINIT ***'
        WRITE(6,*)'IFILMUL.NE.0 .AND. IFILTER.EQ.0'
        WRITE(6,*)'IFILTER SET TO ONE'
        WRITE(6,*)
        IFILTER=1
      ENDIF

      if (imagspln.eq.-9999.and.ibunch.ne.0) then
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)'*** WARNING IN GFINIT ***'
        WRITE(LUNGFO,*)'IMAGSPLN.EQ.-9999.AND.IUBUNCH.NE.0'
        WRITE(LUNGFO,*)'IMAGSPLN SET TO ZERO'
        WRITE(LUNGFO,*)
        WRITE(6,*)
        WRITE(6,*)'*** WARNING IN GFINIT ***'
        WRITE(6,*)'IMAGSPLN.EQ.-9999.AND.IUBUNCH.NE.0'
        WRITE(6,*)'IMAGSPLN SET TO ZERO'
        WRITE(6,*)
        imagspln=0
      endif

      IF (IMAGSPLN.NE.-9999.AND.IMAGSPLN.LT.0) IMAGSPLN=-1

      IF (IMAGSPLN.GT.0) THEN

        OPEN(UNIT=99,FILE='magjob.dat',STATUS='OLD'
     &    ,RECL=256)

        READ(99,*)IMAGJOB
        READ(99,*)

        IF (IMAGSPLN.NE.IMAGJOB) THEN

          WRITE(6,*)'*** ERROR IN GFINIT:'
          WRITE(6,*)
     &      'IMAGSPLN DOES NOT MATCH JOB NUMBER ON FILE IMAGSPL:magjob.dat'
          WRITE(6,*)'FIELD TAKEN FROM REFERENCE ORBIT'
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT:'
          WRITE(LUNGFO,*)
     &      'IMAGSPLN DOES NOT MATCH JOB NUMBER ON FILE IMAGSPL:magjob.dat'
          WRITE(LUNGFO,*)'FIELD TAKEN FROM REFERENCE ORBIT'
          READ(99,*)XSTART,YSTART,ZSTART
          READ(99,*)VXIN,VYIN,VZIN
          READ(99,*)XSTOPR,DMYENERGY
          IF (XSTOP.EQ.9999.) XSTOP=XSTOPR

        ENDIF   !IMAGJOB

        CLOSE(99)

      ENDIF   !IMAGSPLN

C5.10.95 IF (ISPEC.NE.0.AND.IMAGSPLN.NE.0.AND.IOPTIC.NE.0) THEN
C5.10.95 WARUM ISPEC ?? IN ABFRAGE?? BEOBACHTEN
      IF (IMAGSPLN.NE.0.AND.IOPTIC.NE.0) THEN
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
        WRITE(LUNGFO,*)'FLAGS IMAGSPLN AND IOPTIC ARE SET'
        WRITE(LUNGFO,*)'TURN OFF IMAGSPLN, IF YOU USE IOPTIC'
        WRITE(LUNGFO,*)
        WRITE(6,*)
        WRITE(6,*)'*** ERROR IN GFINIT ***'
        WRITE(6,*)'FLAGS IMAGSPLN AND IOPTIC ARE SET'
        WRITE(6,*)'TURN OFF IMAGSPLN, IF YOU USE IOPTIC'
        WRITE(6,*)
        STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (IMAGSPLN.NE.0.AND.IBFORCE.NE.0) THEN
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
        WRITE(LUNGFO,*)'FLAGS IMAGSPLN AND IBFORCE ARE SET'
        WRITE(LUNGFO,*)'TURN OFF IMAGSPLN, IF YOU USE IBFORCE'
        WRITE(LUNGFO,*)
        WRITE(6,*)
        WRITE(6,*)'*** ERROR IN GFINIT ***'
        WRITE(6,*)'FLAGS IMAGSPLN AND IBFORCE ARE SET'
        WRITE(6,*)'TURN OFF IMAGSPLN, IF YOU USE IBFORCE'
        WRITE(6,*)
        STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

          IF ((IWBMAP.NE.0.OR.IBFORCE.NE.0.OR.IOPTIC.NE.0)
     &        .and.
     &    (iemit.ne.0.or.kbrec.ne.0.or.kbundumag.ne.0.or.kbextern.ne.0.or.kbpolymag.ne.0)) then
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
        WRITE(LUNGFO,*)'BOTH FLAGS IMAGSPLN AND IWBMAP ARE SET'
        WRITE(LUNGFO,*)'TURN OFF IMAGSPLN, IF YOU USE IWBMAP'
        WRITE(LUNGFO,*)
        WRITE(6,*)
        WRITE(6,*)'*** ERROR IN GFINIT ***'
        WRITE(6,*)'BOTH FLAGS IMAGSPLN AND IWBMAP ARE SET'
        WRITE(6,*)'TURN OFF IMAGSPLN, IF YOU USE IWBMAP'
        WRITE(6,*)
        STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (ISPEC.NE.0) THEN

        IF (IDESYNC.NE.0.AND.IFOLD.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** WARNING IN GFINIT ***'
          WRITE(LUNGFO,*)
     &      'FLAGS IDESYNC AND IFOLD ARE INCOMPATIBLE'
          WRITE(LUNGFO,*)'IFOLD SET TO ZERO'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** WARNING IN GFINIT ***'
          WRITE(6,*)
     &      'FLAGS IDESYNC AND IFOLD ARE INCOMPATIBLE'
          WRITE(6,*)'IFOLD SET TO ZERO'
          WRITE(6,*)
          IFOLD=0
        ENDIF

        IF (IDESYNC.NE.0.AND.IDOSE.EQ.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** WARNING IN GFINIT ***'
          WRITE(LUNGFO,*)
     &      'FLAGS IDESYNC AND IDOSE ARE INCOMPATIBLE'
          WRITE(LUNGFO,*)'IDOSE SET TO ONE'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** WARNING IN GFINIT ***'
          WRITE(6,*)
     &      'FLAGS IDESYNC AND IDOSE ARE INCOMPATIBLE'
          WRITE(6,*)'IDOSE SET TO ONE'
          WRITE(6,*)
          IDOSE=1
        ENDIF

        IF (IDESYNC.NE.0.AND.ISTOKES.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** WARNING IN GFINIT ***'
          WRITE(LUNGFO,*)
     &      'FLAGS IDESYNC AND ISTOKES ARE INCOMPATIBLE'
          WRITE(LUNGFO,*)'ISTOKES SET TO ZERO'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** WARNING IN GFINIT ***'
          WRITE(6,*)
     &      'FLAGS IDESYNC AND ISTOKES ARE INCOMPATIBLE'
          WRITE(6,*)'ISTOKES SET TO ZERO'
          WRITE(6,*)
          ISTOKES=0
        ENDIF

        IF (IRFILSP0.NE.0.AND.IBRILL.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** WARNING IN GFINIT ***'
          WRITE(LUNGFO,*)
     &      'FLAGS IRFILSP0 AND IBRILL ARE INCOMPATIBLE'
          WRITE(LUNGFO,*)'IBRILL SET TO ZERO'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** WARNING IN GFINIT ***'
          WRITE(6,*)
     &      'FLAGS IRFILSP0 AND IBRILL ARE INCOMPATIBLE'
          WRITE(6,*)'IBRILL SET TO ZERO'
          WRITE(6,*)
          IBRILL=0
        ENDIF

        IF (IRFILSP0.NE.0.AND.ISTOKES.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** WARNING IN GFINIT ***'
          WRITE(LUNGFO,*)
     &      'FLAGS IRFILSP0 AND ISTOKES ARE INCOMPATIBLE'
          WRITE(LUNGFO,*)'ISTOKES SET TO ZERO'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** WARNING IN GFINIT ***'
          WRITE(6,*)
     &      'FLAGS IRFILSP0 AND ISTOKES ARE INCOMPATIBLE'
          WRITE(6,*)'ISTOKES SET TO ZERO'
          WRITE(6,*)
          ISTOKES=0
        ENDIF

        IF (IDESYNC.NE.0.AND.IPIN.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** WARNING IN GFINIT ***'
          WRITE(LUNGFO,*)
     &      'FLAGS IDESYNC AND IPIN ARE INCOMPATIBLE'
          WRITE(LUNGFO,*)'IPIN SET TO ZERO'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** WARNING IN GFINIT ***'
          WRITE(6,*)
     &      'FLAGS IDESYNC AND IPIN ARE INCOMPATIBLE'
          WRITE(6,*)'IPIN SET TO ZERO'
          WRITE(6,*)
          IPIN=0
        ENDIF

        IF (IPHASE.NE.0.AND.(IPIN.EQ.0.OR.IPIN.EQ.2)) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)'FLAGS IPHASE AND IPIN ARE INCOMPATIBLE'
          WRITE(6,*)
          WRITE(6,*)'*** ERROR IN GFINIT ***'
          WRITE(6,*)'FLAGS IPHASE AND IPIN ARE INCOMPATIBLE'
          STOP '*** PROGRAM WAVE ABORTED ***'
        ENDIF


      ENDIF !ISPEC

      IF (IF1DIM.EQ.1.AND.IRPHI.NE.0.AND.IPINCIRC.NE.0) THEN
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)
     &    '*** WARNING IN GFINIT: IF1DIM.EQ.1.AND.IRPHI.NE.0.AND.IPINCIRC.NE.0'
        WRITE(LUNGFO,*)'IRPHI SET TO ZERO'
        WRITE(LUNGFO,*)
        WRITE(6,*)
        WRITE(6,*)
     &    '*** WARNING IN GFINIT: IF1DIM.EQ.1.AND.IRPHI.NE.0.AND.IPINCIRC.NE.0'
        WRITE(6,*)'IRPHI SET TO ZERO'
        WRITE(6,*)
        IRPHI=0
      ENDIF

      IF (IPIN.EQ.0.AND.IPINCIRC.NE.0) THEN
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)'WARNING IN GFINIT: IPIN.EQ.0.AND.IPINCIRC.NE.0'
        WRITE(LUNGFO,*)'IPINCIRC SET TO ZERO'
        WRITE(LUNGFO,*)
        WRITE(6,*)
        WRITE(6,*)'WARNING IN GFINIT: IPIN.EQ.0.AND.IPINCIRC.NE.0'
        WRITE(6,*)'IPINCIRC SET TO ZERO'
        WRITE(6,*)
        IPINCIRC=0
      ENDIF

      if (ivelofield.eq.2) then
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)
     &    '*** IVELOFIELD=2 is obsolete and not supported anymore ***'
        WRITE(LUNGFO,*)'*** PROGRAM WAVE ABORTED'
        WRITE(6,*)
        WRITE(6,*)
     &    '*** IVELOFIELD=2 is obsolete and not supported anymore ***'
        WRITE(6,*)'*** PROGRAM WAVE ABORTED'
        stop
      endif

      IF (iphfold.ne.0.and.(phbeth.eq.-9999.0d0 .or. phbetav.eq.-9999.0d0)) THEN
        iemit=1
      ENDIF

C--- WRITE CONTROL FLAGS

      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     MODE FLAGS:'
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     IUNDULATOR,IWIGGLER: ',IUNDULATOR,IWIGGLER
      WRITE(LUNGFO,*)

      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     CONTROL FLAGS:'
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)

      WRITE(LUNGFO,*)'     IUNAME,IUSTEP,IUOUT: ',IUNAME,IUSTEP,IUOUT
      WRITE(LUNGFO,*)'     IOPTIC,IGENFUN:      ',IOPTIC,IGENFUN
      WRITE(LUNGFO,*)'     IMAGSPLN:            ',IMAGSPLN
      IF (IOPTIC.NE.0.) THEN
       WRITE(LUNGFO,*)'        IPHASPAC, IHPHSPAC:         ',IPHASPAC,IHPHSPAC
      ENDIF
      IF (IOPTIC.NE.0.OR.IGENFUN.NE.0) THEN
         WRITE(LUNGFO,*)'        IERZANA,IERZFUN,I2DIM:     ',
     &                             IERZANA,IERZFUN,I2DIM
      ENDIF
      WRITE(LUNGFO,*)'     IEMIT,IEMIAHW:       ',IEMIT,IEMIAHW
      WRITE(LUNGFO,*)'     IWLSOPT,IBEAMPOL:    ',IWLSOPT,IBEAMPOL
      IF (IWLSOPT.NE.0) THEN
         WRITE(LUNGFO,*)'        IEMICRIT:                  ',IEMICRIT
      ENDIF
      WRITE(LUNGFO,*)'     IENELOSS, IEFIELD:   ',IENELOSS,IEFIELD
      WRITE(LUNGFO,*)'     IPOWER,ISPEC:        ',IPOWER,ISPEC
      WRITE(LUNGFO,*)'     IVELOFIELD,ISPECMODE:',IVELOFIELD,ISPECMODE

      IF (JWFILINT.LE.0) JWFILINT=-jwfilint

      IF (ISPEC.NE.0) THEN
        if (mthreads.ne.0.and.mthreads.ne.1.and.iwfilint.ne.0) then
          print*,"*** Warning in gfinit: MTHREADS set to zero, since IWFILINT is set ***"
          mthreads=0
        endif
        WRITE(LUNGFO,*)'        IWFILL0,IRFILL0:           ',IWFILL0,IRFILL0
        WRITE(LUNGFO,*)'        ISPECINT,IPIN:             ',ISPECINT,IPIN
        WRITE(LUNGFO,*)'        ISTOKES,IBRILL:            ',ISTOKES,IBRILL
        WRITE(LUNGFO,*)'        IPINCIRC,IRPHI:            ',IPINCIRC,IRPHI
        WRITE(LUNGFO,*)'        IFOLD,ISIGUSR:             ',IFOLD,ISIGUSR
        WRITE(LUNGFO,*)'        IF1DIM,IPOLA:              ',IF1DIM,IPOLA
        WRITE(LUNGFO,*)'        IWFILSP0,IWFILSPF:         ',IWFILSP0,IWFILSPF
        WRITE(LUNGFO,*)'        IRFILSP0,IRFILSTO:         ',IRFILSP0,IRFILSTO
        WRITE(LUNGFO,*)'        IWFILSTO,IWFLSTOF:         ',IWFILSTO,IWFLSTOF
        WRITE(LUNGFO,*)'        ISPECANA,ISPECANAF:        ',ISPECANA,ISPECANAF
        WRITE(LUNGFO,*)'        IAMPLI,IAMPSKIP:           ',IAMPLI,IAMPSKIP
        WRITE(LUNGFO,*)'        IWFILFL0,IWFILFLF:         ',IWFILFL0,IWFILFLF
        WRITE(LUNGFO,*)'        IWFILS,IWFILSF:            ',IWFILS,IWFILSF
        WRITE(LUNGFO,*)'        IWFILSE,IWFILSEF:          ',IWFILSE,IWFILSEF
        WRITE(LUNGFO,*)'        IWFILB,IWFILBF:            ',IWFILB,IWFILBF
        WRITE(LUNGFO,*)'        IWFILBE,IWFILBEF:          ',IWFILBE,IWFILBEF
        WRITE(LUNGFO,*)'        IWFILINT,IPINALL:          ',IWFILINT,IPINALL
        WRITE(LUNGFO,*)'        IRFILOB,IFILTER:           ',IRFILOB,IFILTER
        WRITE(LUNGFO,*)'        IWFILRAY,IDESYNC:          ',IWFILRAY,IDESYNC
        WRITE(LUNGFO,*)'        IPHASE,IPHASEANA:          ',IPHASE,IPHASEANA
        WRITE(LUNGFO,*)'        IDOSE,IEFOLD:              ',IDOSE,IEFOLD
        WRITE(LUNGFO,*)'        ISPECDIP,IBL0CUT:          ',ISPECDIP,IBL0CUT
        WRITE(LUNGFO,*)'        IEFFI,IFILMUL:             ',IEFFI,IFILMUL
        WRITE(LUNGFO,*)'        IBUNCH, IUBUNCH, NBUNCH:   ',IBUNCH,IUBUNCH,NBUNCH
      ENDIF !ISPEC

      WRITE(LUNGFO,*)'     IWFILF:              ',IWFILF


      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     MAGNETIC FIELD FLAGS:'
      WRITE(LUNGFO,*)
      IF (ICHARGE.GT.0) THEN
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)'ATTENTION: TRACKING POSITRONS ***'
        WRITE(LUNGFO,*)
        WRITE(6,*)
        WRITE(6,*)'ATTENTION: TRACKING POSITRONS ***'
        WRITE(6,*)
        ICHARGE=1
      ELSE IF (ICHARGE.LT.0) THEN
        ICHARGE=-1
      ELSE
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)'*** Error in GFINIT: ICHARGE IS ZERO, check wave.in'
        WRITE(LUNGFO,*)
        WRITE(6,*)
        WRITE(6,*)'*** Error in GFINIT: ICHARGE IS ZERO, check wave.in'
        WRITE(6,*)
        STOP '*** Program WAVE aborted ***'
      ENDIF !ICHARGE

      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     ICHARGE,IBMASK,JBMASK:',ICHARGE,IBMASK,JBMASK
      WRITE(LUNGFO,*)'     IBSUPER,IBERROR:      ',IBSUPER,IBERROR
      WRITE(LUNGFO,*)'     ICUTFIBO:             ',ICUTFIBO
      WRITE(LUNGFO,*)

      WRITE(LUNGFO,*)'     IPERIODG,IBSYM:      ',IPERIODG,IBSYM
      WRITE(LUNGFO,*)'     IBSYMY,IBSYMZ:       ',IBSYMY,IBSYMZ
      WRITE(LUNGFO,*)'     KBEXTERN,KBFELD:     ',KBEXTERN,KBFELD
      WRITE(LUNGFO,*)'     KHALBA,KHALBASY:     ',KHALBA,KHALBASY
      WRITE(LUNGFO,*)'     KUCROSS,IRFILP:      ',KUCROSS,IRFILP
      WRITE(LUNGFO,*)'     KMAGSEQ,IMGSQF:      ',KMAGSEQ,IMGSQF
      WRITE(LUNGFO,*)'            KMAGCOR:      ',KMAGCOR
      WRITE(LUNGFO,*)'     IRFILF,KELLIP:       ',IRFILF,KELLIP
      WRITE(LUNGFO,*)'     IRBTAB,IRBTABZY:     ',IRBTAB,IRBTABZY
      WRITE(LUNGFO,*)'     IFOURBTABZY:         ',IFOURBTABZY
      WRITE(LUNGFO,*)'     IRFILT0,IRBTABXYZ:   ',IRFILT0,IRBTABXYZ
      WRITE(LUNGFO,*)'     KBPOLYH,KBPOLY3D:    ',KBPOLYH,KBPOLY3D
      WRITE(LUNGFO,*)'     KBREC,KELLANA:       ',KBREC,KELLANA
      if (kbrec.gt.0) then
        WRITE(LUNGFO,*)'          IRECU:          ',IRECU
        WRITE(LUNGFO,*)'          IRECMODU:       ',IRECMODU
      endif
      WRITE(LUNGFO,*)'     KUNDUGAP,KBUNDUMAG:  ',kundugap,kbundumag
      WRITE(LUNGFO,*)'     KBPOLYMAG,KBGENESIS: ',KBPOLYMAG,KBGENESIS
      WRITE(LUNGFO,*)'     KBAMWLS,IRFILB0:     ',KBAMWLS,IRFILB0
      WRITE(LUNGFO,*)'     ICLUSTER:            ',ICLUSTER
      WRITE(LUNGFO,*)

      if (iundulator.ne.2.and.ibunch.ne.0.and.mthreads.ne.0.and.icluster.eq.0) then
        write(6,*)""
        write(6,*)"*** Warning in gfinit: IBUNCH and MTHREAD not zero ***"
        write(6,*)"*** This is not yet implemented, be careful, better set MTHREADS=0 ***"
        write(6,*)"*** Or consider IUNDULATOR=2 ***"
        write(6,*)""
      endif

      if (ipin.ne.3.and.ipin.ne.0) then
        call omp_ini(lungfo,mthreads,1)
      else
        mthreads=0
        iomp=0
      endif

      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     HISTOGRAM FLAGS:'
      WRITE(LUNGFO,*)

      IF (NINTFREQ.GT.99.AND.IHPIN.GT.0.and.IFREQ2P.gt.1.and.ispec.ne.0) THEN
      IHPIN=0
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
     &'*** WARNING IN GFINIT: MORE THAN 99 PHOTONENERGIES CONSIDERED'
      WRITE(LUNGFO,*)
     &'HISTOGRAMS FOR FOLDING FUNCTION AND FLUX DISTRIBUTION CANCELED'
      WRITE(LUNGFO,*)
      WRITE(6,*)
      WRITE(6,*)
     &'*** WARNING IN GFINIT: MORE THAN 99 PHOTONENERGIES CONSIDERED'
      WRITE(6,*)
     &'HISTOGRAMS FOR FOLDING FUNCTION AND FLUX DISTRIBUTION CANCELED'
      WRITE(6,*)
      ENDIF

      IF (IEMIT.EQ.0) IHBETA=0
      IF (IPIN.EQ.0)  IHPIN=0
      IF (IPIN.EQ.0)  IHFOLD=0
      IF (IFOLD.EQ.0)  IHFOLD=0
      IF (ISPEC.EQ.0) then
        IHFREQ=0
        ihpin=0
      endif

      if (ihpin.ne.0.and.ihfreq.eq.0) then
        write(6,*)'*** Warning in GFINIT: IHPIN.NE.0 but IHFREQ.EQ.0 ***'
        write(6,*)'*** IHFREQ SET TO ONE ***'
        write(LUNGFO,*)'*** Warning in GFINIT: IHPIN.NE.0 but IHFREQ.EQ.0 ***'
        write(LUNGFO,*)'*** IHFREQ SET TO ONE ***'
        ihfreq=1
      endif

      if (ntupgrid.ne.0.and.mhbookp.ne.0) then
        write(6,*)'*** WARNING: NTUPGRID is set zero, since it is obsolete for this version of WAVE!'
        ntupgrid=0
      endif

      ihtrack=-abs(ihtrack) ! Block old fashioned histograms
      ihtrackm=-abs(ihtrackm) ! Block old fashioned histograms

      IF (IHFIL.NE.0.OR.IHPIN.NE.0.OR.IHTRACK.NE.0.OR.IHBETA.NE.0
     &  .OR.IHTRACKM.NE.0.OR. IHFREQ.NE.0.OR.IPOWER.NE.0
     &  .OR.IHPHSPAC.NE.0.OR.IHINPUT.NE.0
     &  .OR.IHBPOLY3D.NE.0.OR.IHBPOLY2DH.NE.0.OR.IHBPHARM.NE.0
     &  .OR.IHSEL.NE.0.OR.IHFOLD.NE.0.OR.NTUPGRID.NE.0.OR.KBGENESIS.GT.0
     &  .or.ihbunch.ne.0.or.(ieneloss.lt.0.and.ihphotons.ne.0)
     &  )IHBOOK=1

      if (ihbook.eq.0) ihindex=0

      WRITE(LUNGFO,*)'     IHBOOK,IHINDEX:      ',IHBOOK,IHINDEX

      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     OTHER OPTIONS:'
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)

      WRITE(LUNGFO,*)'     IWBTAB,IWFILT0:      ',IWBTAB,IWFILT0
      WRITE(LUNGFO,*)'     IWSECTMAGS:          ',IWSECTMAGS
      WRITE(LUNGFO,*)'     IJUST,ISNORDER:      ',IJUST,ISNORDER
      WRITE(LUNGFO,*)'     IWBMAP,IWBPOLY3D:    ',IWBMAP,IWBPOLY3D
      WRITE(LUNGFO,*)'     IWBPOLY2DH,IWBPHARM: ',IWBPOLY2DH,IWBPHARM
      WRITE(LUNGFO,*)

      if (irfilt0.ne.0) call trajectory_to_bfield_ini

C--- MERGE FILE WITH ABSORPTION COEFFICIENTS AND EXIT

      IF (ISPEC.NE.0.AND.IFILTER.LT.0) THEN
          CALL ABSCOEF_MERGE
      ENDIF

C--- SOME USEFUL CONSTANTS AND VARIABLES

c11.10.2017      DTIM=1.0D0/(CLIGHT1*MYINUM)   !TIME INTERVALLS FOR TRACKING
      DTIM=1.0D0/(CLIGHT1*dmybetap*MYINUM)   !TIME INTERVALLS FOR TRACKING
      BSHIFT=0.5D0          !DONT WORRY

      DS0=CLIGHT1*DTIM
      GAMMA=DMYGAMMA
      ENERGV=GAMMA*EMASSE1
      GMOM=EMASSG1*DSQRT((GAMMA-1.0d0)*(GAMMA+1.0d0))
      EMOM=EMASSE1*DSQRT((GAMMA-1.0d0)*(GAMMA+1.0d0))
      DBRHO=ICHARGE*EMOM/CLIGHT1
      BETA=DSQRT((1.0D0-1.0D0/GAMMA)*(1.0D0+1.0D0/GAMMA))
      DMYBETA=BETA
      V0=CLIGHT1*BETA
      TAUPOL01G=POL2CON1*UMFANG*RDIPOL**2/1.**5

      ecdipev1=3.0d0/2.0d0*hbarev1*(clight1/emasse1)**2/emasse1*1.0d18

      gamma1=1.0d0/emassg1
      emom1=emasse1*dsqrt((gamma1-1.0d0)*(gamma1+1.0d0))
      rho1=emom1/clight1
      omegac=1.5d0*gamma1**3*clight1/rho1
c      ecdipev=omegac*hbar1/echarge1
c      ecdipkev=ecdipev/1000.0d0

      CROTD=DCOSD(XROTD)
      SROTD=DSIND(XROTD)

C--- NORMALIZATION OF SPECTRUM
C    THE INTEGRATION (SR SPECTRUM) YIELDS THE PHOTON POWER PER ENERGY INTERVAL
C    dE AND SURFACE ELEMENT dA. THIS RESULT IS MULITPLIED BY THE NUMBER OF
C    ELECTRONS (DMYCUR/ECHARGE1),
C    A CONSTANT (ECHARGE1**2/(16*PI**3*EPS01*CLIGHT),
C    dE/E AND THE RELATIVE BANDWIDTH (USUALLY 1/1000). THE FINAL RESULT IS
C    OBTAINED BY A DIVISION THROUGH THE PHOTON ENERGY HBAR*OMEGA, WHICH GIVES
C    NOW THE PHOTON RATE PER BANDWIDTH AND SURFACE ELEMENT IN SI-UNITS

C     SPECNOR=    !DONT USE IT!!!
C     &          ECHARGE1**2/(4.D0*PI1**2*CLIGHT1)
C     &          /(4.D0*PI1*EPS01)
C     &          *DMYCUR/ECHARGE1
C     &          *BANWID
C     &          /(HBAREV1*ECHARGE1)

      SPECNOR=
     &          BANWID
     &          /(4.0D0*PI1**2*CLIGHT1*HBAREV1)
     &          /(4.0D0*PI1*EPS01)
     &          *DMYCUR

      POWNOR=ECHARGE1/16.0D0/PI1/PI1/EPS01/CLIGHT1*DMYCUR

C- NORMALIZE POLARIZATION VECTOR

      IF (IPOLA.NE.0) THEN


          VPOLAN=CDSQRT(
     &             VPOLA(1)*CONJG(VPOLA(1))
     &            +VPOLA(2)*CONJG(VPOLA(2))
     &            +VPOLA(3)* CONJG(VPOLA(3)))

          IF (VPOLAN.EQ.0.0) THEN
         WRITE(LUNGFO,*)
         WRITE(LUNGFO,*)'     *** ERROR IN GFINIT ***'
         WRITE(LUNGFO,*)'     POLARIZATION PLANE NOT DEFINED'
         WRITE(LUNGFO,*)'     CHECK VECTOR VPOLA IN NAMELIST SPECTN'
         WRITE(LUNGFO,*)
         WRITE(6,*)
         WRITE(6,*)'     *** ERROR IN GFINIT ***'
         WRITE(6,*)'     POLARIZATION PLANE NOT DEFINED'
         WRITE(6,*)'     CHECK VECTOR VPOLA IN NAMELIST SPECTN'
         WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
          ENDIF !VPOLAN
          DO ICOMP=1,3
         VPOLA(ICOMP)=VPOLA(ICOMP)/VPOLAN
          ENDDO   !ICOMP
      ENDIF !IPOLA


        VSTOKES(1,1)=( 0.0d0,        0.0d0)      !HORIZONTAL POLARIZATION
        VSTOKES(1,2)=( 0.0d0,        0.0d0)
c        VSTOKES(1,3)=(-1.0d0,        0.0d0) !7mar05
        VSTOKES(1,3)=(-1.0d0,       -1.0d0) !Definition siehe
                                       !scienceworld.wolfram.com
                                       !liefert aber nur Phasenfaktor
                                       !im Vergleich zur alten Fassung

        VSTOKES(2,1)=( 0.0d0,        0.0d0)      !RIGHT HANDED POLARIZATION
        VSTOKES(2,2)=( 0.0d0,       -1.0d0)
        VSTOKES(2,3)=(+1.0d0,        0.0d0)

        VSTOKES(3,1)=( 0.0d0,        0.0d0)      !LEFT HANDED POLARIZATION
        VSTOKES(3,2)=( 0.0d0,       -1.0d0)
        VSTOKES(3,3)=(-1.0d0,        0.0d0)

        VSTOKES(4,1)=( 0.0d0,        0.0d0)      !45 DEGREE LINEAR POLARIZATION
        VSTOKES(4,2)=( 1.0d0,        0.0d0)
        VSTOKES(4,3)=(-1.0d0,        0.0d0)

         DO ISTO=1,4
             VSTO=DSQRT
     &            (CDABS(VSTOKES(ISTO,1))**2
     &            +CDABS(VSTOKES(ISTO,2))**2
     &            +CDABS(VSTOKES(ISTO,3))**2)
             VSTOKES(ISTO,1)=VSTOKES(ISTO,1)/VSTO
             VSTOKES(ISTO,2)=VSTOKES(ISTO,2)/VSTO
             VSTOKES(ISTO,3)=VSTOKES(ISTO,3)/VSTO

         ENDDO

C--- RETURN IF WLSOPT IS SELECTED

c      IF(IDISPER.EQ.0.AND.IWLSOPT.NE.0) RETURN !NUR OPTIMALEN AHW SUCHEN

C--- ADJUST SOMETHING

      IF(IJUST.NE.0) THEN
         XJUST=HSHIFT   !XJUST is adjusted by bringing YJUST to zero
         YJUST=ZF0
         CALL WLSJUST(XJUST,YJUST)
         HSHIFT=XJUST
      ENDIF

C--- CHECK CONTROL FLAGS (HBOOK FLAGS ALREADY CHECKED)

c24.3.94{ wegen efold und anderer unsicherheiten, da evtl irgendwo statements
c         wie dfreq=freq(2)-freq(1) auftauchen}

      IF (IUNIT.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)'OPTION iunit DISABLED, DO NOT USE!'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** ERROR IN GFINIT ***'
          WRITE(6,*)'OPTION iunit DISABLED, DO NOT USE!'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

c24.3.94}

      IF (IWBPOLY3D.NE.0.AND.KBPOLY3D.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)'FLAGS IWBPOLY3D AND KBPOLY3D ARE BOTH SET'
          WRITE(LUNGFO,*)'ONLY ONE IS ALLOWED'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** ERROR IN GFINIT ***'
          WRITE(6,*)'FLAGS IWBPOLY3D AND KBPOLY3D ARE BOTH SET'
          WRITE(6,*)'ONLY ONE IS ALLOWED'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (IWBPOLY3D.NE.0.AND.IWBPOLY2DH.NE.0.AND.IWBPHARM.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)
     &'MORE THAN ONE FLAG OF IWBPOLY3D,IWBPOLY2DH,IWBPHARM ARE SET'
          WRITE(LUNGFO,*)'ONLY ONE IS ALLOWED'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** ERROR IN GFINIT ***'
          WRITE(6,*)
     &'MORE THAN ONE FLAG OF IWBPOLY3D,IWBPOLY2DH,IWBPHARM ARE SET'
          WRITE(6,*)'ONLY ONE IS ALLOWED'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (IWBPOLY3D.NE.0.AND.IWBMAP.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)'FLAGS IWBPOLY3D AND IWBMAP ARE BOTH SET'
          WRITE(LUNGFO,*)'ONLY ONE IS ALLOWED'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** ERROR IN GFINIT ***'
          WRITE(6,*)'FLAGS IWBPOLY3D AND IWBMAP ARE BOTH SET'
          WRITE(6,*)'ONLY ONE IS ALLOWED'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (IWBPOLY2DH.NE.0.AND.KBPOLY2DH.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)'FLAGS IWBPOLY2DH AND KBPOLY2DH ARE BOTH SET'
          WRITE(LUNGFO,*)'ONLY ONE IS ALLOWED'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** ERROR IN GFINIT ***'
          WRITE(6,*)'FLAGS IWBPOLY2DH AND KBPOLY2DH ARE BOTH SET'
          WRITE(6,*)'ONLY ONE IS ALLOWED'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (IWBPHARM.NE.0.AND.KBPHARM.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)'FLAGS IWBPHARM AND KBPHARM ARE BOTH SET'
          WRITE(LUNGFO,*)'ONLY ONE IS ALLOWED'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** ERROR IN GFINIT ***'
          WRITE(6,*)'FLAGS IWBPHARM AND KBPHARM ARE BOTH SET'
          WRITE(6,*)'ONLY ONE IS ALLOWED'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (IWBPOLY2DH.NE.0.AND.IWBMAP.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)'FLAGS IWBPOLY2DH AND IWBMAP ARE BOTH SET'
          WRITE(LUNGFO,*)'ONLY ONE IS ALLOWED'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** ERROR IN GFINIT ***'
          WRITE(6,*)'FLAGS IWBPOLY2DH AND IWBMAP ARE BOTH SET'
          WRITE(6,*)'ONLY ONE IS ALLOWED'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (IWBPHARM.NE.0.AND.IWBMAP.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)'FLAGS IWBPHARM AND IWBMAP ARE BOTH SET'
          WRITE(LUNGFO,*)'ONLY ONE IS ALLOWED'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** ERROR IN GFINIT ***'
          WRITE(6,*)'FLAGS IWBPHARM AND IWBMAP ARE BOTH SET'
          WRITE(6,*)'ONLY ONE IS ALLOWED'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (ISPEC.NE.0.AND.IEFOLD.NE.0.AND.ISTOKES.EQ.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)'FLAG IEFOLD IS SET BUT ISTOKES IS NOT'
          WRITE(LUNGFO,*)'SET ALSO FLAG ISTOKES IN INPUT FILE'
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** ERROR IN GFINIT ***'
          WRITE(6,*)'FLAG IEFOLD IS SET BUT ISTOKES IS NOT'
          WRITE(6,*)'SET ALSO FLAG ISTOKES IN INPUT FILE'
          WRITE(6,*)
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (ISPEC.NE.0.AND.IDOSE.NE.0.AND.ISPECINT.EQ.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)'FLAG IDOSE IS SET BUT ISPECINT IS NOT'
          WRITE(LUNGFO,*)'SET FLAG ISPECINT IN INPUT FILE'
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)
          WRITE(6,*)'*** ERROR IN GFINIT ***'
          WRITE(6,*)'FLAG IDOSE IS SET BUT ISPECINT IS NOT'
          WRITE(6,*)'SET FLAG ISPECINT IN INPUT FILE'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF
      IF (IWFILSP0.NE.0.AND.IRFILSP0.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)
     &      'FLAGS IWFILSP0 AND IRFILSP0 ARE INCOMPATIBLE'
          WRITE(LUNGFO,*)'SET ONLY ONE'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** ERROR IN GFINIT ***'
          WRITE(6,*)
     &      'FLAGS IWFILSP0 AND IRFILSP0 ARE INCOMPATIBLE'
          WRITE(6,*)'SET ONLY ONE'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (IWFILSTO.NE.0.AND.IRFILSTO.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)
     &      'FLAGS IWFILSTO AND IRFILSTO ARE INCOMPATIBLE'
          WRITE(LUNGFO,*)'SET ONLY ONE'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** ERROR IN GFINIT ***'
          WRITE(6,*)
     &      'FLAGS IWFILSTO AND IRFILSTO ARE INCOMPATIBLE'
          WRITE(6,*)'SET ONLY ONE'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (ISPECANA.NE.0.AND.IDESYNC.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)
     &      'FLAGS ISPECANA AND IDESYNC ARE INCOMPATIBLE'
          WRITE(LUNGFO,*)'SET ONLY ONE'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** ERROR IN GFINIT ***'
          WRITE(6,*)
     &      'FLAGS ISPECANA AND IDESYNC ARE INCOMPATIBLE'
          WRITE(6,*)'SET ONLY ONE'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (ISPECANA.NE.0.AND.ISPECDIP.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)
     &      'FLAGS ISPECANA AND ISPECDIP ARE INCOMPATIBLE'
          WRITE(LUNGFO,*)'SET ONLY ONE'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** ERROR IN GFINIT ***'
          WRITE(6,*)
     &      'FLAGS ISPECANA AND ISPECDIP ARE INCOMPATIBLE'
          WRITE(6,*)'SET ONLY ONE'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (ISPECDIP.NE.0.AND.IDESYNC.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)
     &      'FLAGS ISPECDIP AND IDESYNC ARE INCOMPATIBLE'
          WRITE(LUNGFO,*)'SET ONLY ONE'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** ERROR IN GFINIT ***'
          WRITE(6,*)
     &      'FLAGS ISPECDIP AND IDESYNC ARE INCOMPATIBLE'
          WRITE(6,*)'SET ONLY ONE'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (ISPECANA.NE.0.AND.IRFILSP0.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)
     &      'FLAGS ISPECANA AND IRFILSP0 ARE INCOMPATIBLE'
          WRITE(LUNGFO,*)'SET ONLY ONE'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** ERROR IN GFINIT ***'
          WRITE(6,*)
     &      'FLAGS ISPECANA AND IRFILSP0 ARE INCOMPATIBLE'
          WRITE(6,*)'SET ONLY ONE'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (ISPECDIP.NE.0.AND.IRFILSP0.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)
     &      'FLAGS ISPECDIP AND IRFILSP0 ARE INCOMPATIBLE'
          WRITE(LUNGFO,*)'SET ONLY ONE'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** ERROR IN GFINIT ***'
          WRITE(6,*)
     &      'FLAGS ISPECDIP AND IRFILSP0 ARE INCOMPATIBLE'
          WRITE(6,*)'SET ONLY ONE'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (ISPECANA.NE.0.AND.IRFILSTO.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)
     &      'FLAGS ISPECANA AND IRFILSTO ARE INCOMPATIBLE'
          WRITE(LUNGFO,*)'SET ONLY ONE'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** ERROR IN GFINIT ***'
          WRITE(6,*)
     &      'FLAGS ISPECANA AND IRFILSTO ARE INCOMPATIBLE'
          WRITE(6,*)'SET ONLY ONE'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (IUSEM.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)'IUSEM IS NOT SUPPORTED ANYMORE!'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** ERROR IN GFINIT ***'
          WRITE(6,*)'IUSEM IS NOT SUPPORTED ANYMORE!'
          WRITE(6,*)
          stop "*** WAVE aborted ***"
      ENDIF

      IF (IUSEM.NE.0 .AND. IF1DIM.EQ.1) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)
     &      'FLAGS IF1DIM AND IUSEM ARE INCOMPATIBLE'
          WRITE(LUNGFO,*)'SET ONLY ONE'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'*** ERROR IN GFINIT ***'
          WRITE(6,*)
     &      'FLAGS IF1DIM AND IUSEM ARE INCOMPATIBLE'
          WRITE(6,*)'SET ONLY ONE'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

C     IF (IPINCIRC.NE.0 .AND. IUSEM.EQ.0) THEN
C         WRITE(LUNGFO,*)
C         WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
C         WRITE(LUNGFO,*)
C     &      'FLAG IPINCIRC IS SET BUT FLAG IUSEM IS NOT'
C         WRITE(LUNGFO,*)
C     &      'SET BOTH FLAGS TO CALCULATE FLUX THROUGH CIRCULAR PINHOLE'
C         WRITE(LUNGFO,*)
C         WRITE(6,*)
C         WRITE(6,*)'*** ERROR IN GFINIT ***'
C         WRITE(6,*)
C     &      'FLAG IPINCIRC IS SET BUT FLAG IUSEM IS NOT'
C         WRITE(6,*)
C     &      'SET BOTH FLAGS TO CALCULATE FLUX THROUGH CIRCULAR PINHOLE'
C         WRITE(6,*)
C         STOP
C     ENDIF

C     IF (ISTOKES.NE.0.AND.IPIN.NE.0  .AND. IUSEM.EQ.0) THEN
C         WRITE(LUNGFO,*)
C         WRITE(LUNGFO,*)'*** ERROR IN GFINIT ***'
C         WRITE(LUNGFO,*)
C     &      'FLAG ISTOKES AND IPIN ARE SET BUT FLAG IUSEM IS NOT'
C         WRITE(LUNGFO,*)
C     &      'SET ALL THESE FLAGS TO CALCULATE STOKES VECTORS FOR PINHOLE'
C         WRITE(LUNGFO,*)
C         WRITE(6,*)
C         WRITE(6,*)'*** ERROR IN GFINIT ***'
C         WRITE(6,*)
C     &      'FLAG ISTOKES AND IPIN ARE SET BUT FLAG IUSEM IS NOT'
C         WRITE(6,*)
C     &      'SET ALL THESE FLAGS TO CALCULATE STOKES VECTORS FOR PINHOLE'
C         WRITE(6,*)
C         STOP
C     ENDIF

      IF (IEMIAHW.NE.0.AND.DDISP0.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'     *** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)'     FLAG IEMIAHW INCOMPATIBLE WITH DDISP0.NE.0)'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'     *** ERROR IN GFINIT ***'
          WRITE(6,*)'     FLAG IEMIAHW INCOMPATIBLE WITH DDISP0.NE.0)'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (IEMIAHW.NE.0.AND.KHALBASY.EQ.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'     *** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)'     FLAG IEMIAHW SET BUT KHALBASY=0'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'     *** ERROR IN GFINIT ***'
          WRITE(6,*)'     FLAG IEMIAHW SET BUT KHALBASY=0'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (IFOLD.NE.0.AND.IPIN.LT.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'     *** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)
     &'     FLAG IFOLD SET. FLAG IPIN MUST BE GREATER OR EQUAL ZERO'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*) '     *** ERROR IN GFINIT ***'
          WRITE(6,*)
     &'     FLAG IFOLD SET. FLAG IPIN MUST BE GREATER OR EQUAL ZERO'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (ispec.ne.0.and.IFOLD.NE.0.AND.ISIGUSR.EQ.0.AND.IEMIT.EQ.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'     *** ERROR IN GFINIT ***'
          WRITE(LUNGFO,*)
     &       '     FLAG ISIGUSR NOT SET. THIS REQUIRES FLAG IEMIT TO BE SET'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*) '     *** ERROR IN GFINIT ***'
          WRITE(6,*)
     &       '     FLAG ISIGUSR NOT SET. THIS REQUIRES FLAG IEMIT TO BE SET'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF(NDWSOU.LT.NDARGU) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'     *** ERROR IN IN GFINIT ***'
          WRITE(LUNGFO,*)'     PARAMETER NDWSOUP.LT.NDWARGUP'
          WRITE(LUNGFO,*)'     LOOK AT FILE CMPARA.CMN'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'     *** ERROR IN IN GFINIT ***'
          WRITE(6,*)'     PARAMETER NDWSOUP.LT.NDWARGUP'
          WRITE(6,*)'     LOOK AT FILE CMPARA.CMN'
          WRITE(6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

C- B-FIELD

      IF (IWSECTMAGS.LT.0) THEN
        JWSECTMAGS=1
      ELSE
        JWSECTMAGS=0
      ENDIF

      KSUM=
     &      KBEXTERN**2
     &      +KBAMWLS**2
     &      +KHALBA**2
     &      +KBFELD**2
     &      +ibmasksp**2
     &      +KHALBASY**2
     &      +KUNDUGAP**2
     &      +IRFILF**2
     &      +IRBTAB**2
     &      +IFOURBTABZY**2
     &      +IRBTABZY**2
     &      +IRBTABXYZ**2
     &      +KUCROSS**2
     &      +KELLIP**2
     &      +KELLANA**2
     &      +KBREC**2
     &      +KBGENESIS**2
     &      +IRFILP**2
     &      +KMAGSEQ**2
     &      +IBHELM**2
     &      +KBPOLYH**2
     &      +KBPOLY3D**2
     &      +KBPOLY2DH**2
     &      +KBPHARM**2
     &      +IRFILB0**2
     &      +IRFILB**2
     &      +JWSECTMAGS

      IF (kbundumag.ne.0) KSUM=KSUM+1
      IF (KBPOLYMAG.GT.0) KSUM=KSUM+1

      IF (KSUM.LT.1) THEN
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)'     *** Warning in GFINIT ***'
        WRITE(LUNGFO,*)'     No magnetic field specified'
        WRITE(LUNGFO,*)
        WRITE(6,*)
        WRITE(6,*)
        WRITE(6,*)'     *** Warning in GFINIT ***'
        WRITE(6,*)'     No magnetic field specified'
        WRITE(6,*)
c        STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      IF (IBSUPER.EQ.0) THEN

      IAMBI=0

      IF (KBEXTERN .NE.0) IAMBI=IAMBI+1
      IF (KBAMWLS .NE.0) IAMBI=IAMBI+1
      IF (KHALBA  .NE.0) IAMBI=IAMBI+1
      IF (KBFELD  .NE.0) IAMBI=IAMBI+1
      IF (KHALBASY.NE.0) IAMBI=IAMBI+1
      IF (KUNDUGAP.NE.0) IAMBI=IAMBI+1
      IF (IRFILF  .NE.0) IAMBI=IAMBI+1
      IF (IRFILB .NE.0) IAMBI=IAMBI+1
      IF (IRBTAB  .NE.0) IAMBI=IAMBI+1
      IF (IFOURBTABZY.NE.0) IAMBI=IAMBI+1
      IF (IRBTABZY.NE.0) IAMBI=IAMBI+1
      IF (IRBTABXYZ.NE.0) IAMBI=IAMBI+1
      IF (KUCROSS .NE.0) IAMBI=IAMBI+1
      IF (KELLIP  .NE.0) IAMBI=IAMBI+1
      IF (KELLANA .NE.0) IAMBI=IAMBI+1
      IF (KBREC   .gt.0) IAMBI=IAMBI+1
      IF (kbundumag.ne.0) IAMBI=IAMBI+1
      IF (KBPOLYMAG.GT.0) IAMBI=IAMBI+1
      IF (KBGENESIS.GT.0) IAMBI=IAMBI+1
      IF (KBPOLYH .NE.0) IAMBI=IAMBI+1
      IF (KBPOLY3D .NE.0)IAMBI=IAMBI+1
      IF (KBPOLY2DH .NE.0)IAMBI=IAMBI+1
      IF (KBPHARM .NE.0)IAMBI=IAMBI+1
      IF (IRFILP  .NE.0) IAMBI=IAMBI+1
      IF (IRFILB0 .NE.0) IAMBI=IAMBI+1
      IF (IBHELM  .NE.0) IAMBI=IAMBI+1
      IF (IMAGSPLN.GT.0) IAMBI=IAMBI+1
      IF (KMAGSEQ.GT.0) IAMBI=IAMBI+1
      IF (IWSECTMAGS.LT.0) IAMBI=IAMBI+1
      IF (IAMBI.GT.1) THEN
      IF (ibmasksp.LT.0) IAMBI=IAMBI+1
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     *** ERROR IN GFINIT ***'
      WRITE(LUNGFO,*)'     MAGNETIC FIELD AMBIGIOUSLY SPECIFIED'
      WRITE(LUNGFO,*)'     CHECK FIELD SELECTION AND IBMASKSP'
      WRITE(LUNGFO,*)
      WRITE(6,*)
      WRITE(6,*)
      WRITE(6,*)'     *** ERROR IN GFINIT ***'
      WRITE(6,*)'     MAGNETIC FIELD AMBIGIOUSLY SPECIFIED'
      WRITE(6,*)'     CHECK FIELD SELECTION AND IBMASKSP'
      WRITE(6,*)
      STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

      ENDIF !IBSUPER

C- ANALYTICALLY DEFINED GENERATING FUNCTION

      IAMBI=0
      IF (IERZFUN.NE.0) IAMBI=IAMBI+1
      IF (IERZANA.NE.0) IAMBI=IAMBI+1
      IF (IAMBI.GT.1) THEN
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     *** ERROR IN GFINIT ***'
      WRITE(LUNGFO,*)'     FLAGS IERZRANA AND IERZFUN COLLIDE'
      WRITE(LUNGFO,*)'     SET ONLY ONE'
      WRITE(LUNGFO,*)
      WRITE(6,*)
      WRITE(6,*)
      WRITE(6,*)'     *** ERROR IN GFINIT ***'
      WRITE(6,*)'     FLAGS IERZRANA AND IERZFUN COLLIDE'
      WRITE(6,*)'     SET ONLY ONE'
      WRITE(6,*)
      STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

C- FOURIER-TRANSFORMATION

      IAMBI=0
      IF (IRFILF.NE.0) IAMBI=IAMBI+1
      IF (IWFILF.NE.0) IAMBI=IAMBI+1
      IF (IAMBI.GT.1) THEN
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     *** ERROR IN GFINIT ***'
      WRITE(LUNGFO,*)'     FLAGS IRFILF AND IWFILF COLLIDE'
      WRITE(LUNGFO,*)'     SET ONLY ONE'
      WRITE(LUNGFO,*)
      WRITE(6,*)
      WRITE(6,*)
      WRITE(6,*)'     *** ERROR IN GFINIT ***'
      WRITE(6,*)'     FLAGS IRFILF AND IWFILF COLLIDE'
      WRITE(6,*)'     SET ONLY ONE'
      WRITE(6,*)
      STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF

C--- DEFAULT VALUES

C030414      IF (XINTER.EQ.9999..AND.IBSUPER.EQ.0) THEN

C--- CALCULATE FOURIER-COEFFIZIENTS OF B-FIELD FOR SEQUENCE OF MAGNETS

      IF (KMAGSEQ.NE.0.AND.IMGSQF.NE.0) THEN

        xstarto=xstart
        idum=imgsqf
        if (xstart.eq.9999.) then
          imgsqf=0
          CALL bmagseq(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTART=bmsqbounds(1)
          imgsqf=idum
c          print*
c          print*,"*** Error in GFINIT: Default 9999 not allowed for XSTART for IMGSQF not zero"
c          print*
c          IABEND=8
c          goto 9999
        endif

        if (xstop.eq.9999.) then
          imgsqf=0
          if (xstopo.ne.9999.) then
            CALL bmagseq(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          endif
          XSTOP=bmsqbounds(2)
c          print*
c          print*,"*** Error in GFINIT: Default 9999 not allowed for XSTOP for IMGSQF not zero"
c          print*
c          IABEND=8
c          goto 9999
        endif
        imgsqf=idum

        ISTORE=IWFILF
        IWFILF=99
        BSTORE=B0SCGLOB
        btapv=btaperv
        btaph=btaperh
        btaperv=0.0d0
        btaperh=0.0d0
        ASTORE=A0SCGLOB
        BSTOREY=B0SCGLOBY
        ASTOREY=A0SCGLOBY
        BSTOREZ=B0SCGLOBZ
        ASTOREZ=A0SCGLOBZ
        BSTORE2=BYGOFF
        BSTORE2Z=BZGOFF
        B0SCGLOB=1.0D0
        A0SCGLOB=1.0D0
        B0SCGLOBY=1.0D0
        A0SCGLOBY=1.0D0
        B0SCGLOBZ=1.0D0
        A0SCGLOBZ=1.0D0
        BYGOFF=0.0
        BZGOFF=0.0

        CALL FOURWLS

        IWFILF=ISTORE
        btaperh=btaph
        btaperv=btapv
        A0SCGLOB=ASTORE
        B0SCGLOB=BSTORE
        A0SCGLOBY=ASTOREY
        B0SCGLOBY=BSTOREY
        A0SCGLOBZ=ASTOREZ
        B0SCGLOBZ=BSTOREZ
        BYGOFF=BSTORE2
        BZGOFF=BSTORE2Z

      ENDIF

      IF (KHALBASY.NE.0.and.mod(nint(ahwpol),2).eq.0) THEN
        print*,"*** WARNING: AHWPOL should be odd, or be aware of strange results ***"
        write(lungfo,*)"*** WARNING: AHWPOL should be odd, or be aware of strange results ***"
      endif

      IF (XINTER.EQ.9999.) THEN

        XSTARTO=XSTART

        IF (KHALBA.NE.0) THEN
          CALL BHALBA(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XINTER=-ZLENHAL/2.0D0
        ELSE IF (KBFELD.NE.0) THEN
          CALL MYBFELD(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XINTER=XLIM(1)
          IF (IKBFORM.NE.0) XINTER=-XP5
        ELSE IF (KHALBASY.NE.0) THEN
          CALL BHALBASY(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          IF (FASYM.NE.2.0D0) THEN
            XINTER=-ZLHALBASY*(AHWPOL+FASYM)/4.0D0+xcenhal
          ELSE
            XINTER=-ZLHALBASY*((AHWPOL-1.0D0)/2.0D0+1.0D0)/2.+xcenhal
          ENDIF
        ELSE IF (KUNDUGAP.NE.0) THEN
          CALL BUNDUGAP(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM,-1)
          XINTER=-ZLUNDUGAP*((UNDUGAPPOL-1.0D0)/2.0D0+1.0D0)/2.+xcenUNDUGAP
        ELSE IF (IRFILF.eq.1) THEN
          CALL BFOUR(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XINTER=-DEVLEN2
        ELSE IF (IFOURBTABZY.NE.0) THEN
          CALL BFOURTABZY(9999.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XINTER=XSTART
        ELSE IF (IRBTAB.NE.0) THEN
          CALL BTAB(9999.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XINTER=XSTART
        ELSE IF (IRBTABZY.NE.0) THEN
          CALL BTABZY(9999.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XINTER=XSTART
        ELSE IF (IRBTABXYZ.NE.0) THEN
          CALL BTABXYZ(9999.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XINTER=XSTART
        ELSE IF (KUCROSS.NE.0) THEN
          CALL BUCROSS(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XINTER=ULIMI(1)
        ELSE IF (KELLIP.NE.0) THEN
          CALL BELLIP(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          Xinter=-(perellip*xlellip+ellshft*xlellip)/2.0d0+xcenell
        ELSE IF (KELLANA.NE.0) THEN
          CALL BELLANA(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XINTER=-HLENELL
        ELSE IF (KBPOLYH.NE.0) THEN
          CALL BPHARM(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
        ELSE IF (KBPOLY3D.NE.0) THEN
          CALL BPOLY3D(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XINTER=X3DMIN
        ELSE IF (KBPOLY2DH.NE.0) THEN
          CALL BPOLY2DH(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XINTER=X2DHMIN
        ELSE IF (KBPOLY2DH.NE.0) THEN
          CALL BPHARM(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XINTER=XPHMIN
        ELSE IF (KBREC.gt.0) THEN
          CALL REC_INIT
        ELSE IF (kbundumag.ne.0) THEN
          muthreads=mthreads
          if (kbundumag.eq.2.or.kbundumag.eq.4) then
            uebeam=dmyenergy
            kwrun=icode
            chwcom=code
            call run_undumag(kbundumag,lungfo)
          else  if (kbundumag.lt.0) then
            call run_undumag(kbundumag,lungfo)
          endif
          CALL bundumag_ini(XSTART,XSTOP,LUNGFO)
        ELSE IF (KBPOLYMAG.GT.0) THEN
          CALL BPOLYINI(XSTART,XSTOP,LUNGFO)
        ELSE IF (KBGENESIS.NE.0) THEN
          CALL BGENESIS(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XINTER=GSTOTLEN/2.0D0
        ELSE IF (IRFILB0.EQ.-4) THEN
          CALL BMESSINI4
        ELSE IF (IRFILB0.NE.0.and.abs(irfilb0).ne.6) THEN
          CALL BMESSINI
        ELSE IF (IWSECTMAGS.LT.0) THEN
          CALL BSECTMAGS(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XINTER=XSTART
        ENDIF !xinter

        IF (XINTER.EQ.9999.) THEN

          WRITE (LUNGFO,*)
          WRITE (LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE (LUNGFO,*)'DEFAULT 9999. NOT ALLOWED HERE FOR XINTER '
          WRITE (LUNGFO,*)
          WRITE (6,*)
          WRITE (6,*)'*** ERROR IN GFINIT ***'
          WRITE (6,*)'DEFAULT 9999. NOT ALLOWED HERE FOR XINTER '
          WRITE (6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'

        ENDIF !xinter

        XSTART=XSTARTO

      ENDIF !XINTER.EQ.9999.

      XSTOPO=XSTOP

C030414      IF (XSTART.EQ.9999..AND.IBSUPER.EQ.0) THEN
      IF (XSTART.EQ.9999.) THEN

        XSTARTO=XSTART

        IF (KHALBA.NE.0) THEN
          CALL BHALBA(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTART=-ZLENHAL/2.0D0
        ELSE IF (kmagseq.NE.0) THEN
          CALL bmagseq(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTART=bmsqbounds(1)
        ELSE IF (KBFELD.NE.0) THEN
          CALL MYBFELD(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTART=XLIM(1)
          IF (IKBFORM.NE.0) XSTART=-XP5
        ELSE IF (KHALBASY.NE.0) THEN
          CALL BHALBASY(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          IF (FASYM.NE.2.0D0) THEN
            XSTART=-ZLHALBASY*(AHWPOL+FASYM)/4.0D0+xcenhal
          ELSE
            XSTART=-ZLHALBASY*((AHWPOL-1.0D0)/2.0D0+1.0D0)/2.+xcenhal
          ENDIF
        ELSE IF (KUNDUGAP.NE.0) THEN
          CALL BUNDUGAP(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM,-2)
          XSTART=-ZLUNDUGAP*((UNDUGAPPOL-1.0D0)/2.0D0+1.0D0)/2.+xcenUNDUGAP
        ELSE IF (IRFILF.eq.1) THEN
          CALL BFOUR(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTART=-DEVLEN2
        ELSE IF (IFOURBTABZY.NE.0) THEN
          CALL BFOURTABZY(9999.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTART=XSTART
        ELSE IF (IRBTAB.NE.0) THEN
          CALL BTAB(9999.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
        ELSE IF (IRBTABZY.NE.0) THEN
          CALL BTABZY(9999.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTART=XSTART
        ELSE IF (IRBTABXYZ.NE.0) THEN
          CALL BTABXYZ(9999.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTART=XSTART
        ELSE IF (KUCROSS.NE.0) THEN
          CALL BUCROSS(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTART=ULIMI(1)
        ELSE IF (KELLIP.NE.0) THEN
          CALL BELLIP(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTART=-(perellip*xlellip+ellshft*xlellip)/2.0d0+xcenell
        ELSE IF (KELLANA.NE.0) THEN
          CALL BELLANA(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTART=-HLENELL
        ELSE IF (KBPOLYH.NE.0) THEN
          CALL BPHARM(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
        ELSE IF (KBPOLY3D.NE.0) THEN
          CALL BPOLY3D(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTART=X3DMIN
        ELSE IF (KBPOLY2DH.NE.0) THEN
          CALL BPOLY2DH(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTART=X2DHMIN
        ELSE IF (KBPOLY2DH.NE.0) THEN
          CALL BPHARM(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTART=XPHMIN
        ELSE IF (KBREC.gt.0) THEN
          CALL REC_INIT
        ELSE IF (kbundumag.ne.0) THEN
          muthreads=mthreads
          if (kbundumag.eq.2.or.kbundumag.eq.4) then
            uebeam=dmyenergy
            uebeam_h=dmyenergy
            kwrun=icode
            chwcom=code
            call run_undumag(kbundumag,lungfo)
          else  if (kbundumag.lt.0) then
            call run_undumag(kbundumag,lungfo)
          endif
          CALL bundumag_ini(XSTART,XSTOP,LUNGFO)
        ELSE IF (KBPOLYMAG.GT.0) THEN
          CALL BPOLYINI(XSTART,XSTOP,LUNGFO)
        ELSE IF (KBGENESIS.NE.0) THEN
          XSTART=0.0D0
        ELSE IF (IRFILB0.EQ.-4) THEN
          CALL BMESSINI4
        ELSE IF (abs(IRFILB0).EQ.6) THEN
          bxdum=-9999.0d0
          CALL BMAP(axdum,aydum,azdum,bxdum,bydum,bzdum)
          xstart=axdum
        ELSE IF (IRFILB0.NE.0) THEN
          CALL BMESSINI
        ELSE IF (IWSECTMAGS.LT.0) THEN
          CALL BSECTMAGS(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
        ENDIF

        IF (XSTART.EQ.9999.) THEN

          WRITE (LUNGFO,*)
          WRITE (LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE (LUNGFO,*)'DEFAULT NOT ALLOWED HERE FOR XSTART '
          WRITE (LUNGFO,*)
          WRITE (6,*)
          WRITE (6,*)'*** ERROR IN GFINIT ***'
          WRITE (6,*)'DEFAULT NOT ALLOWED HERE FOR XSTART '
          WRITE (6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'

        ENDIF

      ENDIF !XSTART.EQ.9999.

C030414      IF (XSTOP.EQ.9999..AND.IBSUPER.EQ.0) THEN
      IF (XSTOP.EQ.9999.) THEN

        IF (KHALBA.NE.0) THEN
          CALL BHALBA(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTOP=ZLENHAL/2.0D0
        ELSE IF (kmagseq.NE.0) THEN
          CALL bmagseq(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTOP=bmsqbounds(2)
        ELSE IF (KBFELD.NE.0) THEN
          XSTOP=XLIM(12)
          IF (IKBFORM.NE.0) XSTOP=-XSTART
        ELSE IF (KHALBASY.NE.0) THEN
          CALL BHALBASY(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          IF (FASYM.NE.2.0D0) THEN
            XSTOP=ZLHALBASY*(AHWPOL+FASYM)/4.0D0+xcenhal
          ELSE
            XSTOP=ZLHALBASY*((AHWPOL-1.0D0)/2.0D0+1.0D0)/2.+xcenhal
          ENDIF
        ELSE IF (KUNDUGAP.NE.0) THEN
          CALL BUNDUGAP(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM,-3)
          XSTOP=ZLUNDUGAP*((UNDUGAPPOL-1.0D0)/2.0D0+1.0D0)/2.+xcenUNDUGAP
        ELSE IF (IRFILF.eq.1) THEN
          CALL BFOUR(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTOP=DEVLEN2
        ELSE IF (IFOURBTABZY.NE.0) THEN
          CALL BFOURTABZY(9999.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTOP=XSTOP
        ELSE IF (IRBTAB.NE.0) THEN
          CALL BTAB(9999.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
        ELSE IF (IRBTABZY.NE.0) THEN
          CALL BTABZY(9999.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTOP=XSTOP
        ELSE IF (IRBTABXYZ.NE.0) THEN
          CALL BTABXYZ(9999.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTOP=XSTOP
        ELSE IF (KUCROSS.NE.0) THEN
          CALL BUCROSS(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTOP=ULIMI(4)
        ELSE IF (KELLIP.NE.0) THEN
          CALL BELLIP(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XStop=(perellip*xlellip+ellshft*xlellip)/2.0d0+xcenell
        ELSE IF (KELLANA.NE.0) THEN
          CALL BELLANA(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTOP=HLENELL
        ELSE IF (KBPOLYH.NE.0) THEN
          CALL BPHARM(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
        ELSE IF (KBPOLY3D.NE.0) THEN
          CALL BPOLY3D(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTOP=X3DMAX
        ELSE IF (KBPOLY2DH.NE.0) THEN
          CALL BPOLY2DH(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTOP=X2DHMAX
        ELSE IF (KBPHARM.NE.0) THEN
          CALL BPHARM(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTOP=XPHMAX
        ELSE IF (KBREC.gt.0) THEN
          CALL REC_INIT
        ELSE IF (kbundumag.ne.0) THEN
          muthreads=mthreads
          if (kbundumag.eq.2.or.kbundumag.eq.4) then
            uebeam=dmyenergy
            uebeam_h=dmyenergy
            kwrun=icode
            chwcom=code
            call run_undumag(kbundumag,lungfo)
          else  if (kbundumag.lt.0) then
            call run_undumag(kbundumag,lungfo)
          endif
          CALL bundumag_ini(XSTART,XSTOP,LUNGFO)
        ELSE IF (KBPOLYMAG.GT.0) THEN
          CALL BPOLYINI(XSTART,XSTOP,LUNGFO)
        ELSE IF (abs(IRFILB0).EQ.6) THEN
          bxdum=9999.0d0
          CALL BMAP(axdum,aydum,azdum,bxdum,bydum,bzdum)
          xstop=axdum
        ELSE IF (IRFILB0.EQ.-4) THEN
          CALL BMESSINI4
        ELSE IF (IRFILB0.NE.0.and.abs(irfilb0).ne.6) THEN
          CALL BMESSINI
        ELSE IF (KBGENESIS.NE.0) THEN
          CALL BGENESIS(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
          XSTOP=GSTOTLEN
        ELSE IF (IWSECTMAGS.LT.0) THEN
          CALL BSECTMAGS(0.0D0,0.0D0,0.0D0,BXDUM,BYDUM,BZDUM,AXDUM,AYDUM,AZDUM)
        ENDIF

        if (xstop.eq.9999.) then
          WRITE (LUNGFO,*)
          WRITE (LUNGFO,*)'*** ERROR IN GFINIT ***'
          WRITE (LUNGFO,*)'DEFAULT NOT ALLOWED HERE FOR XSTOP '
          WRITE (LUNGFO,*)
          WRITE (6,*)
          WRITE (6,*)'*** ERROR IN GFINIT ***'
          WRITE (6,*)'DEFAULT NOT ALLOWED HERE FOR XSTOP '
          WRITE (6,*)
          STOP '*** PROGRAM WAVE ABORTED ***'
        ENDIF

      ENDIF !XSTOP.EQ.9999.

      if (ibunduini.eq.0.and.kbundumag.ne.0) then
          muthreads=mthreads
          if (kbundumag.eq.2.or.kbundumag.eq.4) then
            uebeam=dmyenergy
            uebeam_h=dmyenergy
            kwrun=icode
            chwcom=code
            call run_undumag(kbundumag,lungfo)
          else  if (kbundumag.lt.0) then
            call run_undumag(kbundumag,lungfo)
          endif
          CALL bundumag_ini(XSTART,XSTOP,LUNGFO)
      endif

      IF (IPERIODG.NE.0.AND.XSTOPO.EQ.9999.) THEN
        XSTOP=XSTOP+(XPERWMX-XPERWMN)
      ENDIF

      IF (IBSYM.NE.0.AND.XSTARTO.EQ.9999.) XSTART=-XSTOP

      IF (XSTARTO.EQ.9999.) XSTART=XSTART-XSHIFT
      IF (XSTOPO.EQ.9999.) XSTOP=XSTOP-XSHIFT

      IF (XSTART.EQ.XSTOP) THEN
        WRITE(LUNGFO,*)'*** ERROR IN GFINIT: XSTART=XSTOP ***'
        WRITE(LUNGFO,*)'*** PROGRAM WAVE ABORTED ***'
        WRITE(6,*)'*** ERROR IN GFINIT: XSTART=XSTOP ***'
        WRITE(6,*)'*** PROGRAM WAVE ABORTED ***'
        STOP
      ENDIF

      if (xtaper.eq.9999.0d0) xtaper=xstart

      IF (NSTEPMX.EQ.0) THEN
        NSTEPMX=NWMAXP
      ELSE IF (NSTEPMX.LT.0) THEN
        NSTEPMX=(XSTOP-XSTART)*MYINUM*2.*(-NSTEPMX)
      ENDIF
      IF (NSTEPMX.LE.0) THEN
        NSTEPMX=NWMAXP
      ENDIF
      NWMAX=NSTEPMX

      IF (NPOLMX.EQ.0) NPOLMX=NDPOLP
      NDPOL=NPOLMX

      CALL MYBFELD(XSTART,YSTART,ZSTART,
     &  BXSTART,BYSTART,BZSTART,
     &  AXSTART,AYSTART,AZSTART)


      IF (VXIN.EQ.0.0D0.AND.VYIN.EQ.0.0D0.AND.VZIN.EQ.0.0D0) VXIN=1.0D0

      IF (XINTER.NE.XSTART.AND.XINTER.NE.-9999.) THEN

        YSTARTO=YSTART
        ZSTARTO=ZSTART

        VXINO=VXIN
        VYINO=VYIN
        VZINO=VZIN

        VN=1.0D0/DSQRT(VXIN**2+VYIN**2+VZIN**2)
        VXIN=VXIN*VN
        VYIN=VYIN*VN
        VZIN=VZIN*VN

        BETX0=VXIN*BETA
        BETY0=VYIN*BETA
        BETZ0=VZIN*BETA

        X0=XSTART
        Y0=YSTART
        Z0=ZSTART

        VX0=VXIN*V0
        VY0=VYIN*V0
        VZ0=VZIN*V0

        IF (XINTER.GT.XSTART) THEN

          BYDUM=B0SCGLOB
          B0SCGLOB=-B0SCGLOB
          btaperv=-btaperv
          btaperh=-btaperh

          CALL TRACKSHORT(ISNORDER,XINTER,Y0,Z0,-VX0,-VY0,-VZ0,
     &      XSTART,0.0D0,0.0D0,-1.0D0,0.0D0,0.0D0,
     &      XF0,YF0,ZF0,dtshort,VXF0,VYF0,VZF0,DTIM,BSHIFT,GAMMA,BMOVECUT,
     &      IUSTEP,IENELOSS,GAMMAL)

          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'     Result of back-tracking due to XINTER:'
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'     x:',XF0
          WRITE(LUNGFO,*)'     y:',YF0
          WRITE(LUNGFO,*)'     z:',ZF0
          WRITE(LUNGFO,*)'     vx:',-VXF0
          WRITE(LUNGFO,*)'     vy:',-VYF0
          WRITE(LUNGFO,*)'     vz:',-VZF0
          WRITE(LUNGFO,*)'     yp:',VYF0/VXF0
          WRITE(LUNGFO,*)'     zp:',VZF0/VXF0
          WRITE(LUNGFO,*)

          B0SCGLOB=BYDUM
          btaperv=-btaperv
          btaperh=-btaperh
          XSTART=XF0
          YSTART=YF0
          ZSTART=ZF0
          VXIN=-VXF0
          VYIN=-VYF0
          VZIN=-VZF0

          GAMMA=GAMMA-GAMMAL !We gain energy here, and gammal is negative!
          DMYGAMMA=GAMMA
          DMYENERGY=GAMMA*EMASSG1

          ENERGV=GAMMA*EMASSE1
          GMOM=EMASSG1*DSQRT((gamma-1.0d0)*(gamma+1.0d0))
          EMOM=EMASSE1*DSQRT((gamma-1.0d0)*(gamma+1.0d0))
          DBRHO=ICHARGE*EMOM/CLIGHT1
          BETA=DSQRT((1.0D0-1.0D0/GAMMA)*(1.0D0+1.0D0/GAMMA))
          DMYBETA=BETA
          V0=CLIGHT1*BETA

        ELSE   !XINTER.GT.XSTART

          CALL TRACKSHORT(ISNORDER,XINTER,Y0,Z0,VX0,VY0,VZ0,
     &      XSTART,0.0D0,0.0D0,1.0D0,0.0D0,0.0D0,
     &      XF0,YF0,ZF0,dtshort,VXF0,VYF0,VZF0,DTIM,BSHIFT,GAMMA,BMOVECUT,
     &      IUSTEP,IENELOSS,GAMMAL)

          XSTART=XF0
          YSTART=YF0
          ZSTART=ZF0
          VXIN=VXF0
          VYIN=VYF0
          VZIN=VZF0

          GAMMA=GAMMA+GAMMAL !We lose energy here!
          DMYGAMMA=GAMMA
          DMYENERGY=GAMMA*EMASSG1

          ENERGV=GAMMA*EMASSE1
          GMOM=EMASSG1*DSQRT((gamma-1.0d0)*(gamma+1.0d0))
          EMOM=EMASSE1*DSQRT((gamma-1.0d0)*(gamma+1.0d0))
          DBRHO=ICHARGE*EMOM/CLIGHT1
          BETA=DSQRT((1.0D0-1.0D0/GAMMA)*(1.0D0+1.0D0/GAMMA))
          DMYBETA=BETA
          V0=CLIGHT1*BETA

        ENDIF  !XINTER.GT.XSTART

      ENDIF !(XINTER.NE.-9999.)

c20aug09      ROIX(1)=XSTART
c20aug09      ROIX(NROIA)=XSTOP

      IF (XSTART.LT.ROIX(1)) THEN
        WRITE(LUNGFO,*)
     &    '*** ERROR IN NAMELIST ROIN: XSTART < ROIX(1)'
        WRITE(6,*)
     &    '*** ERROR IN NAMELIST ROIN: XSTART < ROIX(1)'
        STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF !(XSTART.LT.ROIX(1))

      IF (XSTOP.GT.ROIX(NROIA)) THEN
        WRITE(LUNGFO,*)
     &    '*** ERROR IN NAMELIST ROIN: XSTOP GREATER THAN LAST ROI-BOUNDARY'
        WRITE(6,*)
     &    '*** ERROR IN NAMELIST ROIN: XSTOP GREATER THAN LAST ROI-BOUNDARY'
        STOP '*** PROGRAM WAVE ABORTED ***'
      ENDIF !(XSTART.GT.ROIX(1))

      IF (XIANF.EQ.9999.) XIANF=-1.0D30
      IF (XIEND.EQ.9999.) XIEND=1.0D30

      if (iexpert.ne.0) then
        xianf=-1.0d30
        xiend=1.0d30
      endif

      IF (XIANF.EQ.XIEND) THEN
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)'*** WARNING IN GFINIT: XIANF=XIEND ***'
        WRITE(LUNGFO,*)'*** SET TO XSTART/XSTOP ***'
        WRITE(LUNGFO,*)
        WRITE(6,*)
        WRITE(6,*)'*** WARNING IN GFINIT: XIANF=XIEND ***'
        WRITE(6,*)'*** SET TO XSTART/XSTOP ***'
        WRITE(6,*)
        XIANF=XSTART
        XIEND=XSTOP
      ENDIF

C--- B-FIELD FROM PANDIRA

      IF (IRFILP.NE.0) CALL READBP

C--- CALCULATE FOURIER-COEFFICIENTS OF B-FIELD AND EXIT

      IF (IWFILF.NE.0) THEN
        CALL FOURWLS
        IABEND=1
        goto 9999
      ENDIF

C--- FIND DEFAULTS FOR VXIN,VYIN,VZIN IF NECESSARY

      IF (VYIN.EQ.9999..AND.VZIN.EQ.9999.) THEN

        VXIN=1.0D0
        VYIN=0.0D0
        VZIN=0.0D0

        BETX0=VXIN*BETA
        BETY0=VYIN*BETA
        BETZ0=VZIN*BETA

        X0=XSTART
        Y0=YSTART
        Z0=ZSTART

        VX0=VXIN*V0
        VY0=VYIN*V0
        VZ0=VZIN*V0

        CALL TRACKSHORT(ISNORDER,X0,Y0,Z0,VX0,VY0,VZ0,
     &    XSTART+PERIODG,0.0D0,0.0D0,1.0D0,0.0D0,0.0D0,
     &    XF0,YF0,ZF0,dtshort,VXF0,VYF0,VZF0,DTIM,BSHIFT,GAMMA,BMOVECUT,
     &    IUSTEP,IENELOSS,GAMMAL)

        GAMMA=GAMMA-GAMMAL !We lose energy here!
        DMYGAMMA=GAMMA
        DMYENERGY=GAMMA*EMASSG1

        ENERGV=GAMMA*EMASSE1
        GMOM=EMASSG1*DSQRT((gamma-1.0d0)*(gamma+1.0d0))
        EMOM=EMASSE1*DSQRT((gamma-1.0d0)*(gamma+1.0d0))
        DBRHO=ICHARGE*EMOM/CLIGHT1
        BETA=DSQRT((1.0D0-1.0D0/GAMMA)*(1.0D0+1.0D0/GAMMA))
        DMYBETA=BETA
        V0=CLIGHT1*BETA

        YP=-YF0/PERIODG
        ZP=-ZF0/PERIODG

        VXIN=V0/DSQRT(1.0D0+ZP*ZP+YP*YP)
        VYIN=YP*VXIN
        VZIN=ZP*VXIN

      ELSE IF (VYIN.EQ.9999.) THEN

        VYIN=0.0D0
        VN=1.0D0/DSQRT(VXIN**2+VYIN**2+VZIN**2)
        VXIN=VXIN*VN
        VYIN=VYIN*VN
        VZIN=VZIN*VN

        BETX0=VXIN*BETA
        BETY0=VYIN*BETA
        BETZ0=VZIN*BETA

        X0=XSTART
        Y0=YSTART
        Z0=ZSTART

        VX0=VXIN*V0
        VY0=VYIN*V0
        VZ0=VZIN*V0

        CALL TRACKSHORT(ISNORDER,X0,Y0,Z0,VX0,VY0,VZ0,
     &    XSTART+PERIODG,0.0D0,0.0D0,1.0D0,0.0D0,0.0D0,
     &    XF0,YF0,ZF0,dtshort,VXF0,VYF0,VZF0,DTIM,BSHIFT,GAMMA,BMOVECUT,
     &    IUSTEP,IENELOSS,GAMMAL)

        GAMMA=GAMMA+GAMMAL !We loose energy here!
        DMYGAMMA=GAMMA
        DMYENERGY=GAMMA*EMASSG1

        ENERGV=GAMMA*EMASSE1
        GMOM=EMASSG1*DSQRT((gamma-1.0d0)*(gamma+1.0d0))
        EMOM=EMASSE1*DSQRT((gamma-1.0d0)*(gamma+1.0d0))
        DBRHO=ICHARGE*EMOM/CLIGHT1
        BETA=DSQRT((1.0D0-1.0D0/GAMMA)*(1.0D0+1.0D0/GAMMA))
        DMYBETA=BETA
        V0=CLIGHT1*BETA

        YP=-YF0/PERIODG
        ZP=VZIN/VXIN

        VXIN=V0/DSQRT(1.0D0+ZP*ZP+YP*YP)
        VYIN=YP*VXIN
        VZIN=ZP*VXIN

      ELSE IF (VZIN.EQ.9999.) THEN

        VZIN=0.0D0
        VN=1.0D0/DSQRT(VXIN**2+VYIN**2+VZIN**2)
        VXIN=VXIN*VN
        VYIN=VYIN*VN
        VZIN=VZIN*VN

        BETX0=VXIN*BETA
        BETY0=VYIN*BETA
        BETZ0=VZIN*BETA

        X0=XSTART
        Y0=YSTART
        Z0=ZSTART

        VX0=VXIN*V0
        VY0=VYIN*V0
        VZ0=VZIN*V0

        CALL TRACKSHORT(ISNORDER,X0,Y0,Z0,VX0,VY0,VZ0,
     &    XSTART+PERIODG,0.0D0,0.0D0,1.0D0,0.0D0,0.0D0,
     &    XF0,YF0,ZF0,dtshort,VXF0,VYF0,VZF0,DTIM,BSHIFT,GAMMA,BMOVECUT,
     &    IUSTEP,IENELOSS,GAMMAL)

        GAMMA=GAMMA+GAMMAL !We lose energy here!
        DMYGAMMA=GAMMA
        DMYENERGY=GAMMA*EMASSG1

        ENERGV=GAMMA*EMASSE1
        GMOM=EMASSG1*DSQRT((gamma-1.0d0)*(gamma+1.0d0))
        EMOM=EMASSE1*DSQRT((gamma-1.0d0)*(gamma+1.0d0))
        DBRHO=ICHARGE*EMOM/CLIGHT1
        BETA=DSQRT((1.0D0-1.0D0/GAMMA)*(1.0D0+1.0D0/GAMMA))
        DMYBETA=BETA
        V0=CLIGHT1*BETA

        ZP=-ZF0/PERIODG
        YP=VYIN/VXIN

        VXIN=V0/DSQRT(1.0D0+ZP*ZP+YP*YP)
        VYIN=YP*VXIN
        VZIN=ZP*VXIN

      ENDIF !VYIN.EQ.9999..AND.VZIN.EQ.9999.

      xstartP=XSTART
      ystartP=YSTART
      zstartP=ZSTART

      vxinP=VXIN
      vyinP=VYIN
      vzinP=VZIN

C--- TRACK REFERENCE ORBIT FROM XSTART TO XSTOP

C-   NORMALIZE VELOCITY

      VN=1.0D0/DSQRT(VXIN**2+VYIN**2+VZIN**2)
      VXIN=VXIN*VN
      VYIN=VYIN*VN
      VZIN=VZIN*VN

      BETX0=VXIN*BETA
      BETY0=VYIN*BETA
      BETZ0=VZIN*BETA

      X0=XSTART
      Y0=YSTART
      Z0=ZSTART

      VX0=VXIN*V0
      VY0=VYIN*V0
      VZ0=VZIN*V0

      if (xstart.ge.xstop) then
        write(lungfo,*)"*** Error in subroutine gfinit: XSTART >= XSTOP ***"
        write(6,*)"*** Error in subroutine gfinit: XSTART >= XSTOP ***"
        stop "*** Program WAVE aborted ***"
      endif

      CALL TRACK(X0,Y0,Z0,VX0,VY0,VZ0,
     &  XSTOP,0.0D0,0.0D0,1.0D0,0.0D0,0.0D0,
     &  XF0,YF0,ZF0,VXF0,VYF0,VZF0,DTIM,BSHIFT,GAMMA,GAMMAL)
      t0track=wtim0(1)
      tftrack=wtim0(nco)

      CALL TRACEN(0.0D0,YCEN,ZCEN,YPCEN,ZPCEN)
      CALL TRACEN(XIANF,YIANF,ZIANF,YPIANF,ZPIANF)
      CALL TRACEN(XIEND,YIEND,ZIEND,YPIEND,ZPIEND)

      !if (eps0h.eq.0.0d0) eps0h=bsigz(1)*bsigzp(1)
      !if (eps0v.eq.0.0d0) eps0v=bsigy(1)*bsigyp(1)

      IF (betfun.EQ.0.0d0) THEN
        if (eps0h.eq.0.0d0) then
          write(lungfo,*)
     &      '*** Error in GFINIT: EPS0H and BETFUN are zero'
          write(lungfo,*)
     &      '*** Error in GFINIT: Please check namelists DEPOLA and WFOLDN'
          write(6,*)
     &      '*** Error in GFINIT: EPS0H and BETFUN are zero'
          write(6,*)
     &      '*** Error in GFINIT: Please check namelists DEPOLA and WFOLDN'
          stop '*** Program WAVE aborted ***'
        endif
        betfun=bsigz(1)**2/eps0h
      endif

      IF (betfunv.EQ.0.0d0) THEN
        if (eps0v.eq.0.0d0) then
          write(lungfo,*)
     &      '*** Error in GFINIT: EPS0V and BETFUN are zero'
          write(lungfo,*)
     &      '*** Error in GFINIT: Please check namelists DEPOLA and WFOLDN'
          write(6,*)
     &      '*** Error in GFINIT: EPS0V and BETFUN are zero'
          write(6,*)
     &      '*** Error in GFINIT: Please check namelists DEPOLA and WFOLDN'
          stop '*** Program WAVE aborted ***'
        endif
        betfunv=bsigy(1)**2/eps0v
      endif

      IF (iemit.ne.0.or.ibunch.eq.-1.and.iubunch.eq.1.and.betfun*eps0h.EQ.0.0d0) THEN

        if (betfun*eps0h.eq.0.0d0) then
          write(lungfo,*)
     &      '*** Warning in GFINIT: EPS0H or BETFUN are zero'
          write(lungfo,*)
     &      '*** Warning in GFINIT: Please check namelists DEPOLA and WFOLDN'
          write(6,*)
     &      '*** Warning in GFINIT: EPS0H or BETFUN are zero'
          write(6,*)
     &      '*** Warning in GFINIT: Please check namelists DEPOLA and WFOLDN'
        endif

        if ((bsigz(1)*bsigzp(1)).eq.0.0d0) then
          write(lungfo,*)
     &      '*** Warning in GFINIT: BSIGZ(1) and BSIGZP(1) are zero'
          write(lungfo,*)
     &      '*** Warning in GFINIT: Please check namelists DEPOLA and WFOLDN'
          write(6,*)
     &      '*** Warning in GFINIT: BSIGZ(1) and BSIGZP(1) are zero'
          write(6,*)
     &      '*** Warning in GFINIT: Please check namelists DEPOLA and WFOLDN'
        endif

      endif

      IF (iemit.ne.0.or.ibunch.eq.-1.and.iubunch.eq.1.and.betfun*eps0v.EQ.0.0d0) THEN

        if (betfun*eps0v.eq.0.0d0) then
          write(lungfo,*)
     &      '*** Warning in GFINIT: EPS0V or BETFUN are zero'
          write(lungfo,*)
     &      '*** Warning in GFINIT: Please check namelists DEPOLA and WFOLDN'
          write(6,*)
     &      '*** Warning in GFINIT: EPS0V or BETFUN are zero'
          write(6,*)
     &      '*** Warning in GFINIT: Please check namelists DEPOLA and WFOLDN'
        endif

        if ((bsigy(1)*bsigyp(1)).eq.0.0d0) then
          write(lungfo,*)
     &      '*** Warning in GFINIT: BSIGY(1) and BSIGYP(1) are zero'
          write(lungfo,*)
     &      '*** Warning in GFINIT: Please check namelists DEPOLA and WFOLDN'
          write(6,*)
     &      '*** Warning in GFINIT: BSIGY(1) and BSIGYP(1) are zero'
          write(6,*)
     &      '*** Warning in GFINIT: Please check namelists DEPOLA and WFOLDN'
        endif

      endif

      IF (betfun.ne.-9999.0d0) THEN
        IF (ABS(BETAH).EQ.9999.) THEN
          BY    =WTRA(2,3,1)
          RI    =CLIGHT1*BY/EMOM
          TANPHI=WTRA(3,2,1)/WTRA(1,2,1)
          BANA  =BETFUN+X0**2./BETFUN
          BPANA =2.*X0/BETFUN
          BANAC =BANA/(1.+TANPHI**2)
          BPANAC=BPANA/(1+TANPHI**2)+2.*BANA*TANPHI/(1.+TANPHI**2)
     &      *RI/(1+TANPHI**2)
          IF (BETAH.EQ.-9999.) THEN
            BETAH=BANAC
          ELSE IF (BETAH.EQ.9999.) THEN
            BETAH=BANA
          ENDIF
        ENDIF

        IF (ABS(BETAPH).EQ.9999.) THEN
          BY    =WTRA(2,3,1)
          RI    =CLIGHT1*BY/EMOM
          TANPHI=WTRA(3,2,1)/WTRA(1,2,1)
          BANA  =BETFUN+X0**2./BETFUN
          BPANA =2.*X0/BETFUN
          BANAC =BANA/(1.+TANPHI**2)
          BPANAC=BPANA/(1+TANPHI**2)+2.*BANA*TANPHI/(1.+TANPHI**2)
     &      *RI/(1+TANPHI**2)
          IF (BETAPH.EQ.-9999.) THEN
            BETAPH=BPANAC
          ELSE IF (BETAPH.EQ.9999.) THEN
            BETAPH=BPANA
          ENDIF
        ENDIF
      endif ! betfun.ne.-9999.

      IF (betfunv.ne.-9999.0d0) THEN
        IF (ABS(BETAV).EQ.9999.) THEN
          IF (BETFUNV.EQ.0.0) BETFUNV=1.0D0
          BETAV =BETFUNV+X0**2./BETFUNV
        ENDIF

        IF (ABS(BETAPV).EQ.9999.) THEN
          IF (BETFUNV.EQ.0.0) BETFUNV=1.0D0
          BETAPV =2.*X0/BETFUNV
        ENDIF
      endif

      if (ibunch.ne.0.or.iemit.ne.0) then
        write(lungfo,*)' '
        WRITE(LUNGFO,*)'     Horizontal emittance EPS0H [m-rad]:',EPS0H
        WRITE(LUNGFO,*)'     Vertical emittance EPS0V [m-rad]:  ',EPS0V
        write(lungfo,*)'     Horizontal beta-function BETAH [m]:',betah
        write(lungfo,*)'     Horizontal derivative BETAPH:      ',betaph
        write(lungfo,*)'     Vertical beta-function BETAV [m]:  ',betav
        write(lungfo,*)'     Vertical derivative BETAPV:        ',betapv
        write(lungfo,*)' '
        write(lungfo,*)'     --> Note: These values may differ from that of spectrum calculations!!'
        write(lungfo,*)' '
        if (iubunch.eq.1) then
          if (betah.lt.0.1.or.betah.gt.100.) then
            print*,"*** Warning in GFINIT: Strange value of BETAH:",betah
            print*,"*** This can cause program crashes for IUBUNCH=1!"
          endif
          if (betav.lt.0.1.or.betav.gt.100.) then
            print*,"*** Warning in GFINIT: Strange value of BETAH:",betah
            print*,"*** This can cause program crashes for IUBUNCH=1!"
          endif
          write(lungfo,*)' '
        endif
      endif

      IF (IWSECTMAGS.GT.0) THEN
        CALL SECTMAGS
      ENDIF !IWSECTMAGS

      IF (IMAGSPLN.LT.0
     &    .OR.
     &    ispec.ne.0.and.(ISPECMODE.EQ.3.or.ispecmode.eq.2)) THEN
C DO NOT USE WTRA(1:3,3,I) OR WBXYZ(1:3,I) DUE TO BSHIFT

        ALLOCATE(XAMAG(NCO))
        ALLOCATE(BXAMAG(NCO))
        ALLOCATE(BYAMAG(NCO))
        ALLOCATE(BZAMAG(NCO))
        ALLOCATE(BX2A(NCO))
        ALLOCATE(BY2A(NCO))
        ALLOCATE(BZ2A(NCO))
        IXAMAG_I=1

        DO I=1,NCO
          XAMAG(I)=WTRA(1,1,I)
          CALL MYBFELD
     &      (WTRA(1,1,I),WTRA(2,1,I),WTRA(3,1,I),
     &      BXAMAG(I),BYAMAG(I),BZAMAG(I),AXDUM,AYDUM,AZDUM)
        ENDDO  !NCO

        IF (IMAGSPLN.LT.0.AND.IMAGSPLN.NE.-9999) THEN
          CALL BMAGSPLN
     &      (WTRA(1,1,1),WTRA(2,1,1),WTRA(3,1,1),AXDUM,AYDUM,AZDUM)
        ENDIF

      ENDIF !IMAGSPLN

      CALL MYBFELD(XF0,YF0,ZF0,
     &  BXSTOP,BYSTOP,BZSTOP,
     &  AXSTOP,AYSTOP,AZSTOP)


      IF (IMAGSPLN.EQ.-9999) THEN
        IMAGSPLN=-999
      ELSE IF (IMAGSPLN.LT.0) THEN
        IMAGSPLN=-1111
      ENDIF

      ZP0=VZ0/VX0
      YP0=VY0/VX0

      ZPF0=VZF0/VXF0
      YPF0=VYF0/VXF0

      BETXF0=VXF0/CLIGHT1
      BETYF0=VYF0/CLIGHT1
      BETZF0=VZF0/CLIGHT1

C--- POLARIZATION

      ENEGEV=ENERGV/1.0D9
      BDIPOL=ENEGEV/RDIPOL*1.0D9/CLIGHT1
      BDIPL1G=1./RDIPOL*1.0D9/CLIGHT1
      TAUPOL0=POL2CON1*UMFANG*RDIPOL**2/ENEGEV**5
      TAUPOL01G=POL2CON1*UMFANG*RDIPOL**2/1.**5
      POLFAC=1.0D0+BINT3YA/2.0D0/PI1/BDIPOL**3/RDIPOL
      POLFC1G=1.0D0+BINT3YA/2.0D0/PI1/BDIPL1G**3/RDIPOL
      TAUPOL=TAUPOL0/POLFAC
      POLLEV=(2.*PI1*RDIPOL*BDIPOL**3+BINT3Y)/
     &  (2.*PI1*RDIPOL*BDIPOL**3+BINT3YA)*POL1CON1
      TAUPL1G=TAUPOL01G/POLFC1G
      POLLV1G=(2.*PI1*RDIPOL*BDIPL1G**3+BINT3Y)/
     &  (2.*PI1*RDIPOL*BDIPL1G**3+BINT3YA)*POL1CON1

      CALL EMINP(RDIPOL,BINT3YA,TAUPOL01G,TAUKRIT,EMINPOL)

      BDIPLEP=EMINPOL/RDIPOL*1.0D9/CLIGHT1
      TAUPOL0EP=POL2CON1*UMFANG*RDIPOL**2/EMINPOL**5
      POLFCEP=1.0D0+BINT3YA/2.0D0/PI1/BDIPLEP**3/RDIPOL
      TAUPLEP=TAUPOL0EP/POLFCEP
      POLLVEP=(2.*PI1*RDIPOL*BDIPLEP**3+BINT3Y)/
     &  (2.*PI1*RDIPOL*BDIPLEP**3+BINT3YA)*POL1CON1

C--- SIMPLE ESTIMATE OF LINEAR TRANSFER MATRIX

c20180111+self,if=notralinshort.
c      if  (betfun.eq.-9999.or.betfunv.eq.-9999.or.iphellip.ne.0
      if  (iemit.ne.0.or.iphellip.ne.0
c     &    .or.ibunch.ne.0.and.ispec.ne.0
     &    ) then
        if (deltaz.eq.0.0d0)  deltaz=0.0001
        if (deltazp.eq.0.0d0) deltazp=0.0001
        if (deltay.eq.0.0d0)  deltay=0.0001
        if (deltayp.eq.0.0d0) deltayp=0.0001
        write(6,*)
        write(6,*)
     &    '--- Remark: Call of TRALIN triggered due to'
        write(6,*)
c     &    '            BETAFUN or BETFUNV .eq. -9999. or IPHELLIP or IBUNCH .ne. 0 '
     &    '            IEMIT or IPHELLIP'
        write(6,*)
        write(lungfo,*)
        write(lungfo,*)
     &    '--- Remark: Call of TRALIN triggered due to'
        write(lungfo,*)
c     &    '            BETAFUN or BETFUNV .eq. -9999. or IPHELLIP or IBUNCH .ne. 0 '
     &    '            BETAFUN or BETFUNV .eq. -9999. or IPHELLIP'
        write(lungfo,*)
      endif

c20180111+self.

      IF (
     &    DABS(DELTAZ)+DABS(DELTAZP)+DABS(DELTAY)+DABS(DELTAYP).GT.0.0
     &    D0.OR.IPHELLIP.NE.0.or.betfun.eq.-9999.or.betfunv.eq.-9999.) THEN
c23.3.2022        IF (IRBTAB.NE.0.OR.IRBTABZY.NE.0.OR.IRBTABXYZ.NE.0.OR.IMAGSPLN.NE.0) THEN
        IF (IMAGSPLN.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'     *** ERROR IN GFINIT ***'
c23.3.2022          WRITE(LUNGFO,*)'     MAGNETIC FIELD FLAG IMAGSPLN,IRBTAB/IRBTABZY/IRBTABXYZ'
          WRITE(LUNGFO,*)'     MAGNETIC FIELD FLAG IMAGSPLN'
          WRITE(LUNGFO,*)'     NOT COMPATIBLE WITH CALL TO SR TRALIN OR'
          WRITE(LUNGFO,*)'     IPHELLIP.NE.0'
          WRITE(LUNGFO,*)'     SET PARAMETERS IN NAMELIST $TRALINN AND IPHELLIP'
          WRITE(LUNGFO,*)'     TO ZERO OR USE OTHER MAGNETIG FIELD FLAG'
          WRITE(LUNGFO,*)
          WRITE(6,*)
          WRITE(6,*)'     *** ERROR IN GFINIT ***'
c23.3.2022          WRITE(6,*)'     MAGNETIC FIELD FLAG IMAGSPLN,IRBTAB/IRBTABZY/IRBTABXYZ'
          WRITE(6,*)'     MAGNETIC FIELD FLAG IMAGSPLN'
          WRITE(6,*)'     NOT COMPATIBLE WITH CALL TO SR TRALIN'
          WRITE(6,*)'     SET PARAMETERS IN NAMELIST $TRALINN AND IPHELLIP'
          WRITE(6,*)'     TO ZERO OR USE OTHER MAGNETIG FIELD FLAG'
          WRITE(6,*)
          STOP '--- Program aborted ---'
        ENDIF
        CALL TRALIN
      ENDIF

C--- WRITE SOME RESULTS

      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
     &  '     Number of tracking steps per meter (MYINUM): ',MYINUM
      WRITE(LUNGFO,*)

      IF (XINTER.NE.-9999.) THEN

       WRITE(LUNGFO,*)'     Start of the trajectory given by XINTER:'
       WRITE(LUNGFO,*)'     X [m], Y [m], Z[m]:'
       WRITE(LUNGFO,*)'     ',SNGL(XINTER),SNGL(YSTARTO),SNGL(ZSTARTO)
       WRITE(LUNGFO,*)'     VX, VY , VZ:'
       WRITE(LUNGFO,*)'     ',SNGL(VXINO),SNGL(VYINO),SNGL(VZINO)
       WRITE(LUNGFO,*)

      ENDIF   !(XINTER.NE.-9999.)

      WRITE(LUNGFO,*)'     Start and end of the trajectory [m](XSTART,XSTOP):'
      WRITE(LUNGFO,*)'     ',SNGL(XSTART),SNGL(XSTOP)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     BMOVECUT:',SNGL(BMOVECUT)
      WRITE(LUNGFO,*)

      WRITE(LUNGFO,*)'     Initial energy [GeV] and gamma: '
     &  ,SNGL(ENEGEV),GAMMA
      WRITE(LUNGFO,*)'     Final energy [GeV] and gamma:   '
     &  ,SNGL(ENEGEV-ENEGEV*GAMMAL/DMYGAMMA),DMYGAMMA-GAMMAL
      WRITE(LUNGFO,*)'     Relative change:                '
     &  ,SNGL((DMYGAMMA-GAMMAL-GAMMA)/DMYGAMMA)
      IF (ieneloss.eq.-1) then
        if (nqfphotons.gt.0) then
          qfmean=qfmean/nqfphotons
          qfrms=sqrt((qfrms/nqfphotons-qfmean**2))
        endif
c qfrms is rms of the energy of the irradiated photons, thus
c qfrms*nqfphotons should be the sqrt(nqfphotons)*qfrms
        WRITE(LUNGFO,*)'     number of photons, RMS (keV) and rel. RMS of quantum fluctuation:'
        WRITE(LUNGFO,*)'     ',
     &    nqfphotons,
     &    sngl(qfrms*1.0d6*sqrt(dble(nqfphotons))),
     &    sngl(qfrms*sqrt(dble(nqfphotons))/dmyenergy)
      endif

      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     B-rho [Tm], current [A]: ',SNGL(DBRHO),SNGL(DMYCUR)
      WRITE(LUNGFO,*)

      WRITE(LUNGFO,*)
     &  '     Offset for vert. and hori. magnetic field (BYGOFF, BZGOFF):'
      WRITE(LUNGFO,*)
     &  '      ',SNGL(BYGOFF),SNGL(BZGOFF)
      WRITE(LUNGFO,*)
     &  '     Global scaling factor for mag. field (B0SCGLOB,A0SCGLOB):'
      WRITE(LUNGFO,*)
     &  '      ',SNGL(B0SCGLOB),SNGL(A0SCGLOB)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
     &  '     Global rel. taper (XTAPER, BTAPERV, BTAPERH):'
      WRITE(LUNGFO,*)
     &  '      ',SNGL(XTAPER),SNGL(BTAPERV),SNGL(BTAPERH)
      WRITE(LUNGFO,*)

      WRITE(LUNGFO,*)
     &  '     Long. shift [m] of device (X(e-) -> X(e-)+XSHIFT): '
     &  ,SNGL(XSHIFT)
      WRITE(LUNGFO,*)
     &  '     Vert. shift [m] of device (Y(e-) -> Y(e-)+VSHIFT): '
     &  ,SNGL(VSHIFT)
      WRITE(LUNGFO,*)
     &  '     Hori. shift [m] of device (Z(e-) -> Z(e-)+HSHIFT): '
     &  ,SNGL(HSHIFT)
      WRITE(LUNGFO,*)
     &  '     Rotation angle [degree] of device:                 '
     &  ,SNGL(XROTD)
      WRITE(LUNGFO,*)
     &  '     Y(e-) -> Y(e-)*sin(XROTD) + Y(e-)*cos(XROTD)'
      WRITE(LUNGFO,*)
     &  '     Z(e-) -> Z(e-)*cos(XROTD) - Y(e-)*sin(XROTD)'
      WRITE(LUNGFO,*)
      IF (IPERIODG.NE.0) THEN
      WRITE(LUNGFO,*)
     &  '     period length of mag. field (PERIODG):               ',SNGL(PERIODG)
      WRITE(LUNGFO,*)
     &  '     longitudinal x-offset for periodical field (PEROFFG):',SNGL(PEROFFG)
      WRITE(LUNGFO,*)
     &  '     scaling and alternating sign reverse factor (SIGNG):',SNGL(SIGNG)
      WRITE(LUNGFO,*)
     &  '     scaling and alternating sign reverse factor (SIGNG2):',SNGL(SIGNG2)
      WRITE(LUNGFO,*)
      ENDIF

      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     Magnetic field [T] at starting point:'
      WRITE(LUNGFO,*)'     ',SNGL(BXSTART),SNGL(BYSTART),SNGL(BZSTART)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     Vector potential [T-m] at starting point:'
      WRITE(LUNGFO,*)'     ',SNGL(AXSTART),SNGL(AYSTART),SNGL(AZSTART)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     Magnetic field [T] at stopping point:'
      WRITE(LUNGFO,*)'     ',SNGL(BXSTOP),SNGL(BYSTOP),SNGL(BZSTOP)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     Vector potential [T-m] at stopping point:'
      WRITE(LUNGFO,*)'     ',SNGL(AXSTOP),SNGL(AYSTOP),SNGL(AZSTOP)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
     &  '     Extrema of magnetic field [T] and the trajectory [m]:'
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     BXmax,BXmin: ',SNGL(BXMX),SNGL(BXMN)
      WRITE(LUNGFO,*)'     BYmax,BYmin: ',SNGL(BYMX),SNGL(BYMN)
      WRITE(LUNGFO,*)'     BZmax,BZmin: ',SNGL(BZMX),SNGL(BZMN)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     Xmax,Xmin: ',SNGL(XMX),SNGL(XMN)
      WRITE(LUNGFO,*)'     Ymax,Ymin: ',SNGL(YMX),SNGL(YMN)
      WRITE(LUNGFO,*)'     Zmax,Zmin: ',SNGL(ZMX),SNGL(ZMN)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
     &  '     Extrema of magnetic field [T] and the trajectory [m] between'
      WRITE(LUNGFO,*)
     &  '     XIANF and XIEND'
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     BXmaxAE,BXminAE: ',SNGL(BXMXAE),SNGL(BXMNAE)
      WRITE(LUNGFO,*)'     BYmaxAE,BYminAE: ',SNGL(BYMXAE),SNGL(BYMNAE)
      WRITE(LUNGFO,*)'     BZmaxAE,BZminAE: ',SNGL(BZMXAE),SNGL(BZMNAE)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     XmaxAE,XminAE: ',SNGL(XMXAE),SNGL(XMNAE)
      WRITE(LUNGFO,*)'     YmaxAE,YminAE: ',SNGL(YMXAE),SNGL(YMNAE)
      WRITE(LUNGFO,*)'     ZmaxAE,ZminAE: ',SNGL(ZMXAE),SNGL(ZMNAE)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
     &  '     Start values (coordinates [m] and slopes) of trajectory:'
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     X0: ',X0
      WRITE(LUNGFO,*)'     Y0: ',Y0
      WRITE(LUNGFO,*)'     Z0: ',Z0
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     ZP0:',ZP0
      WRITE(LUNGFO,*)'     YP0:',YP0
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     VX0:',VX0
      WRITE(LUNGFO,*)'     VY0:',VY0
      WRITE(LUNGFO,*)'     VZ0:',VZ0
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
     &  '     Values for X=0 (coordinates [m] and slopes) of trajectory:'
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     YCEN: ',YCEN
      WRITE(LUNGFO,*)'     ZCEN: ',ZCEN
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     YPCEN:',YPCEN
      WRITE(LUNGFO,*)'     ZPCEN:',ZPCEN
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
     &  '     End values (coordinates [m] and slopes) of trajectory:'
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     XF0: ',XF0
      WRITE(LUNGFO,*)'     YF0: ',YF0
      WRITE(LUNGFO,*)'     ZF0: ',ZF0
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     ZPF0: ',ZPF0
      WRITE(LUNGFO,*)'     YPF0: ',YPF0
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     VXF0: ',VXF0
      WRITE(LUNGFO,*)'     VYF0: ',VYF0
      WRITE(LUNGFO,*)'     VZF0: ',VZF0
      WRITE(LUNGFO,*)

      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
     &  '     Values for X=XIANF (coordinates [m] and slopes) of trajectory:'
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     XIANF: ',XIANF
      WRITE(LUNGFO,*)'     YIANF: ',YIANF
      WRITE(LUNGFO,*)'     ZIANF: ',ZIANF
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     YPIANF:',YPIANF
      WRITE(LUNGFO,*)'     ZPIANF:',ZPIANF
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)

      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
     &  '     Values for X=XIEND (coordinates [m] and slopes) of trajectory:'
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     XIEND: ',XIEND
      WRITE(LUNGFO,*)'     YIEND: ',YIEND
      WRITE(LUNGFO,*)'     ZIEND: ',ZIEND
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     YPIEND:',YPIEND
      WRITE(LUNGFO,*)'     ZPIEND:',ZPIEND
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)

      IF (XSTOP.NE.XSTART) THEN
       WRITE(LUNGFO,*)'     ZF0/(XSTOP-XSTART): ',ZF0/(XSTOP-XSTART)
       WRITE(LUNGFO,*)'     YF0/(XSTOP-XSTART): ',YF0/(XSTOP-XSTART)
      ENDIF

      IF (DABS(Z0-ZF0).GT.1.0D-5) THEN
         WRITE(LUNGFO,*)
         WRITE(LUNGFO,*)
         WRITE(LUNGFO,*)'     *** WARNING IN GFINIT ***'
         WRITE(LUNGFO,*)'     CLOSED ORBIT OFFSET EXCEEDS 1E-5 METER'
         WRITE(LUNGFO,*)
         WRITE(6,*)
         WRITE(6,*)
         WRITE(6,*)'     *** WARNING IN GFINIT ***'
         WRITE(6,*)'     CLOSED ORBIT OFFSET EXCEEDS 1E-5 METER'
         WRITE(6,*)'     ZF0-Z0:',ZF0-Z0
         WRITE(6,*)
         WRITE(6,*)
      ENDIF

      IF (DABS(ZP0-ZPF0).GT.1.0D-5) THEN
         WRITE(LUNGFO,*)
         WRITE(LUNGFO,*)
         WRITE(LUNGFO,*)'     *** WARNING IN GFINIT ***'
         WRITE(LUNGFO,*)'     CLOSED ORBIT KICK EXCEEDS 1E-5 RADIAN'
         WRITE(LUNGFO,*)
         WRITE(LUNGFO,*)
         WRITE(6,*)
         WRITE(6,*)
         WRITE(6,*)'     *** WARNING IN GFINIT ***'
         WRITE(6,*)'     CLOSED ORBIT KICK EXCEEDS 1E-5 RADIAN'
         WRITE(6,*)'     ZPF0-ZP0:',ZPF0-ZP0
         WRITE(6,*)
         WRITE(6,*)
      ENDIF

      IF (DABS(Y0-YF0).GT.1.0D-5) THEN
         WRITE(LUNGFO,*)
         WRITE(LUNGFO,*)
         WRITE(LUNGFO,*)'     *** WARNING IN GFINIT ***'
         WRITE(LUNGFO,*)'     CLOSED ORBIT OFFSET EXCEEDS 1E-5 METER'
         WRITE(LUNGFO,*)
         WRITE(6,*)
         WRITE(6,*)
         WRITE(6,*)'     *** WARNING IN GFINIT ***'
         WRITE(6,*)'     CLOSED ORBIT OFFSET EXCEEDS 1E-5 METER'
         WRITE(6,*)'     YF0-Y0:',YF0-Y0
         WRITE(6,*)
         WRITE(6,*)
      ENDIF

      IF (DABS(YP0-YPF0).GT.1.0D-5) THEN
         WRITE(LUNGFO,*)
         WRITE(LUNGFO,*)
         WRITE(LUNGFO,*)'     *** WARNING IN GFINIT ***'
         WRITE(LUNGFO,*)'     CLOSED ORBIT KICK EXCEEDS 1E-5 RADIAN'
         WRITE(LUNGFO,*)'     YPF0-YP0:',YPF0-YP0
         WRITE(LUNGFO,*)
         WRITE(LUNGFO,*)
         WRITE(6,*)
         WRITE(6,*)
         WRITE(6,*)'     *** WARNING IN GFINIT ***'
         WRITE(6,*)'     CLOSED ORBIT KICK EXCEEDS 1E-5 RADIAN'
         WRITE(6,*)'     YPF0-YP0:',YPF0-YP0
         WRITE(6,*)
         WRITE(6,*)
      ENDIF

      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     YF0-Y0:',YF0-Y0
      WRITE(LUNGFO,*)'     ZF0-Z0:',ZF0-Z0
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     YPF0-YP0:',YPF0-YP0
      WRITE(LUNGFO,*)'     ZPF0-ZP0:',ZPF0-ZP0
      WRITE(LUNGFO,*)

      WRITE(LUNGFO,*)'     Straight line fit of z(x):'
      WRITE(LUNGFO,*)'     offset:', zoffstr
      WRITE(LUNGFO,*)'     slope:', zslopetr
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     Straight line fit of vz(x)/vx(x):'
      WRITE(LUNGFO,*)'     offset:', zpoffstr
      WRITE(LUNGFO,*)'     slope:', zpslopetr
      WRITE(LUNGFO,*)

      WRITE(LUNGFO,*)'     Straight line fit of y(x):'
      WRITE(LUNGFO,*)'     offset:', yoffstr
      WRITE(LUNGFO,*)'     slope:', yslopetr
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     Straight line fit of vy(x)/vx(x):'
      WRITE(LUNGFO,*)'     offset:', ypoffstr
      WRITE(LUNGFO,*)'     slope:', ypslopetr

      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     1. magnetic integral [T-m]: '
     &  ,SNGL(BINT1X),SNGL(BINT1Y),SNGL(BINT1Z)
      WRITE(LUNGFO,*)'     2. mag. integral [T-m**2]: '
     &  ,SNGL(BINT2X),SNGL(BINT2Y),SNGL(BINT2Z)
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
     &  '     Integrated By**2 [T**2-m]:                   '
     &  ,SNGL(B2INTY)
      if (kampli.eq.0) then
        WRITE(LUNGFO,*)
     &    '     Energy irradiated by the device per e- [MeV]:'
     &    ,SNGL(PINT/DMYCUR/1.0d6)
        WRITE(LUNGFO,*)
     &    '     Rel. energy loss:                            '
     &    ,SNGL(PINT/DMYCUR/1.0d9/DMYENERGY)
        WRITE(LUNGFO,*)
     &    '     Power irradiated by the device [kWATT]:      '
     &    ,SNGL(PINT/1000.)
      else
        WRITE(LUNGFO,*)
     &    '     Energy irradiated by the device per e- [MeV]:'
     &    ,SNGL(PINT/DMYCUR/1.0d6*iabs(kampli))
        WRITE(LUNGFO,*)
     &    '     Rel. energy loss:                            '
     &    ,SNGL(PINT/DMYCUR/1.0d9/DMYENERGY*iabs(kampli))
        WRITE(LUNGFO,*)
     &    '     Power irradiated by the device [kWATT]:      '
     &    ,SNGL(PINT/1000.*iabs(kampli))
      endif

      IF (IAMPLI.GT.0) THEN
        WRITE(LUNGFO,*)'     (Option IAMPLI not taken into account!!)'
      ENDIF

      IF (IAMPLI.LT.0) THEN
        WRITE(LUNGFO,*)'     scaled according to IAMPLI:     '
     &    ,SNGL(PINT/1000.*(-IAMPLI))
      ENDIF !IAMPLI

      IF (IAMPLI.lt.0.and.icluster.ne.0) THEN
        write(6,*)"*** Warning in GFINIT: IAMPLI < 0 and ICLUSTER <> 0 may cause problems, be careful ***"
        write(lungfo,*)"*** Warning in GFINIT: IAMPLI < 0 and ICLUSTER <> 0 may cause problems, be careful ***"
      endif

      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)
     &  '     Length of trajectory (BINT0) [m]:'
      WRITE(LUNGFO,*)
     &  '     ',BINT0
      WRITE(LUNGFO,*)
     &  '     Integrated (YP**2+ZP**2)/2 of trajectory (WTRA2I) [m]:'
      WRITE(LUNGFO,*)
     &  '     ',WTRA2I

      IF (HTRA2I.NE.0.0D0) THEN
        WRITE(LUNGFO,*)
     &    '     corresponding phase advance [nm and eV]:'
        WRITE(LUNGFO,*)
     &    '     ',HTRA2I*1.0D9
     &    ,CLIGHT1*HPLANCK1/ECHARGE1/HTRA2I
      ELSE
        WRITE(LUNGFO,*)
     &    '     corresponding phase advance [nm and eV]:'
        WRITE(LUNGFO,*)
     &    '     ',SNGL(HTRA2I*1.0D9),'    0.000'
      ENDIF

      WRITE(LUNGFO,*)
     &    '     dE/E and corresponding dL = 2 * dE/E * L [nm]:'
      WRITE(LUNGFO,*)
     &  '     ',SNGL(ESPREAD)
     &  ,SNGL(2.0D9*ESPREAD*WTRA2I)

      WRITE(LUNGFO,*)
     &  '     Circumference of the ring [m]:              ',SNGL( UMFANG  )
      WRITE(LUNGFO,*)
     &  '     Rel. change of total circumference (from BINT0):         '
      WRITE(LUNGFO,*)
     &  '     ',SNGL((BINT0+XSTART-XSTOP)/UMFANG  )
      WRITE(LUNGFO,*)
     &  '     Rel. change of total circumference (from WTRA2I):'
      WRITE(LUNGFO,*)
     &  '     ',SNGL(WTRA2I/UMFANG  )
      WRITE(LUNGFO,*)
      WRITE(LUNGFO,*)'     Max. and min. deflection angle [rad]: '
     &  ,SNGL(PHIMX),SNGL(PHIMN)
      WRITE(LUNGFO,*)

      IF (IBEAMPOL.NE.0) THEN
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)'     Beam polarization time (time constant) [h]: '
     &    ,SNGL (TAUPOL)
        WRITE(LUNGFO,*)'     Reduction factor due to device:             '
     &    ,SNGL (POLFAC)
        WRITE(LUNGFO,*)'     Final level of beam polarization:           '
     &    ,SNGL (POLLEV)
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)'     Same numbers for a beam energy of 1 GeV:    '
     &    ,SNGL(TAUPL1G)
        WRITE(LUNGFO,*)'                                                 '
     &    ,SNGL(POLFC1G)
        WRITE(LUNGFO,*)'                                                 '
     &    ,SNGL(POLLV1G)
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)
     &    '     Critical polarization time (TAUKRIT) and corresponding beam'
        WRITE(LUNGFO,*)
     &    '     energy [GeV], reduction factor, and final polarization level:'
        WRITE(LUNGFO,*)'     '
     &    ,SNGL(TAUKRIT),SNGL(EMINPOL),SNGL(POLFCEP),SNGL(POLLVEP)
        WRITE(LUNGFO,*)
        WRITE(LUNGFO,*)
     &    '     Integrals of By**3, |By|**3 of device and integral of By**3'
        WRITE(LUNGFO,*)'     of ring [T-m**3]:'
     &    ,SNGL(BINT3Y),SNGL(BINT3YA),SNGL(6.283185*RDIPOL*BDIPOL**3)
      ENDIF !IBEAMPOL

      IF (IDISPER.NE.0.OR.IBEAMPOL.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'     Bending radius of the ring dipoles [m]: '
     &      ,SNGL(RDIPOL)
          WRITE(LUNGFO,*)'     Circumference of the ring [m]:          '
     &      ,SNGL(UMFANG)
          WRITE(LUNGFO,*)
      ENDIF

      IF (IDISPER.NE.0) THEN
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'     BETA FUNCTION FOR WLS:      ',SNGL(BETFUN)
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)'     INTEGRAL I2 OF RING:        ',SNGL(DI2RING)
          WRITE(LUNGFO,*)'     INTEGRAL I4 OF RING:        ',SNGL(DI4RING)
          WRITE(LUNGFO,*)'     INTEGRAL I5 OF RING:        ',SNGL(DI5RING)
          WRITE(LUNGFO,*)
          WRITE(LUNGFO,*)
      ENDIF

C--- ADJUST SOMETHING

      IF (IJUST.NE.0) THEN !SEE ABOVE
         XJUST=HSHIFT
         YJUST=ZF0
         WRITE(6,*)'HSHIFT, ZF0:', HSHIFT,ZF0
         CALL WLSJUST(XJUST,YJUST)
         IF (IJUST.LE.3) THEN
            IABEND=2
            WRITE(LUNGFO,*)
            WRITE(LUNGFO,*)'     HSHIFT ADJUSTED'
            WRITE(LUNGFO,*)
            RETURN
         ENDIF
      ENDIF

C--- HBOOK

      IF (IHBOOK.NE.0) CALL HISINI

C--- WRITE B-FIELD TO FILE

      IF (IWBTAB.NE.0) CALL WBTAB

C--- WRITE B-FIELD TO MAP FILE

      IF (IWBMAP.NE.0) CALL WBMAP

C--- CALCULATE 3D POLYNOMIAL-COEFFICIENTS OF B-FIELD AND EXIT

      IF (IWBPOLY3D.NE.0) THEN
          CALL BPOLY3DFIT
          IABEND=3
          goto 9999
      ENDIF

C--- CALCULATE 3D POLYNOMIAL-COEFFICIENTS OF B-FIELD AND EXIT

      IF (IWBPOLY2DH.NE.0) THEN
          CALL BPOLY2DHFIT
          IABEND=3
          goto 9999
      ENDIF

      IF (IWBPHARM.NE.0) THEN
          CALL BPHARMFIT
          IABEND=3
          goto 9999
      ENDIF

      IF (IHTRACK.NE.0) CALL HTRACK

      if (icluster.ne.0.and.ispecmode.eq.3) then
        PRINT *,
     &      '*** Warning in GFINIT: ICLUSTER .NE. 0 but ISPECMODE=3 ***'
        print*,"*** BE CAREFUL ***"
      endif

      if (icluster.ne.0.and.ispecmode.eq.3) then
        PRINT *,
     &      '*** Warning in GFINIT: ICLUSTER .NE. 0 but ISPECMODE=3 ***'
        print*,"*** BE CAREFUL ***"
      endif

      if (iemit.ne.0.or.ibunch.ne.0) imagspln=0

      if (phrxbeta.eq.-9999.0d0) xbetfun=xstart

      if (abs(phrxbeta).eq.9999.0d0) then
        phrxbeta=xstart
      endif

      if (phrbunlen.eq.9999.0d0) then
        phrbunlen=bunchlen
      endif
      if (phrbunlen.eq.-9999.0d0) then
        phrbunlen=ampbunchlen
      endif

      if (phrbetah.eq.9999.0d0) then
        phrbetah=betah
      endif
      if (phralphah.eq.9999.0d0) then
        phralphah=-betaph/2.0d0
      endif

      if (phrdisph.eq.9999.0d0) then
        phrdisph=disp0
      endif

      if (phrdispph.eq.9999.0d0) then
        phrdisph=ddisp0
      endif

      if (phrbetav.eq.9999.0d0) then
        phrbetav=betav
      endif
      if (phralphav.eq.9999.0d0) then
        phralphav=-betapv/2.0d0
      endif

      if (phremith.eq.9999.0d0) then
        phremith=eps0h
      endif

      if (phremitv.eq.9999.0d0) then
        phremitv=eps0v
      endif

      if (phrespread.eq.9999.0d0) then
        phrespread=delgam
      endif

      if (phrespread.eq.-9999.0d0) then
        phrespread=espread
      endif

      if (phremith.eq.9999.0d0) then
        phremith=eps0h
      endif

      if (phremith.eq.-9999.0d0) then
        phremith=bsigz(1)*bsigzp(1)
        phralphah=0.0d0
      endif

      if (phremitv.eq.-9999.0d0) then
        phremitv=bsigy(1)*bsigyp(1)
        phralphav=0.0d0
      endif

      if (phrbetah.eq.-9999.0d0) then
        phrbetah=bsigz(1)**2/phremith
        phralphah=0.0d0
      endif

      if (phrbetav.eq.-9999.0d0) then
        phrbetav=bsigy(1)**2/phremitv
        phralphav=0.0d0
      endif

      return

9999  iroottrees=0

      return
      END
